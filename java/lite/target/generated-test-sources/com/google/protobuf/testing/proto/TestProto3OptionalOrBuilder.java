// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_proto3_optional.proto

package com.google.protobuf.testing.proto;

public interface TestProto3OptionalOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestProto3Optional)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Singular
   * </pre>
   *
   * <code>int32 optional_int32 = 1;</code>
   * @return Whether the optionalInt32 field is set.
   */
  boolean hasOptionalInt32();
  /**
   * <pre>
   * Singular
   * </pre>
   *
   * <code>int32 optional_int32 = 1;</code>
   * @return The optionalInt32.
   */
  int getOptionalInt32();

  /**
   * <code>int64 optional_int64 = 2;</code>
   * @return Whether the optionalInt64 field is set.
   */
  boolean hasOptionalInt64();
  /**
   * <code>int64 optional_int64 = 2;</code>
   * @return The optionalInt64.
   */
  long getOptionalInt64();

  /**
   * <code>uint32 optional_uint32 = 3;</code>
   * @return Whether the optionalUint32 field is set.
   */
  boolean hasOptionalUint32();
  /**
   * <code>uint32 optional_uint32 = 3;</code>
   * @return The optionalUint32.
   */
  int getOptionalUint32();

  /**
   * <code>uint64 optional_uint64 = 4;</code>
   * @return Whether the optionalUint64 field is set.
   */
  boolean hasOptionalUint64();
  /**
   * <code>uint64 optional_uint64 = 4;</code>
   * @return The optionalUint64.
   */
  long getOptionalUint64();

  /**
   * <code>sint32 optional_sint32 = 5;</code>
   * @return Whether the optionalSint32 field is set.
   */
  boolean hasOptionalSint32();
  /**
   * <code>sint32 optional_sint32 = 5;</code>
   * @return The optionalSint32.
   */
  int getOptionalSint32();

  /**
   * <code>sint64 optional_sint64 = 6;</code>
   * @return Whether the optionalSint64 field is set.
   */
  boolean hasOptionalSint64();
  /**
   * <code>sint64 optional_sint64 = 6;</code>
   * @return The optionalSint64.
   */
  long getOptionalSint64();

  /**
   * <code>fixed32 optional_fixed32 = 7;</code>
   * @return Whether the optionalFixed32 field is set.
   */
  boolean hasOptionalFixed32();
  /**
   * <code>fixed32 optional_fixed32 = 7;</code>
   * @return The optionalFixed32.
   */
  int getOptionalFixed32();

  /**
   * <code>fixed64 optional_fixed64 = 8;</code>
   * @return Whether the optionalFixed64 field is set.
   */
  boolean hasOptionalFixed64();
  /**
   * <code>fixed64 optional_fixed64 = 8;</code>
   * @return The optionalFixed64.
   */
  long getOptionalFixed64();

  /**
   * <code>sfixed32 optional_sfixed32 = 9;</code>
   * @return Whether the optionalSfixed32 field is set.
   */
  boolean hasOptionalSfixed32();
  /**
   * <code>sfixed32 optional_sfixed32 = 9;</code>
   * @return The optionalSfixed32.
   */
  int getOptionalSfixed32();

  /**
   * <code>sfixed64 optional_sfixed64 = 10;</code>
   * @return Whether the optionalSfixed64 field is set.
   */
  boolean hasOptionalSfixed64();
  /**
   * <code>sfixed64 optional_sfixed64 = 10;</code>
   * @return The optionalSfixed64.
   */
  long getOptionalSfixed64();

  /**
   * <code>float optional_float = 11;</code>
   * @return Whether the optionalFloat field is set.
   */
  boolean hasOptionalFloat();
  /**
   * <code>float optional_float = 11;</code>
   * @return The optionalFloat.
   */
  float getOptionalFloat();

  /**
   * <code>double optional_double = 12;</code>
   * @return Whether the optionalDouble field is set.
   */
  boolean hasOptionalDouble();
  /**
   * <code>double optional_double = 12;</code>
   * @return The optionalDouble.
   */
  double getOptionalDouble();

  /**
   * <code>bool optional_bool = 13;</code>
   * @return Whether the optionalBool field is set.
   */
  boolean hasOptionalBool();
  /**
   * <code>bool optional_bool = 13;</code>
   * @return The optionalBool.
   */
  boolean getOptionalBool();

  /**
   * <code>string optional_string = 14;</code>
   * @return Whether the optionalString field is set.
   */
  boolean hasOptionalString();
  /**
   * <code>string optional_string = 14;</code>
   * @return The optionalString.
   */
  java.lang.String getOptionalString();
  /**
   * <code>string optional_string = 14;</code>
   * @return The bytes for optionalString.
   */
  com.google.protobuf.ByteString
      getOptionalStringBytes();

  /**
   * <code>bytes optional_bytes = 15;</code>
   * @return Whether the optionalBytes field is set.
   */
  boolean hasOptionalBytes();
  /**
   * <code>bytes optional_bytes = 15;</code>
   * @return The optionalBytes.
   */
  com.google.protobuf.ByteString getOptionalBytes();

  /**
   * <code>string optional_cord = 16 [ctype = CORD];</code>
   * @return Whether the optionalCord field is set.
   */
  boolean hasOptionalCord();
  /**
   * <code>string optional_cord = 16 [ctype = CORD];</code>
   * @return The optionalCord.
   */
  java.lang.String getOptionalCord();
  /**
   * <code>string optional_cord = 16 [ctype = CORD];</code>
   * @return The bytes for optionalCord.
   */
  com.google.protobuf.ByteString
      getOptionalCordBytes();

  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
   * @return Whether the optionalNestedMessage field is set.
   */
  boolean hasOptionalNestedMessage();
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
   * @return The optionalNestedMessage.
   */
  com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getOptionalNestedMessage();

  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
   * @return Whether the lazyNestedMessage field is set.
   */
  boolean hasLazyNestedMessage();
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
   * @return The lazyNestedMessage.
   */
  com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getLazyNestedMessage();

  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @return Whether the optionalNestedEnum field is set.
   */
  boolean hasOptionalNestedEnum();
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @return The enum numeric value on the wire for optionalNestedEnum.
   */
  int getOptionalNestedEnumValue();
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @return The optionalNestedEnum.
   */
  com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum getOptionalNestedEnum();

  /**
   * <pre>
   * Add some non-optional fields to verify we can mix them.
   * </pre>
   *
   * <code>int32 singular_int32 = 22;</code>
   * @return The singularInt32.
   */
  int getSingularInt32();

  /**
   * <code>int64 singular_int64 = 23;</code>
   * @return The singularInt64.
   */
  long getSingularInt64();
}
