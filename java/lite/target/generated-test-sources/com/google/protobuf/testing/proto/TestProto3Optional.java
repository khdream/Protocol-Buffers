// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_proto3_optional.proto

package com.google.protobuf.testing.proto;

/**
 * Protobuf type {@code protobuf_unittest.TestProto3Optional}
 */
public  final class TestProto3Optional extends
    com.google.protobuf.GeneratedMessageLite<
        TestProto3Optional, TestProto3Optional.Builder> implements
    // @@protoc_insertion_point(message_implements:protobuf_unittest.TestProto3Optional)
    TestProto3OptionalOrBuilder {
  private TestProto3Optional() {
    optionalString_ = "";
    optionalBytes_ = com.google.protobuf.ByteString.EMPTY;
    optionalCord_ = "";
  }
  /**
   * Protobuf enum {@code protobuf_unittest.TestProto3Optional.NestedEnum}
   */
  public enum NestedEnum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <code>FOO = 1;</code>
     */
    FOO(1),
    /**
     * <code>BAR = 2;</code>
     */
    BAR(2),
    /**
     * <code>BAZ = 3;</code>
     */
    BAZ(3),
    /**
     * <pre>
     * Intentionally negative.
     * </pre>
     *
     * <code>NEG = -1;</code>
     */
    NEG(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <code>FOO = 1;</code>
     */
    public static final int FOO_VALUE = 1;
    /**
     * <code>BAR = 2;</code>
     */
    public static final int BAR_VALUE = 2;
    /**
     * <code>BAZ = 3;</code>
     */
    public static final int BAZ_VALUE = 3;
    /**
     * <pre>
     * Intentionally negative.
     * </pre>
     *
     * <code>NEG = -1;</code>
     */
    public static final int NEG_VALUE = -1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NestedEnum valueOf(int value) {
      return forNumber(value);
    }

    public static NestedEnum forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return FOO;
        case 2: return BAR;
        case 3: return BAZ;
        case -1: return NEG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NestedEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NestedEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NestedEnum>() {
            @java.lang.Override
            public NestedEnum findValueByNumber(int number) {
              return NestedEnum.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return NestedEnumVerifier.INSTANCE;
    }

    private static final class NestedEnumVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new NestedEnumVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return NestedEnum.forNumber(number) != null;
            }
          };

    private final int value;

    private NestedEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protobuf_unittest.TestProto3Optional.NestedEnum)
  }

  public interface NestedMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf_unittest.TestProto3Optional.NestedMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The field name "b" fails to compile in proto1 because it conflicts with
     * a local variable named "b" in one of the generated methods.  Doh.
     * This file needs to compile in proto1 to test backwards-compatibility.
     * </pre>
     *
     * <code>int32 bb = 1;</code>
     * @return Whether the bb field is set.
     */
    boolean hasBb();
    /**
     * <pre>
     * The field name "b" fails to compile in proto1 because it conflicts with
     * a local variable named "b" in one of the generated methods.  Doh.
     * This file needs to compile in proto1 to test backwards-compatibility.
     * </pre>
     *
     * <code>int32 bb = 1;</code>
     * @return The bb.
     */
    int getBb();
  }
  /**
   * Protobuf type {@code protobuf_unittest.TestProto3Optional.NestedMessage}
   */
  public  static final class NestedMessage extends
      com.google.protobuf.GeneratedMessageLite<
          NestedMessage, NestedMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:protobuf_unittest.TestProto3Optional.NestedMessage)
      NestedMessageOrBuilder {
    private NestedMessage() {
    }
    private int bitField0_;
    public static final int BB_FIELD_NUMBER = 1;
    private int bb_;
    /**
     * <pre>
     * The field name "b" fails to compile in proto1 because it conflicts with
     * a local variable named "b" in one of the generated methods.  Doh.
     * This file needs to compile in proto1 to test backwards-compatibility.
     * </pre>
     *
     * <code>int32 bb = 1;</code>
     * @return Whether the bb field is set.
     */
    @java.lang.Override
    public boolean hasBb() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The field name "b" fails to compile in proto1 because it conflicts with
     * a local variable named "b" in one of the generated methods.  Doh.
     * This file needs to compile in proto1 to test backwards-compatibility.
     * </pre>
     *
     * <code>int32 bb = 1;</code>
     * @return The bb.
     */
    @java.lang.Override
    public int getBb() {
      return bb_;
    }
    /**
     * <pre>
     * The field name "b" fails to compile in proto1 because it conflicts with
     * a local variable named "b" in one of the generated methods.  Doh.
     * This file needs to compile in proto1 to test backwards-compatibility.
     * </pre>
     *
     * <code>int32 bb = 1;</code>
     * @param value The bb to set.
     */
    private void setBb(int value) {
      bitField0_ |= 0x00000001;
      bb_ = value;
    }
    /**
     * <pre>
     * The field name "b" fails to compile in proto1 because it conflicts with
     * a local variable named "b" in one of the generated methods.  Doh.
     * This file needs to compile in proto1 to test backwards-compatibility.
     * </pre>
     *
     * <code>int32 bb = 1;</code>
     */
    private void clearBb() {
      bitField0_ = (bitField0_ & ~0x00000001);
      bb_ = 0;
    }

    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protobuf_unittest.TestProto3Optional.NestedMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestProto3Optional.NestedMessage)
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessageOrBuilder {
      // Construct using com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The field name "b" fails to compile in proto1 because it conflicts with
       * a local variable named "b" in one of the generated methods.  Doh.
       * This file needs to compile in proto1 to test backwards-compatibility.
       * </pre>
       *
       * <code>int32 bb = 1;</code>
       * @return Whether the bb field is set.
       */
      @java.lang.Override
      public boolean hasBb() {
        return instance.hasBb();
      }
      /**
       * <pre>
       * The field name "b" fails to compile in proto1 because it conflicts with
       * a local variable named "b" in one of the generated methods.  Doh.
       * This file needs to compile in proto1 to test backwards-compatibility.
       * </pre>
       *
       * <code>int32 bb = 1;</code>
       * @return The bb.
       */
      @java.lang.Override
      public int getBb() {
        return instance.getBb();
      }
      /**
       * <pre>
       * The field name "b" fails to compile in proto1 because it conflicts with
       * a local variable named "b" in one of the generated methods.  Doh.
       * This file needs to compile in proto1 to test backwards-compatibility.
       * </pre>
       *
       * <code>int32 bb = 1;</code>
       * @param value The bb to set.
       * @return This builder for chaining.
       */
      public Builder setBb(int value) {
        copyOnWrite();
        instance.setBb(value);
        return this;
      }
      /**
       * <pre>
       * The field name "b" fails to compile in proto1 because it conflicts with
       * a local variable named "b" in one of the generated methods.  Doh.
       * This file needs to compile in proto1 to test backwards-compatibility.
       * </pre>
       *
       * <code>int32 bb = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBb() {
        copyOnWrite();
        instance.clearBb();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestProto3Optional.NestedMessage)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "bb_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1004\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestProto3Optional.NestedMessage)
    private static final com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage DEFAULT_INSTANCE;
    static {
      NestedMessage defaultInstance = new NestedMessage();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        NestedMessage.class, defaultInstance);
    }

    public static com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<NestedMessage> PARSER;

    public static com.google.protobuf.Parser<NestedMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int OPTIONAL_INT32_FIELD_NUMBER = 1;
  private int optionalInt32_;
  /**
   * <pre>
   * Singular
   * </pre>
   *
   * <code>int32 optional_int32 = 1;</code>
   * @return Whether the optionalInt32 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalInt32() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Singular
   * </pre>
   *
   * <code>int32 optional_int32 = 1;</code>
   * @return The optionalInt32.
   */
  @java.lang.Override
  public int getOptionalInt32() {
    return optionalInt32_;
  }
  /**
   * <pre>
   * Singular
   * </pre>
   *
   * <code>int32 optional_int32 = 1;</code>
   * @param value The optionalInt32 to set.
   */
  private void setOptionalInt32(int value) {
    bitField0_ |= 0x00000001;
    optionalInt32_ = value;
  }
  /**
   * <pre>
   * Singular
   * </pre>
   *
   * <code>int32 optional_int32 = 1;</code>
   */
  private void clearOptionalInt32() {
    bitField0_ = (bitField0_ & ~0x00000001);
    optionalInt32_ = 0;
  }

  public static final int OPTIONAL_INT64_FIELD_NUMBER = 2;
  private long optionalInt64_;
  /**
   * <code>int64 optional_int64 = 2;</code>
   * @return Whether the optionalInt64 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalInt64() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>int64 optional_int64 = 2;</code>
   * @return The optionalInt64.
   */
  @java.lang.Override
  public long getOptionalInt64() {
    return optionalInt64_;
  }
  /**
   * <code>int64 optional_int64 = 2;</code>
   * @param value The optionalInt64 to set.
   */
  private void setOptionalInt64(long value) {
    bitField0_ |= 0x00000002;
    optionalInt64_ = value;
  }
  /**
   * <code>int64 optional_int64 = 2;</code>
   */
  private void clearOptionalInt64() {
    bitField0_ = (bitField0_ & ~0x00000002);
    optionalInt64_ = 0L;
  }

  public static final int OPTIONAL_UINT32_FIELD_NUMBER = 3;
  private int optionalUint32_;
  /**
   * <code>uint32 optional_uint32 = 3;</code>
   * @return Whether the optionalUint32 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalUint32() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>uint32 optional_uint32 = 3;</code>
   * @return The optionalUint32.
   */
  @java.lang.Override
  public int getOptionalUint32() {
    return optionalUint32_;
  }
  /**
   * <code>uint32 optional_uint32 = 3;</code>
   * @param value The optionalUint32 to set.
   */
  private void setOptionalUint32(int value) {
    bitField0_ |= 0x00000004;
    optionalUint32_ = value;
  }
  /**
   * <code>uint32 optional_uint32 = 3;</code>
   */
  private void clearOptionalUint32() {
    bitField0_ = (bitField0_ & ~0x00000004);
    optionalUint32_ = 0;
  }

  public static final int OPTIONAL_UINT64_FIELD_NUMBER = 4;
  private long optionalUint64_;
  /**
   * <code>uint64 optional_uint64 = 4;</code>
   * @return Whether the optionalUint64 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalUint64() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>uint64 optional_uint64 = 4;</code>
   * @return The optionalUint64.
   */
  @java.lang.Override
  public long getOptionalUint64() {
    return optionalUint64_;
  }
  /**
   * <code>uint64 optional_uint64 = 4;</code>
   * @param value The optionalUint64 to set.
   */
  private void setOptionalUint64(long value) {
    bitField0_ |= 0x00000008;
    optionalUint64_ = value;
  }
  /**
   * <code>uint64 optional_uint64 = 4;</code>
   */
  private void clearOptionalUint64() {
    bitField0_ = (bitField0_ & ~0x00000008);
    optionalUint64_ = 0L;
  }

  public static final int OPTIONAL_SINT32_FIELD_NUMBER = 5;
  private int optionalSint32_;
  /**
   * <code>sint32 optional_sint32 = 5;</code>
   * @return Whether the optionalSint32 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalSint32() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <code>sint32 optional_sint32 = 5;</code>
   * @return The optionalSint32.
   */
  @java.lang.Override
  public int getOptionalSint32() {
    return optionalSint32_;
  }
  /**
   * <code>sint32 optional_sint32 = 5;</code>
   * @param value The optionalSint32 to set.
   */
  private void setOptionalSint32(int value) {
    bitField0_ |= 0x00000010;
    optionalSint32_ = value;
  }
  /**
   * <code>sint32 optional_sint32 = 5;</code>
   */
  private void clearOptionalSint32() {
    bitField0_ = (bitField0_ & ~0x00000010);
    optionalSint32_ = 0;
  }

  public static final int OPTIONAL_SINT64_FIELD_NUMBER = 6;
  private long optionalSint64_;
  /**
   * <code>sint64 optional_sint64 = 6;</code>
   * @return Whether the optionalSint64 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalSint64() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <code>sint64 optional_sint64 = 6;</code>
   * @return The optionalSint64.
   */
  @java.lang.Override
  public long getOptionalSint64() {
    return optionalSint64_;
  }
  /**
   * <code>sint64 optional_sint64 = 6;</code>
   * @param value The optionalSint64 to set.
   */
  private void setOptionalSint64(long value) {
    bitField0_ |= 0x00000020;
    optionalSint64_ = value;
  }
  /**
   * <code>sint64 optional_sint64 = 6;</code>
   */
  private void clearOptionalSint64() {
    bitField0_ = (bitField0_ & ~0x00000020);
    optionalSint64_ = 0L;
  }

  public static final int OPTIONAL_FIXED32_FIELD_NUMBER = 7;
  private int optionalFixed32_;
  /**
   * <code>fixed32 optional_fixed32 = 7;</code>
   * @return Whether the optionalFixed32 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalFixed32() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <code>fixed32 optional_fixed32 = 7;</code>
   * @return The optionalFixed32.
   */
  @java.lang.Override
  public int getOptionalFixed32() {
    return optionalFixed32_;
  }
  /**
   * <code>fixed32 optional_fixed32 = 7;</code>
   * @param value The optionalFixed32 to set.
   */
  private void setOptionalFixed32(int value) {
    bitField0_ |= 0x00000040;
    optionalFixed32_ = value;
  }
  /**
   * <code>fixed32 optional_fixed32 = 7;</code>
   */
  private void clearOptionalFixed32() {
    bitField0_ = (bitField0_ & ~0x00000040);
    optionalFixed32_ = 0;
  }

  public static final int OPTIONAL_FIXED64_FIELD_NUMBER = 8;
  private long optionalFixed64_;
  /**
   * <code>fixed64 optional_fixed64 = 8;</code>
   * @return Whether the optionalFixed64 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalFixed64() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <code>fixed64 optional_fixed64 = 8;</code>
   * @return The optionalFixed64.
   */
  @java.lang.Override
  public long getOptionalFixed64() {
    return optionalFixed64_;
  }
  /**
   * <code>fixed64 optional_fixed64 = 8;</code>
   * @param value The optionalFixed64 to set.
   */
  private void setOptionalFixed64(long value) {
    bitField0_ |= 0x00000080;
    optionalFixed64_ = value;
  }
  /**
   * <code>fixed64 optional_fixed64 = 8;</code>
   */
  private void clearOptionalFixed64() {
    bitField0_ = (bitField0_ & ~0x00000080);
    optionalFixed64_ = 0L;
  }

  public static final int OPTIONAL_SFIXED32_FIELD_NUMBER = 9;
  private int optionalSfixed32_;
  /**
   * <code>sfixed32 optional_sfixed32 = 9;</code>
   * @return Whether the optionalSfixed32 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalSfixed32() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <code>sfixed32 optional_sfixed32 = 9;</code>
   * @return The optionalSfixed32.
   */
  @java.lang.Override
  public int getOptionalSfixed32() {
    return optionalSfixed32_;
  }
  /**
   * <code>sfixed32 optional_sfixed32 = 9;</code>
   * @param value The optionalSfixed32 to set.
   */
  private void setOptionalSfixed32(int value) {
    bitField0_ |= 0x00000100;
    optionalSfixed32_ = value;
  }
  /**
   * <code>sfixed32 optional_sfixed32 = 9;</code>
   */
  private void clearOptionalSfixed32() {
    bitField0_ = (bitField0_ & ~0x00000100);
    optionalSfixed32_ = 0;
  }

  public static final int OPTIONAL_SFIXED64_FIELD_NUMBER = 10;
  private long optionalSfixed64_;
  /**
   * <code>sfixed64 optional_sfixed64 = 10;</code>
   * @return Whether the optionalSfixed64 field is set.
   */
  @java.lang.Override
  public boolean hasOptionalSfixed64() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <code>sfixed64 optional_sfixed64 = 10;</code>
   * @return The optionalSfixed64.
   */
  @java.lang.Override
  public long getOptionalSfixed64() {
    return optionalSfixed64_;
  }
  /**
   * <code>sfixed64 optional_sfixed64 = 10;</code>
   * @param value The optionalSfixed64 to set.
   */
  private void setOptionalSfixed64(long value) {
    bitField0_ |= 0x00000200;
    optionalSfixed64_ = value;
  }
  /**
   * <code>sfixed64 optional_sfixed64 = 10;</code>
   */
  private void clearOptionalSfixed64() {
    bitField0_ = (bitField0_ & ~0x00000200);
    optionalSfixed64_ = 0L;
  }

  public static final int OPTIONAL_FLOAT_FIELD_NUMBER = 11;
  private float optionalFloat_;
  /**
   * <code>float optional_float = 11;</code>
   * @return Whether the optionalFloat field is set.
   */
  @java.lang.Override
  public boolean hasOptionalFloat() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <code>float optional_float = 11;</code>
   * @return The optionalFloat.
   */
  @java.lang.Override
  public float getOptionalFloat() {
    return optionalFloat_;
  }
  /**
   * <code>float optional_float = 11;</code>
   * @param value The optionalFloat to set.
   */
  private void setOptionalFloat(float value) {
    bitField0_ |= 0x00000400;
    optionalFloat_ = value;
  }
  /**
   * <code>float optional_float = 11;</code>
   */
  private void clearOptionalFloat() {
    bitField0_ = (bitField0_ & ~0x00000400);
    optionalFloat_ = 0F;
  }

  public static final int OPTIONAL_DOUBLE_FIELD_NUMBER = 12;
  private double optionalDouble_;
  /**
   * <code>double optional_double = 12;</code>
   * @return Whether the optionalDouble field is set.
   */
  @java.lang.Override
  public boolean hasOptionalDouble() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <code>double optional_double = 12;</code>
   * @return The optionalDouble.
   */
  @java.lang.Override
  public double getOptionalDouble() {
    return optionalDouble_;
  }
  /**
   * <code>double optional_double = 12;</code>
   * @param value The optionalDouble to set.
   */
  private void setOptionalDouble(double value) {
    bitField0_ |= 0x00000800;
    optionalDouble_ = value;
  }
  /**
   * <code>double optional_double = 12;</code>
   */
  private void clearOptionalDouble() {
    bitField0_ = (bitField0_ & ~0x00000800);
    optionalDouble_ = 0D;
  }

  public static final int OPTIONAL_BOOL_FIELD_NUMBER = 13;
  private boolean optionalBool_;
  /**
   * <code>bool optional_bool = 13;</code>
   * @return Whether the optionalBool field is set.
   */
  @java.lang.Override
  public boolean hasOptionalBool() {
    return ((bitField0_ & 0x00001000) != 0);
  }
  /**
   * <code>bool optional_bool = 13;</code>
   * @return The optionalBool.
   */
  @java.lang.Override
  public boolean getOptionalBool() {
    return optionalBool_;
  }
  /**
   * <code>bool optional_bool = 13;</code>
   * @param value The optionalBool to set.
   */
  private void setOptionalBool(boolean value) {
    bitField0_ |= 0x00001000;
    optionalBool_ = value;
  }
  /**
   * <code>bool optional_bool = 13;</code>
   */
  private void clearOptionalBool() {
    bitField0_ = (bitField0_ & ~0x00001000);
    optionalBool_ = false;
  }

  public static final int OPTIONAL_STRING_FIELD_NUMBER = 14;
  private java.lang.String optionalString_;
  /**
   * <code>string optional_string = 14;</code>
   * @return Whether the optionalString field is set.
   */
  @java.lang.Override
  public boolean hasOptionalString() {
    return ((bitField0_ & 0x00002000) != 0);
  }
  /**
   * <code>string optional_string = 14;</code>
   * @return The optionalString.
   */
  @java.lang.Override
  public java.lang.String getOptionalString() {
    return optionalString_;
  }
  /**
   * <code>string optional_string = 14;</code>
   * @return The bytes for optionalString.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOptionalStringBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(optionalString_);
  }
  /**
   * <code>string optional_string = 14;</code>
   * @param value The optionalString to set.
   */
  private void setOptionalString(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00002000;
    optionalString_ = value;
  }
  /**
   * <code>string optional_string = 14;</code>
   */
  private void clearOptionalString() {
    bitField0_ = (bitField0_ & ~0x00002000);
    optionalString_ = getDefaultInstance().getOptionalString();
  }
  /**
   * <code>string optional_string = 14;</code>
   * @param value The bytes for optionalString to set.
   */
  private void setOptionalStringBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    optionalString_ = value.toStringUtf8();
    bitField0_ |= 0x00002000;
  }

  public static final int OPTIONAL_BYTES_FIELD_NUMBER = 15;
  private com.google.protobuf.ByteString optionalBytes_;
  /**
   * <code>bytes optional_bytes = 15;</code>
   * @return Whether the optionalBytes field is set.
   */
  @java.lang.Override
  public boolean hasOptionalBytes() {
    return ((bitField0_ & 0x00004000) != 0);
  }
  /**
   * <code>bytes optional_bytes = 15;</code>
   * @return The optionalBytes.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getOptionalBytes() {
    return optionalBytes_;
  }
  /**
   * <code>bytes optional_bytes = 15;</code>
   * @param value The optionalBytes to set.
   */
  private void setOptionalBytes(com.google.protobuf.ByteString value) {
    value.getClass();
  bitField0_ |= 0x00004000;
    optionalBytes_ = value;
  }
  /**
   * <code>bytes optional_bytes = 15;</code>
   */
  private void clearOptionalBytes() {
    bitField0_ = (bitField0_ & ~0x00004000);
    optionalBytes_ = getDefaultInstance().getOptionalBytes();
  }

  public static final int OPTIONAL_CORD_FIELD_NUMBER = 16;
  private java.lang.String optionalCord_;
  /**
   * <code>string optional_cord = 16 [ctype = CORD];</code>
   * @return Whether the optionalCord field is set.
   */
  @java.lang.Override
  public boolean hasOptionalCord() {
    return ((bitField0_ & 0x00008000) != 0);
  }
  /**
   * <code>string optional_cord = 16 [ctype = CORD];</code>
   * @return The optionalCord.
   */
  @java.lang.Override
  public java.lang.String getOptionalCord() {
    return optionalCord_;
  }
  /**
   * <code>string optional_cord = 16 [ctype = CORD];</code>
   * @return The bytes for optionalCord.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOptionalCordBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(optionalCord_);
  }
  /**
   * <code>string optional_cord = 16 [ctype = CORD];</code>
   * @param value The optionalCord to set.
   */
  private void setOptionalCord(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00008000;
    optionalCord_ = value;
  }
  /**
   * <code>string optional_cord = 16 [ctype = CORD];</code>
   */
  private void clearOptionalCord() {
    bitField0_ = (bitField0_ & ~0x00008000);
    optionalCord_ = getDefaultInstance().getOptionalCord();
  }
  /**
   * <code>string optional_cord = 16 [ctype = CORD];</code>
   * @param value The bytes for optionalCord to set.
   */
  private void setOptionalCordBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    optionalCord_ = value.toStringUtf8();
    bitField0_ |= 0x00008000;
  }

  public static final int OPTIONAL_NESTED_MESSAGE_FIELD_NUMBER = 18;
  private com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage optionalNestedMessage_;
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
   */
  @java.lang.Override
  public boolean hasOptionalNestedMessage() {
    return ((bitField0_ & 0x00010000) != 0);
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
   */
  @java.lang.Override
  public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getOptionalNestedMessage() {
    return optionalNestedMessage_ == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance() : optionalNestedMessage_;
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
   */
  private void setOptionalNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
    value.getClass();
  optionalNestedMessage_ = value;
    bitField0_ |= 0x00010000;
    }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeOptionalNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
    value.getClass();
  if (optionalNestedMessage_ != null &&
        optionalNestedMessage_ != com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance()) {
      optionalNestedMessage_ =
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.newBuilder(optionalNestedMessage_).mergeFrom(value).buildPartial();
    } else {
      optionalNestedMessage_ = value;
    }
    bitField0_ |= 0x00010000;
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
   */
  private void clearOptionalNestedMessage() {  optionalNestedMessage_ = null;
    bitField0_ = (bitField0_ & ~0x00010000);
  }

  public static final int LAZY_NESTED_MESSAGE_FIELD_NUMBER = 19;
  private com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage lazyNestedMessage_;
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
   */
  @java.lang.Override
  public boolean hasLazyNestedMessage() {
    return ((bitField0_ & 0x00020000) != 0);
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
   */
  @java.lang.Override
  public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getLazyNestedMessage() {
    return lazyNestedMessage_ == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance() : lazyNestedMessage_;
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
   */
  private void setLazyNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
    value.getClass();
  lazyNestedMessage_ = value;
    bitField0_ |= 0x00020000;
    }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLazyNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
    value.getClass();
  if (lazyNestedMessage_ != null &&
        lazyNestedMessage_ != com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.getDefaultInstance()) {
      lazyNestedMessage_ =
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.newBuilder(lazyNestedMessage_).mergeFrom(value).buildPartial();
    } else {
      lazyNestedMessage_ = value;
    }
    bitField0_ |= 0x00020000;
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
   */
  private void clearLazyNestedMessage() {  lazyNestedMessage_ = null;
    bitField0_ = (bitField0_ & ~0x00020000);
  }

  public static final int OPTIONAL_NESTED_ENUM_FIELD_NUMBER = 21;
  private int optionalNestedEnum_;
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @return Whether the optionalNestedEnum field is set.
   */
  @java.lang.Override
  public boolean hasOptionalNestedEnum() {
    return ((bitField0_ & 0x00040000) != 0);
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @return The enum numeric value on the wire for optionalNestedEnum.
   */
  @java.lang.Override
  public int getOptionalNestedEnumValue() {
    return optionalNestedEnum_;
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @return The optionalNestedEnum.
   */
  @java.lang.Override
  public com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum getOptionalNestedEnum() {
    com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum result = com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum.forNumber(optionalNestedEnum_);
    return result == null ? com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum.UNRECOGNIZED : result;
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @param value The enum numeric value on the wire for optionalNestedEnum to set.
   */
  private void setOptionalNestedEnumValue(int value) {
    bitField0_ |= 0x00040000;  optionalNestedEnum_ = value;
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   * @param value The optionalNestedEnum to set.
   */
  private void setOptionalNestedEnum(com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum value) {
    optionalNestedEnum_ = value.getNumber();
    bitField0_ |= 0x00040000;
  }
  /**
   * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
   */
  private void clearOptionalNestedEnum() {
    bitField0_ = (bitField0_ & ~0x00040000);
    optionalNestedEnum_ = 0;
  }

  public static final int SINGULAR_INT32_FIELD_NUMBER = 22;
  private int singularInt32_;
  /**
   * <pre>
   * Add some non-optional fields to verify we can mix them.
   * </pre>
   *
   * <code>int32 singular_int32 = 22;</code>
   * @return The singularInt32.
   */
  @java.lang.Override
  public int getSingularInt32() {
    return singularInt32_;
  }
  /**
   * <pre>
   * Add some non-optional fields to verify we can mix them.
   * </pre>
   *
   * <code>int32 singular_int32 = 22;</code>
   * @param value The singularInt32 to set.
   */
  private void setSingularInt32(int value) {
    
    singularInt32_ = value;
  }
  /**
   * <pre>
   * Add some non-optional fields to verify we can mix them.
   * </pre>
   *
   * <code>int32 singular_int32 = 22;</code>
   */
  private void clearSingularInt32() {
    
    singularInt32_ = 0;
  }

  public static final int SINGULAR_INT64_FIELD_NUMBER = 23;
  private long singularInt64_;
  /**
   * <code>int64 singular_int64 = 23;</code>
   * @return The singularInt64.
   */
  @java.lang.Override
  public long getSingularInt64() {
    return singularInt64_;
  }
  /**
   * <code>int64 singular_int64 = 23;</code>
   * @param value The singularInt64 to set.
   */
  private void setSingularInt64(long value) {
    
    singularInt64_ = value;
  }
  /**
   * <code>int64 singular_int64 = 23;</code>
   */
  private void clearSingularInt64() {
    
    singularInt64_ = 0L;
  }

  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.protobuf.testing.proto.TestProto3Optional parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.google.protobuf.testing.proto.TestProto3Optional prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code protobuf_unittest.TestProto3Optional}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.protobuf.testing.proto.TestProto3Optional, Builder> implements
      // @@protoc_insertion_point(builder_implements:protobuf_unittest.TestProto3Optional)
      com.google.protobuf.testing.proto.TestProto3OptionalOrBuilder {
    // Construct using com.google.protobuf.testing.proto.TestProto3Optional.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Singular
     * </pre>
     *
     * <code>int32 optional_int32 = 1;</code>
     * @return Whether the optionalInt32 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalInt32() {
      return instance.hasOptionalInt32();
    }
    /**
     * <pre>
     * Singular
     * </pre>
     *
     * <code>int32 optional_int32 = 1;</code>
     * @return The optionalInt32.
     */
    @java.lang.Override
    public int getOptionalInt32() {
      return instance.getOptionalInt32();
    }
    /**
     * <pre>
     * Singular
     * </pre>
     *
     * <code>int32 optional_int32 = 1;</code>
     * @param value The optionalInt32 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalInt32(int value) {
      copyOnWrite();
      instance.setOptionalInt32(value);
      return this;
    }
    /**
     * <pre>
     * Singular
     * </pre>
     *
     * <code>int32 optional_int32 = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalInt32() {
      copyOnWrite();
      instance.clearOptionalInt32();
      return this;
    }

    /**
     * <code>int64 optional_int64 = 2;</code>
     * @return Whether the optionalInt64 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalInt64() {
      return instance.hasOptionalInt64();
    }
    /**
     * <code>int64 optional_int64 = 2;</code>
     * @return The optionalInt64.
     */
    @java.lang.Override
    public long getOptionalInt64() {
      return instance.getOptionalInt64();
    }
    /**
     * <code>int64 optional_int64 = 2;</code>
     * @param value The optionalInt64 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalInt64(long value) {
      copyOnWrite();
      instance.setOptionalInt64(value);
      return this;
    }
    /**
     * <code>int64 optional_int64 = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalInt64() {
      copyOnWrite();
      instance.clearOptionalInt64();
      return this;
    }

    /**
     * <code>uint32 optional_uint32 = 3;</code>
     * @return Whether the optionalUint32 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalUint32() {
      return instance.hasOptionalUint32();
    }
    /**
     * <code>uint32 optional_uint32 = 3;</code>
     * @return The optionalUint32.
     */
    @java.lang.Override
    public int getOptionalUint32() {
      return instance.getOptionalUint32();
    }
    /**
     * <code>uint32 optional_uint32 = 3;</code>
     * @param value The optionalUint32 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalUint32(int value) {
      copyOnWrite();
      instance.setOptionalUint32(value);
      return this;
    }
    /**
     * <code>uint32 optional_uint32 = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalUint32() {
      copyOnWrite();
      instance.clearOptionalUint32();
      return this;
    }

    /**
     * <code>uint64 optional_uint64 = 4;</code>
     * @return Whether the optionalUint64 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalUint64() {
      return instance.hasOptionalUint64();
    }
    /**
     * <code>uint64 optional_uint64 = 4;</code>
     * @return The optionalUint64.
     */
    @java.lang.Override
    public long getOptionalUint64() {
      return instance.getOptionalUint64();
    }
    /**
     * <code>uint64 optional_uint64 = 4;</code>
     * @param value The optionalUint64 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalUint64(long value) {
      copyOnWrite();
      instance.setOptionalUint64(value);
      return this;
    }
    /**
     * <code>uint64 optional_uint64 = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalUint64() {
      copyOnWrite();
      instance.clearOptionalUint64();
      return this;
    }

    /**
     * <code>sint32 optional_sint32 = 5;</code>
     * @return Whether the optionalSint32 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalSint32() {
      return instance.hasOptionalSint32();
    }
    /**
     * <code>sint32 optional_sint32 = 5;</code>
     * @return The optionalSint32.
     */
    @java.lang.Override
    public int getOptionalSint32() {
      return instance.getOptionalSint32();
    }
    /**
     * <code>sint32 optional_sint32 = 5;</code>
     * @param value The optionalSint32 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalSint32(int value) {
      copyOnWrite();
      instance.setOptionalSint32(value);
      return this;
    }
    /**
     * <code>sint32 optional_sint32 = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalSint32() {
      copyOnWrite();
      instance.clearOptionalSint32();
      return this;
    }

    /**
     * <code>sint64 optional_sint64 = 6;</code>
     * @return Whether the optionalSint64 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalSint64() {
      return instance.hasOptionalSint64();
    }
    /**
     * <code>sint64 optional_sint64 = 6;</code>
     * @return The optionalSint64.
     */
    @java.lang.Override
    public long getOptionalSint64() {
      return instance.getOptionalSint64();
    }
    /**
     * <code>sint64 optional_sint64 = 6;</code>
     * @param value The optionalSint64 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalSint64(long value) {
      copyOnWrite();
      instance.setOptionalSint64(value);
      return this;
    }
    /**
     * <code>sint64 optional_sint64 = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalSint64() {
      copyOnWrite();
      instance.clearOptionalSint64();
      return this;
    }

    /**
     * <code>fixed32 optional_fixed32 = 7;</code>
     * @return Whether the optionalFixed32 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalFixed32() {
      return instance.hasOptionalFixed32();
    }
    /**
     * <code>fixed32 optional_fixed32 = 7;</code>
     * @return The optionalFixed32.
     */
    @java.lang.Override
    public int getOptionalFixed32() {
      return instance.getOptionalFixed32();
    }
    /**
     * <code>fixed32 optional_fixed32 = 7;</code>
     * @param value The optionalFixed32 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalFixed32(int value) {
      copyOnWrite();
      instance.setOptionalFixed32(value);
      return this;
    }
    /**
     * <code>fixed32 optional_fixed32 = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalFixed32() {
      copyOnWrite();
      instance.clearOptionalFixed32();
      return this;
    }

    /**
     * <code>fixed64 optional_fixed64 = 8;</code>
     * @return Whether the optionalFixed64 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalFixed64() {
      return instance.hasOptionalFixed64();
    }
    /**
     * <code>fixed64 optional_fixed64 = 8;</code>
     * @return The optionalFixed64.
     */
    @java.lang.Override
    public long getOptionalFixed64() {
      return instance.getOptionalFixed64();
    }
    /**
     * <code>fixed64 optional_fixed64 = 8;</code>
     * @param value The optionalFixed64 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalFixed64(long value) {
      copyOnWrite();
      instance.setOptionalFixed64(value);
      return this;
    }
    /**
     * <code>fixed64 optional_fixed64 = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalFixed64() {
      copyOnWrite();
      instance.clearOptionalFixed64();
      return this;
    }

    /**
     * <code>sfixed32 optional_sfixed32 = 9;</code>
     * @return Whether the optionalSfixed32 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalSfixed32() {
      return instance.hasOptionalSfixed32();
    }
    /**
     * <code>sfixed32 optional_sfixed32 = 9;</code>
     * @return The optionalSfixed32.
     */
    @java.lang.Override
    public int getOptionalSfixed32() {
      return instance.getOptionalSfixed32();
    }
    /**
     * <code>sfixed32 optional_sfixed32 = 9;</code>
     * @param value The optionalSfixed32 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalSfixed32(int value) {
      copyOnWrite();
      instance.setOptionalSfixed32(value);
      return this;
    }
    /**
     * <code>sfixed32 optional_sfixed32 = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalSfixed32() {
      copyOnWrite();
      instance.clearOptionalSfixed32();
      return this;
    }

    /**
     * <code>sfixed64 optional_sfixed64 = 10;</code>
     * @return Whether the optionalSfixed64 field is set.
     */
    @java.lang.Override
    public boolean hasOptionalSfixed64() {
      return instance.hasOptionalSfixed64();
    }
    /**
     * <code>sfixed64 optional_sfixed64 = 10;</code>
     * @return The optionalSfixed64.
     */
    @java.lang.Override
    public long getOptionalSfixed64() {
      return instance.getOptionalSfixed64();
    }
    /**
     * <code>sfixed64 optional_sfixed64 = 10;</code>
     * @param value The optionalSfixed64 to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalSfixed64(long value) {
      copyOnWrite();
      instance.setOptionalSfixed64(value);
      return this;
    }
    /**
     * <code>sfixed64 optional_sfixed64 = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalSfixed64() {
      copyOnWrite();
      instance.clearOptionalSfixed64();
      return this;
    }

    /**
     * <code>float optional_float = 11;</code>
     * @return Whether the optionalFloat field is set.
     */
    @java.lang.Override
    public boolean hasOptionalFloat() {
      return instance.hasOptionalFloat();
    }
    /**
     * <code>float optional_float = 11;</code>
     * @return The optionalFloat.
     */
    @java.lang.Override
    public float getOptionalFloat() {
      return instance.getOptionalFloat();
    }
    /**
     * <code>float optional_float = 11;</code>
     * @param value The optionalFloat to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalFloat(float value) {
      copyOnWrite();
      instance.setOptionalFloat(value);
      return this;
    }
    /**
     * <code>float optional_float = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalFloat() {
      copyOnWrite();
      instance.clearOptionalFloat();
      return this;
    }

    /**
     * <code>double optional_double = 12;</code>
     * @return Whether the optionalDouble field is set.
     */
    @java.lang.Override
    public boolean hasOptionalDouble() {
      return instance.hasOptionalDouble();
    }
    /**
     * <code>double optional_double = 12;</code>
     * @return The optionalDouble.
     */
    @java.lang.Override
    public double getOptionalDouble() {
      return instance.getOptionalDouble();
    }
    /**
     * <code>double optional_double = 12;</code>
     * @param value The optionalDouble to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalDouble(double value) {
      copyOnWrite();
      instance.setOptionalDouble(value);
      return this;
    }
    /**
     * <code>double optional_double = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalDouble() {
      copyOnWrite();
      instance.clearOptionalDouble();
      return this;
    }

    /**
     * <code>bool optional_bool = 13;</code>
     * @return Whether the optionalBool field is set.
     */
    @java.lang.Override
    public boolean hasOptionalBool() {
      return instance.hasOptionalBool();
    }
    /**
     * <code>bool optional_bool = 13;</code>
     * @return The optionalBool.
     */
    @java.lang.Override
    public boolean getOptionalBool() {
      return instance.getOptionalBool();
    }
    /**
     * <code>bool optional_bool = 13;</code>
     * @param value The optionalBool to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalBool(boolean value) {
      copyOnWrite();
      instance.setOptionalBool(value);
      return this;
    }
    /**
     * <code>bool optional_bool = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalBool() {
      copyOnWrite();
      instance.clearOptionalBool();
      return this;
    }

    /**
     * <code>string optional_string = 14;</code>
     * @return Whether the optionalString field is set.
     */
    @java.lang.Override
    public boolean hasOptionalString() {
      return instance.hasOptionalString();
    }
    /**
     * <code>string optional_string = 14;</code>
     * @return The optionalString.
     */
    @java.lang.Override
    public java.lang.String getOptionalString() {
      return instance.getOptionalString();
    }
    /**
     * <code>string optional_string = 14;</code>
     * @return The bytes for optionalString.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOptionalStringBytes() {
      return instance.getOptionalStringBytes();
    }
    /**
     * <code>string optional_string = 14;</code>
     * @param value The optionalString to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalString(
        java.lang.String value) {
      copyOnWrite();
      instance.setOptionalString(value);
      return this;
    }
    /**
     * <code>string optional_string = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalString() {
      copyOnWrite();
      instance.clearOptionalString();
      return this;
    }
    /**
     * <code>string optional_string = 14;</code>
     * @param value The bytes for optionalString to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalStringBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setOptionalStringBytes(value);
      return this;
    }

    /**
     * <code>bytes optional_bytes = 15;</code>
     * @return Whether the optionalBytes field is set.
     */
    @java.lang.Override
    public boolean hasOptionalBytes() {
      return instance.hasOptionalBytes();
    }
    /**
     * <code>bytes optional_bytes = 15;</code>
     * @return The optionalBytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getOptionalBytes() {
      return instance.getOptionalBytes();
    }
    /**
     * <code>bytes optional_bytes = 15;</code>
     * @param value The optionalBytes to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setOptionalBytes(value);
      return this;
    }
    /**
     * <code>bytes optional_bytes = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalBytes() {
      copyOnWrite();
      instance.clearOptionalBytes();
      return this;
    }

    /**
     * <code>string optional_cord = 16 [ctype = CORD];</code>
     * @return Whether the optionalCord field is set.
     */
    @java.lang.Override
    public boolean hasOptionalCord() {
      return instance.hasOptionalCord();
    }
    /**
     * <code>string optional_cord = 16 [ctype = CORD];</code>
     * @return The optionalCord.
     */
    @java.lang.Override
    public java.lang.String getOptionalCord() {
      return instance.getOptionalCord();
    }
    /**
     * <code>string optional_cord = 16 [ctype = CORD];</code>
     * @return The bytes for optionalCord.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOptionalCordBytes() {
      return instance.getOptionalCordBytes();
    }
    /**
     * <code>string optional_cord = 16 [ctype = CORD];</code>
     * @param value The optionalCord to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalCord(
        java.lang.String value) {
      copyOnWrite();
      instance.setOptionalCord(value);
      return this;
    }
    /**
     * <code>string optional_cord = 16 [ctype = CORD];</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalCord() {
      copyOnWrite();
      instance.clearOptionalCord();
      return this;
    }
    /**
     * <code>string optional_cord = 16 [ctype = CORD];</code>
     * @param value The bytes for optionalCord to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalCordBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setOptionalCordBytes(value);
      return this;
    }

    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    @java.lang.Override
    public boolean hasOptionalNestedMessage() {
      return instance.hasOptionalNestedMessage();
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    @java.lang.Override
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getOptionalNestedMessage() {
      return instance.getOptionalNestedMessage();
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    public Builder setOptionalNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
      copyOnWrite();
      instance.setOptionalNestedMessage(value);
      return this;
      }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    public Builder setOptionalNestedMessage(
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder builderForValue) {
      copyOnWrite();
      instance.setOptionalNestedMessage(builderForValue.build());
      return this;
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    public Builder mergeOptionalNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
      copyOnWrite();
      instance.mergeOptionalNestedMessage(value);
      return this;
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage optional_nested_message = 18;</code>
     */
    public Builder clearOptionalNestedMessage() {  copyOnWrite();
      instance.clearOptionalNestedMessage();
      return this;
    }

    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    @java.lang.Override
    public boolean hasLazyNestedMessage() {
      return instance.hasLazyNestedMessage();
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage getLazyNestedMessage() {
      return instance.getLazyNestedMessage();
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    public Builder setLazyNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
      copyOnWrite();
      instance.setLazyNestedMessage(value);
      return this;
      }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    public Builder setLazyNestedMessage(
        com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage.Builder builderForValue) {
      copyOnWrite();
      instance.setLazyNestedMessage(builderForValue.build());
      return this;
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    public Builder mergeLazyNestedMessage(com.google.protobuf.testing.proto.TestProto3Optional.NestedMessage value) {
      copyOnWrite();
      instance.mergeLazyNestedMessage(value);
      return this;
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedMessage lazy_nested_message = 19 [lazy = true];</code>
     */
    public Builder clearLazyNestedMessage() {  copyOnWrite();
      instance.clearLazyNestedMessage();
      return this;
    }

    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @return Whether the optionalNestedEnum field is set.
     */
    @java.lang.Override
    public boolean hasOptionalNestedEnum() {
      return instance.hasOptionalNestedEnum();
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @return The enum numeric value on the wire for optionalNestedEnum.
     */
    @java.lang.Override
    public int getOptionalNestedEnumValue() {
      return instance.getOptionalNestedEnumValue();
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @param value The optionalNestedEnum to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalNestedEnumValue(int value) {
      copyOnWrite();
      instance.setOptionalNestedEnumValue(value);
      return this;
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @return The optionalNestedEnum.
     */
    @java.lang.Override
    public com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum getOptionalNestedEnum() {
      return instance.getOptionalNestedEnum();
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @param value The enum numeric value on the wire for optionalNestedEnum to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalNestedEnum(com.google.protobuf.testing.proto.TestProto3Optional.NestedEnum value) {
      copyOnWrite();
      instance.setOptionalNestedEnum(value);
      return this;
    }
    /**
     * <code>.protobuf_unittest.TestProto3Optional.NestedEnum optional_nested_enum = 21;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalNestedEnum() {
      copyOnWrite();
      instance.clearOptionalNestedEnum();
      return this;
    }

    /**
     * <pre>
     * Add some non-optional fields to verify we can mix them.
     * </pre>
     *
     * <code>int32 singular_int32 = 22;</code>
     * @return The singularInt32.
     */
    @java.lang.Override
    public int getSingularInt32() {
      return instance.getSingularInt32();
    }
    /**
     * <pre>
     * Add some non-optional fields to verify we can mix them.
     * </pre>
     *
     * <code>int32 singular_int32 = 22;</code>
     * @param value The singularInt32 to set.
     * @return This builder for chaining.
     */
    public Builder setSingularInt32(int value) {
      copyOnWrite();
      instance.setSingularInt32(value);
      return this;
    }
    /**
     * <pre>
     * Add some non-optional fields to verify we can mix them.
     * </pre>
     *
     * <code>int32 singular_int32 = 22;</code>
     * @return This builder for chaining.
     */
    public Builder clearSingularInt32() {
      copyOnWrite();
      instance.clearSingularInt32();
      return this;
    }

    /**
     * <code>int64 singular_int64 = 23;</code>
     * @return The singularInt64.
     */
    @java.lang.Override
    public long getSingularInt64() {
      return instance.getSingularInt64();
    }
    /**
     * <code>int64 singular_int64 = 23;</code>
     * @param value The singularInt64 to set.
     * @return This builder for chaining.
     */
    public Builder setSingularInt64(long value) {
      copyOnWrite();
      instance.setSingularInt64(value);
      return this;
    }
    /**
     * <code>int64 singular_int64 = 23;</code>
     * @return This builder for chaining.
     */
    public Builder clearSingularInt64() {
      copyOnWrite();
      instance.clearSingularInt64();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestProto3Optional)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.protobuf.testing.proto.TestProto3Optional();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "optionalInt32_",
            "optionalInt64_",
            "optionalUint32_",
            "optionalUint64_",
            "optionalSint32_",
            "optionalSint64_",
            "optionalFixed32_",
            "optionalFixed64_",
            "optionalSfixed32_",
            "optionalSfixed64_",
            "optionalFloat_",
            "optionalDouble_",
            "optionalBool_",
            "optionalString_",
            "optionalBytes_",
            "optionalCord_",
            "optionalNestedMessage_",
            "lazyNestedMessage_",
            "optionalNestedEnum_",
            "singularInt32_",
            "singularInt64_",
          };
          java.lang.String info =
              "\u0000\u0015\u0000\u0001\u0001\u0017\u0015\u0000\u0000\u0000\u0001\u1004\u0000\u0002" +
              "\u1002\u0001\u0003\u100b\u0002\u0004\u1003\u0003\u0005\u100f\u0004\u0006\u1010\u0005" +
              "\u0007\u1006\u0006\b\u1005\u0007\t\u100d\b\n\u100e\t\u000b\u1001\n\f\u1000\u000b" +
              "\r\u1007\f\u000e\u1208\r\u000f\u100a\u000e\u0010\u1208\u000f\u0012\u1009\u0010\u0013" +
              "\u1009\u0011\u0015\u100c\u0012\u0016\u0004\u0017\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.google.protobuf.testing.proto.TestProto3Optional> parser = PARSER;
        if (parser == null) {
          synchronized (com.google.protobuf.testing.proto.TestProto3Optional.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.google.protobuf.testing.proto.TestProto3Optional>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestProto3Optional)
  private static final com.google.protobuf.testing.proto.TestProto3Optional DEFAULT_INSTANCE;
  static {
    TestProto3Optional defaultInstance = new TestProto3Optional();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      TestProto3Optional.class, defaultInstance);
  }

  public static com.google.protobuf.testing.proto.TestProto3Optional getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TestProto3Optional> PARSER;

  public static com.google.protobuf.Parser<TestProto3Optional> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

