// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_well_known_types.proto

package com.google.protobuf.test;

/**
 * <pre>
 * A map field for each well-known type. We only
 * need to worry about the value part of the map being the
 * well-known types, as messages can't be map keys.
 * </pre>
 *
 * Protobuf type {@code protobuf_unittest.MapWellKnownTypes}
 */
public  final class MapWellKnownTypes extends
    com.google.protobuf.GeneratedMessageLite<
        MapWellKnownTypes, MapWellKnownTypes.Builder> implements
    // @@protoc_insertion_point(message_implements:protobuf_unittest.MapWellKnownTypes)
    MapWellKnownTypesOrBuilder {
  private MapWellKnownTypes() {
  }
  public static final int ANY_FIELD_FIELD_NUMBER = 1;
  private static final class AnyFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.Any> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.Any>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.Any.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.Any> anyField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Any>
  internalGetAnyField() {
    return anyField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Any>
  internalGetMutableAnyField() {
    if (!anyField_.isMutable()) {
      anyField_ = anyField_.mutableCopy();
    }
    return anyField_;
  }
  @java.lang.Override

  public int getAnyFieldCount() {
    return internalGetAnyField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
   */
  @java.lang.Override

  public boolean containsAnyField(
      int key) {
    
    return internalGetAnyField().containsKey(key);
  }
  /**
   * Use {@link #getAnyFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.Any> getAnyField() {
    return getAnyFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.Any> getAnyFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetAnyField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Any getAnyFieldOrDefault(
      int key,
      com.google.protobuf.Any defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Any> map =
        internalGetAnyField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Any getAnyFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Any> map =
        internalGetAnyField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.Any>
  getMutableAnyFieldMap() {
    return internalGetMutableAnyField();
  }

  public static final int API_FIELD_FIELD_NUMBER = 2;
  private static final class ApiFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.Api> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.Api>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.Api.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.Api> apiField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Api>
  internalGetApiField() {
    return apiField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Api>
  internalGetMutableApiField() {
    if (!apiField_.isMutable()) {
      apiField_ = apiField_.mutableCopy();
    }
    return apiField_;
  }
  @java.lang.Override

  public int getApiFieldCount() {
    return internalGetApiField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
   */
  @java.lang.Override

  public boolean containsApiField(
      int key) {
    
    return internalGetApiField().containsKey(key);
  }
  /**
   * Use {@link #getApiFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.Api> getApiField() {
    return getApiFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.Api> getApiFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetApiField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Api getApiFieldOrDefault(
      int key,
      com.google.protobuf.Api defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Api> map =
        internalGetApiField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Api getApiFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Api> map =
        internalGetApiField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.Api>
  getMutableApiFieldMap() {
    return internalGetMutableApiField();
  }

  public static final int DURATION_FIELD_FIELD_NUMBER = 3;
  private static final class DurationFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.Duration> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.Duration>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.Duration.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.Duration> durationField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Duration>
  internalGetDurationField() {
    return durationField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Duration>
  internalGetMutableDurationField() {
    if (!durationField_.isMutable()) {
      durationField_ = durationField_.mutableCopy();
    }
    return durationField_;
  }
  @java.lang.Override

  public int getDurationFieldCount() {
    return internalGetDurationField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
   */
  @java.lang.Override

  public boolean containsDurationField(
      int key) {
    
    return internalGetDurationField().containsKey(key);
  }
  /**
   * Use {@link #getDurationFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.Duration> getDurationField() {
    return getDurationFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.Duration> getDurationFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetDurationField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Duration getDurationFieldOrDefault(
      int key,
      com.google.protobuf.Duration defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Duration> map =
        internalGetDurationField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Duration getDurationFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Duration> map =
        internalGetDurationField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.Duration>
  getMutableDurationFieldMap() {
    return internalGetMutableDurationField();
  }

  public static final int EMPTY_FIELD_FIELD_NUMBER = 4;
  private static final class EmptyFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.Empty> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.Empty>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.Empty.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.Empty> emptyField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Empty>
  internalGetEmptyField() {
    return emptyField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Empty>
  internalGetMutableEmptyField() {
    if (!emptyField_.isMutable()) {
      emptyField_ = emptyField_.mutableCopy();
    }
    return emptyField_;
  }
  @java.lang.Override

  public int getEmptyFieldCount() {
    return internalGetEmptyField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
   */
  @java.lang.Override

  public boolean containsEmptyField(
      int key) {
    
    return internalGetEmptyField().containsKey(key);
  }
  /**
   * Use {@link #getEmptyFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.Empty> getEmptyField() {
    return getEmptyFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.Empty> getEmptyFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetEmptyField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Empty getEmptyFieldOrDefault(
      int key,
      com.google.protobuf.Empty defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Empty> map =
        internalGetEmptyField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Empty getEmptyFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Empty> map =
        internalGetEmptyField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.Empty>
  getMutableEmptyFieldMap() {
    return internalGetMutableEmptyField();
  }

  public static final int FIELD_MASK_FIELD_FIELD_NUMBER = 5;
  private static final class FieldMaskFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.FieldMask> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.FieldMask>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.FieldMask.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.FieldMask> fieldMaskField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.FieldMask>
  internalGetFieldMaskField() {
    return fieldMaskField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.FieldMask>
  internalGetMutableFieldMaskField() {
    if (!fieldMaskField_.isMutable()) {
      fieldMaskField_ = fieldMaskField_.mutableCopy();
    }
    return fieldMaskField_;
  }
  @java.lang.Override

  public int getFieldMaskFieldCount() {
    return internalGetFieldMaskField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
   */
  @java.lang.Override

  public boolean containsFieldMaskField(
      int key) {
    
    return internalGetFieldMaskField().containsKey(key);
  }
  /**
   * Use {@link #getFieldMaskFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.FieldMask> getFieldMaskField() {
    return getFieldMaskFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.FieldMask> getFieldMaskFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetFieldMaskField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
   */
  @java.lang.Override

  public com.google.protobuf.FieldMask getFieldMaskFieldOrDefault(
      int key,
      com.google.protobuf.FieldMask defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.FieldMask> map =
        internalGetFieldMaskField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
   */
  @java.lang.Override

  public com.google.protobuf.FieldMask getFieldMaskFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.FieldMask> map =
        internalGetFieldMaskField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.FieldMask>
  getMutableFieldMaskFieldMap() {
    return internalGetMutableFieldMaskField();
  }

  public static final int SOURCE_CONTEXT_FIELD_FIELD_NUMBER = 6;
  private static final class SourceContextFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.SourceContext> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.SourceContext>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.SourceContext.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.SourceContext> sourceContextField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.SourceContext>
  internalGetSourceContextField() {
    return sourceContextField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.SourceContext>
  internalGetMutableSourceContextField() {
    if (!sourceContextField_.isMutable()) {
      sourceContextField_ = sourceContextField_.mutableCopy();
    }
    return sourceContextField_;
  }
  @java.lang.Override

  public int getSourceContextFieldCount() {
    return internalGetSourceContextField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
   */
  @java.lang.Override

  public boolean containsSourceContextField(
      int key) {
    
    return internalGetSourceContextField().containsKey(key);
  }
  /**
   * Use {@link #getSourceContextFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.SourceContext> getSourceContextField() {
    return getSourceContextFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.SourceContext> getSourceContextFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetSourceContextField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
   */
  @java.lang.Override

  public com.google.protobuf.SourceContext getSourceContextFieldOrDefault(
      int key,
      com.google.protobuf.SourceContext defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.SourceContext> map =
        internalGetSourceContextField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
   */
  @java.lang.Override

  public com.google.protobuf.SourceContext getSourceContextFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.SourceContext> map =
        internalGetSourceContextField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.SourceContext>
  getMutableSourceContextFieldMap() {
    return internalGetMutableSourceContextField();
  }

  public static final int STRUCT_FIELD_FIELD_NUMBER = 7;
  private static final class StructFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.Struct> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.Struct>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.Struct.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.Struct> structField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Struct>
  internalGetStructField() {
    return structField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Struct>
  internalGetMutableStructField() {
    if (!structField_.isMutable()) {
      structField_ = structField_.mutableCopy();
    }
    return structField_;
  }
  @java.lang.Override

  public int getStructFieldCount() {
    return internalGetStructField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
   */
  @java.lang.Override

  public boolean containsStructField(
      int key) {
    
    return internalGetStructField().containsKey(key);
  }
  /**
   * Use {@link #getStructFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.Struct> getStructField() {
    return getStructFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.Struct> getStructFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetStructField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Struct getStructFieldOrDefault(
      int key,
      com.google.protobuf.Struct defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Struct> map =
        internalGetStructField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Struct getStructFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Struct> map =
        internalGetStructField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.Struct>
  getMutableStructFieldMap() {
    return internalGetMutableStructField();
  }

  public static final int TIMESTAMP_FIELD_FIELD_NUMBER = 8;
  private static final class TimestampFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.Timestamp> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.Timestamp>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.Timestamp.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.Timestamp> timestampField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Timestamp>
  internalGetTimestampField() {
    return timestampField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Timestamp>
  internalGetMutableTimestampField() {
    if (!timestampField_.isMutable()) {
      timestampField_ = timestampField_.mutableCopy();
    }
    return timestampField_;
  }
  @java.lang.Override

  public int getTimestampFieldCount() {
    return internalGetTimestampField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
   */
  @java.lang.Override

  public boolean containsTimestampField(
      int key) {
    
    return internalGetTimestampField().containsKey(key);
  }
  /**
   * Use {@link #getTimestampFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.Timestamp> getTimestampField() {
    return getTimestampFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.Timestamp> getTimestampFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetTimestampField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Timestamp getTimestampFieldOrDefault(
      int key,
      com.google.protobuf.Timestamp defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Timestamp> map =
        internalGetTimestampField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Timestamp getTimestampFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Timestamp> map =
        internalGetTimestampField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.Timestamp>
  getMutableTimestampFieldMap() {
    return internalGetMutableTimestampField();
  }

  public static final int TYPE_FIELD_FIELD_NUMBER = 9;
  private static final class TypeFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.Type> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.Type>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.Type.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.Type> typeField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Type>
  internalGetTypeField() {
    return typeField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Type>
  internalGetMutableTypeField() {
    if (!typeField_.isMutable()) {
      typeField_ = typeField_.mutableCopy();
    }
    return typeField_;
  }
  @java.lang.Override

  public int getTypeFieldCount() {
    return internalGetTypeField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
   */
  @java.lang.Override

  public boolean containsTypeField(
      int key) {
    
    return internalGetTypeField().containsKey(key);
  }
  /**
   * Use {@link #getTypeFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.Type> getTypeField() {
    return getTypeFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.Type> getTypeFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetTypeField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Type getTypeFieldOrDefault(
      int key,
      com.google.protobuf.Type defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Type> map =
        internalGetTypeField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Type getTypeFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Type> map =
        internalGetTypeField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.Type>
  getMutableTypeFieldMap() {
    return internalGetMutableTypeField();
  }

  public static final int DOUBLE_FIELD_FIELD_NUMBER = 10;
  private static final class DoubleFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.DoubleValue> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.DoubleValue>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.DoubleValue.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.DoubleValue> doubleField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.DoubleValue>
  internalGetDoubleField() {
    return doubleField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.DoubleValue>
  internalGetMutableDoubleField() {
    if (!doubleField_.isMutable()) {
      doubleField_ = doubleField_.mutableCopy();
    }
    return doubleField_;
  }
  @java.lang.Override

  public int getDoubleFieldCount() {
    return internalGetDoubleField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
   */
  @java.lang.Override

  public boolean containsDoubleField(
      int key) {
    
    return internalGetDoubleField().containsKey(key);
  }
  /**
   * Use {@link #getDoubleFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.DoubleValue> getDoubleField() {
    return getDoubleFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.DoubleValue> getDoubleFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetDoubleField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
   */
  @java.lang.Override

  public com.google.protobuf.DoubleValue getDoubleFieldOrDefault(
      int key,
      com.google.protobuf.DoubleValue defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.DoubleValue> map =
        internalGetDoubleField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
   */
  @java.lang.Override

  public com.google.protobuf.DoubleValue getDoubleFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.DoubleValue> map =
        internalGetDoubleField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.DoubleValue>
  getMutableDoubleFieldMap() {
    return internalGetMutableDoubleField();
  }

  public static final int FLOAT_FIELD_FIELD_NUMBER = 11;
  private static final class FloatFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.FloatValue> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.FloatValue>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.FloatValue.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.FloatValue> floatField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.FloatValue>
  internalGetFloatField() {
    return floatField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.FloatValue>
  internalGetMutableFloatField() {
    if (!floatField_.isMutable()) {
      floatField_ = floatField_.mutableCopy();
    }
    return floatField_;
  }
  @java.lang.Override

  public int getFloatFieldCount() {
    return internalGetFloatField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
   */
  @java.lang.Override

  public boolean containsFloatField(
      int key) {
    
    return internalGetFloatField().containsKey(key);
  }
  /**
   * Use {@link #getFloatFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.FloatValue> getFloatField() {
    return getFloatFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.FloatValue> getFloatFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetFloatField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
   */
  @java.lang.Override

  public com.google.protobuf.FloatValue getFloatFieldOrDefault(
      int key,
      com.google.protobuf.FloatValue defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.FloatValue> map =
        internalGetFloatField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
   */
  @java.lang.Override

  public com.google.protobuf.FloatValue getFloatFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.FloatValue> map =
        internalGetFloatField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.FloatValue>
  getMutableFloatFieldMap() {
    return internalGetMutableFloatField();
  }

  public static final int INT64_FIELD_FIELD_NUMBER = 12;
  private static final class Int64FieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.Int64Value> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.Int64Value>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.Int64Value.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.Int64Value> int64Field_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Int64Value>
  internalGetInt64Field() {
    return int64Field_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Int64Value>
  internalGetMutableInt64Field() {
    if (!int64Field_.isMutable()) {
      int64Field_ = int64Field_.mutableCopy();
    }
    return int64Field_;
  }
  @java.lang.Override

  public int getInt64FieldCount() {
    return internalGetInt64Field().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
   */
  @java.lang.Override

  public boolean containsInt64Field(
      int key) {
    
    return internalGetInt64Field().containsKey(key);
  }
  /**
   * Use {@link #getInt64FieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.Int64Value> getInt64Field() {
    return getInt64FieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.Int64Value> getInt64FieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetInt64Field());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Int64Value getInt64FieldOrDefault(
      int key,
      com.google.protobuf.Int64Value defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Int64Value> map =
        internalGetInt64Field();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Int64Value getInt64FieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Int64Value> map =
        internalGetInt64Field();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.Int64Value>
  getMutableInt64FieldMap() {
    return internalGetMutableInt64Field();
  }

  public static final int UINT64_FIELD_FIELD_NUMBER = 13;
  private static final class Uint64FieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.UInt64Value> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.UInt64Value>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.UInt64Value.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.UInt64Value> uint64Field_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.UInt64Value>
  internalGetUint64Field() {
    return uint64Field_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.UInt64Value>
  internalGetMutableUint64Field() {
    if (!uint64Field_.isMutable()) {
      uint64Field_ = uint64Field_.mutableCopy();
    }
    return uint64Field_;
  }
  @java.lang.Override

  public int getUint64FieldCount() {
    return internalGetUint64Field().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
   */
  @java.lang.Override

  public boolean containsUint64Field(
      int key) {
    
    return internalGetUint64Field().containsKey(key);
  }
  /**
   * Use {@link #getUint64FieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.UInt64Value> getUint64Field() {
    return getUint64FieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.UInt64Value> getUint64FieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetUint64Field());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
   */
  @java.lang.Override

  public com.google.protobuf.UInt64Value getUint64FieldOrDefault(
      int key,
      com.google.protobuf.UInt64Value defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.UInt64Value> map =
        internalGetUint64Field();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
   */
  @java.lang.Override

  public com.google.protobuf.UInt64Value getUint64FieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.UInt64Value> map =
        internalGetUint64Field();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.UInt64Value>
  getMutableUint64FieldMap() {
    return internalGetMutableUint64Field();
  }

  public static final int INT32_FIELD_FIELD_NUMBER = 14;
  private static final class Int32FieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.Int32Value> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.Int32Value>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.Int32Value.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.Int32Value> int32Field_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Int32Value>
  internalGetInt32Field() {
    return int32Field_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.Int32Value>
  internalGetMutableInt32Field() {
    if (!int32Field_.isMutable()) {
      int32Field_ = int32Field_.mutableCopy();
    }
    return int32Field_;
  }
  @java.lang.Override

  public int getInt32FieldCount() {
    return internalGetInt32Field().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
   */
  @java.lang.Override

  public boolean containsInt32Field(
      int key) {
    
    return internalGetInt32Field().containsKey(key);
  }
  /**
   * Use {@link #getInt32FieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.Int32Value> getInt32Field() {
    return getInt32FieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.Int32Value> getInt32FieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetInt32Field());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Int32Value getInt32FieldOrDefault(
      int key,
      com.google.protobuf.Int32Value defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Int32Value> map =
        internalGetInt32Field();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
   */
  @java.lang.Override

  public com.google.protobuf.Int32Value getInt32FieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.Int32Value> map =
        internalGetInt32Field();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.Int32Value>
  getMutableInt32FieldMap() {
    return internalGetMutableInt32Field();
  }

  public static final int UINT32_FIELD_FIELD_NUMBER = 15;
  private static final class Uint32FieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.UInt32Value> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.UInt32Value>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.UInt32Value.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.UInt32Value> uint32Field_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.UInt32Value>
  internalGetUint32Field() {
    return uint32Field_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.UInt32Value>
  internalGetMutableUint32Field() {
    if (!uint32Field_.isMutable()) {
      uint32Field_ = uint32Field_.mutableCopy();
    }
    return uint32Field_;
  }
  @java.lang.Override

  public int getUint32FieldCount() {
    return internalGetUint32Field().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
   */
  @java.lang.Override

  public boolean containsUint32Field(
      int key) {
    
    return internalGetUint32Field().containsKey(key);
  }
  /**
   * Use {@link #getUint32FieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.UInt32Value> getUint32Field() {
    return getUint32FieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.UInt32Value> getUint32FieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetUint32Field());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
   */
  @java.lang.Override

  public com.google.protobuf.UInt32Value getUint32FieldOrDefault(
      int key,
      com.google.protobuf.UInt32Value defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.UInt32Value> map =
        internalGetUint32Field();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
   */
  @java.lang.Override

  public com.google.protobuf.UInt32Value getUint32FieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.UInt32Value> map =
        internalGetUint32Field();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.UInt32Value>
  getMutableUint32FieldMap() {
    return internalGetMutableUint32Field();
  }

  public static final int BOOL_FIELD_FIELD_NUMBER = 16;
  private static final class BoolFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.BoolValue> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.BoolValue>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.BoolValue.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.BoolValue> boolField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.BoolValue>
  internalGetBoolField() {
    return boolField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.BoolValue>
  internalGetMutableBoolField() {
    if (!boolField_.isMutable()) {
      boolField_ = boolField_.mutableCopy();
    }
    return boolField_;
  }
  @java.lang.Override

  public int getBoolFieldCount() {
    return internalGetBoolField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
   */
  @java.lang.Override

  public boolean containsBoolField(
      int key) {
    
    return internalGetBoolField().containsKey(key);
  }
  /**
   * Use {@link #getBoolFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.BoolValue> getBoolField() {
    return getBoolFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.BoolValue> getBoolFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetBoolField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
   */
  @java.lang.Override

  public com.google.protobuf.BoolValue getBoolFieldOrDefault(
      int key,
      com.google.protobuf.BoolValue defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.BoolValue> map =
        internalGetBoolField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
   */
  @java.lang.Override

  public com.google.protobuf.BoolValue getBoolFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.BoolValue> map =
        internalGetBoolField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.BoolValue>
  getMutableBoolFieldMap() {
    return internalGetMutableBoolField();
  }

  public static final int STRING_FIELD_FIELD_NUMBER = 17;
  private static final class StringFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.StringValue> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.StringValue>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.StringValue.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.StringValue> stringField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.StringValue>
  internalGetStringField() {
    return stringField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.StringValue>
  internalGetMutableStringField() {
    if (!stringField_.isMutable()) {
      stringField_ = stringField_.mutableCopy();
    }
    return stringField_;
  }
  @java.lang.Override

  public int getStringFieldCount() {
    return internalGetStringField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
   */
  @java.lang.Override

  public boolean containsStringField(
      int key) {
    
    return internalGetStringField().containsKey(key);
  }
  /**
   * Use {@link #getStringFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.StringValue> getStringField() {
    return getStringFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.StringValue> getStringFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetStringField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
   */
  @java.lang.Override

  public com.google.protobuf.StringValue getStringFieldOrDefault(
      int key,
      com.google.protobuf.StringValue defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.StringValue> map =
        internalGetStringField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
   */
  @java.lang.Override

  public com.google.protobuf.StringValue getStringFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.StringValue> map =
        internalGetStringField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.StringValue>
  getMutableStringFieldMap() {
    return internalGetMutableStringField();
  }

  public static final int BYTES_FIELD_FIELD_NUMBER = 18;
  private static final class BytesFieldDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.google.protobuf.BytesValue> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.google.protobuf.BytesValue>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.protobuf.BytesValue.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.google.protobuf.BytesValue> bytesField_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.BytesValue>
  internalGetBytesField() {
    return bytesField_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.google.protobuf.BytesValue>
  internalGetMutableBytesField() {
    if (!bytesField_.isMutable()) {
      bytesField_ = bytesField_.mutableCopy();
    }
    return bytesField_;
  }
  @java.lang.Override

  public int getBytesFieldCount() {
    return internalGetBytesField().size();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
   */
  @java.lang.Override

  public boolean containsBytesField(
      int key) {
    
    return internalGetBytesField().containsKey(key);
  }
  /**
   * Use {@link #getBytesFieldMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.google.protobuf.BytesValue> getBytesField() {
    return getBytesFieldMap();
  }
  /**
   * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.google.protobuf.BytesValue> getBytesFieldMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetBytesField());
  }
  /**
   * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
   */
  @java.lang.Override

  public com.google.protobuf.BytesValue getBytesFieldOrDefault(
      int key,
      com.google.protobuf.BytesValue defaultValue) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.BytesValue> map =
        internalGetBytesField();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
   */
  @java.lang.Override

  public com.google.protobuf.BytesValue getBytesFieldOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.google.protobuf.BytesValue> map =
        internalGetBytesField();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
   */
  private java.util.Map<java.lang.Integer, com.google.protobuf.BytesValue>
  getMutableBytesFieldMap() {
    return internalGetMutableBytesField();
  }

  public static com.google.protobuf.test.MapWellKnownTypes parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.protobuf.test.MapWellKnownTypes parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.google.protobuf.test.MapWellKnownTypes prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A map field for each well-known type. We only
   * need to worry about the value part of the map being the
   * well-known types, as messages can't be map keys.
   * </pre>
   *
   * Protobuf type {@code protobuf_unittest.MapWellKnownTypes}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.protobuf.test.MapWellKnownTypes, Builder> implements
      // @@protoc_insertion_point(builder_implements:protobuf_unittest.MapWellKnownTypes)
      com.google.protobuf.test.MapWellKnownTypesOrBuilder {
    // Construct using com.google.protobuf.test.MapWellKnownTypes.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    @java.lang.Override

    public int getAnyFieldCount() {
      return instance.getAnyFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
     */
    @java.lang.Override

    public boolean containsAnyField(
        int key) {
      
      return instance.getAnyFieldMap().containsKey(key);
    }

    public Builder clearAnyField() {
      copyOnWrite();
      instance.getMutableAnyFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
     */

    public Builder removeAnyField(
        int key) {
      
      copyOnWrite();
      instance.getMutableAnyFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getAnyFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.Any> getAnyField() {
      return getAnyFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.Any> getAnyFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getAnyFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Any getAnyFieldOrDefault(
        int key,
        com.google.protobuf.Any defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Any> map =
          instance.getAnyFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Any getAnyFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Any> map =
          instance.getAnyFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
     */
    public Builder putAnyField(
        int key,
        com.google.protobuf.Any value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableAnyFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Any&gt; any_field = 1;</code>
     */
    public Builder putAllAnyField(
        java.util.Map<java.lang.Integer, com.google.protobuf.Any> values) {
      copyOnWrite();
      instance.getMutableAnyFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getApiFieldCount() {
      return instance.getApiFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
     */
    @java.lang.Override

    public boolean containsApiField(
        int key) {
      
      return instance.getApiFieldMap().containsKey(key);
    }

    public Builder clearApiField() {
      copyOnWrite();
      instance.getMutableApiFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
     */

    public Builder removeApiField(
        int key) {
      
      copyOnWrite();
      instance.getMutableApiFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getApiFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.Api> getApiField() {
      return getApiFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.Api> getApiFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getApiFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Api getApiFieldOrDefault(
        int key,
        com.google.protobuf.Api defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Api> map =
          instance.getApiFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Api getApiFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Api> map =
          instance.getApiFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
     */
    public Builder putApiField(
        int key,
        com.google.protobuf.Api value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableApiFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Api&gt; api_field = 2;</code>
     */
    public Builder putAllApiField(
        java.util.Map<java.lang.Integer, com.google.protobuf.Api> values) {
      copyOnWrite();
      instance.getMutableApiFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getDurationFieldCount() {
      return instance.getDurationFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
     */
    @java.lang.Override

    public boolean containsDurationField(
        int key) {
      
      return instance.getDurationFieldMap().containsKey(key);
    }

    public Builder clearDurationField() {
      copyOnWrite();
      instance.getMutableDurationFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
     */

    public Builder removeDurationField(
        int key) {
      
      copyOnWrite();
      instance.getMutableDurationFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getDurationFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.Duration> getDurationField() {
      return getDurationFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.Duration> getDurationFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getDurationFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Duration getDurationFieldOrDefault(
        int key,
        com.google.protobuf.Duration defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Duration> map =
          instance.getDurationFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Duration getDurationFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Duration> map =
          instance.getDurationFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
     */
    public Builder putDurationField(
        int key,
        com.google.protobuf.Duration value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableDurationFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Duration&gt; duration_field = 3;</code>
     */
    public Builder putAllDurationField(
        java.util.Map<java.lang.Integer, com.google.protobuf.Duration> values) {
      copyOnWrite();
      instance.getMutableDurationFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getEmptyFieldCount() {
      return instance.getEmptyFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
     */
    @java.lang.Override

    public boolean containsEmptyField(
        int key) {
      
      return instance.getEmptyFieldMap().containsKey(key);
    }

    public Builder clearEmptyField() {
      copyOnWrite();
      instance.getMutableEmptyFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
     */

    public Builder removeEmptyField(
        int key) {
      
      copyOnWrite();
      instance.getMutableEmptyFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getEmptyFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.Empty> getEmptyField() {
      return getEmptyFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.Empty> getEmptyFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getEmptyFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Empty getEmptyFieldOrDefault(
        int key,
        com.google.protobuf.Empty defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Empty> map =
          instance.getEmptyFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Empty getEmptyFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Empty> map =
          instance.getEmptyFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
     */
    public Builder putEmptyField(
        int key,
        com.google.protobuf.Empty value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableEmptyFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Empty&gt; empty_field = 4;</code>
     */
    public Builder putAllEmptyField(
        java.util.Map<java.lang.Integer, com.google.protobuf.Empty> values) {
      copyOnWrite();
      instance.getMutableEmptyFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getFieldMaskFieldCount() {
      return instance.getFieldMaskFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
     */
    @java.lang.Override

    public boolean containsFieldMaskField(
        int key) {
      
      return instance.getFieldMaskFieldMap().containsKey(key);
    }

    public Builder clearFieldMaskField() {
      copyOnWrite();
      instance.getMutableFieldMaskFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
     */

    public Builder removeFieldMaskField(
        int key) {
      
      copyOnWrite();
      instance.getMutableFieldMaskFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getFieldMaskFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.FieldMask> getFieldMaskField() {
      return getFieldMaskFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.FieldMask> getFieldMaskFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getFieldMaskFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
     */
    @java.lang.Override

    public com.google.protobuf.FieldMask getFieldMaskFieldOrDefault(
        int key,
        com.google.protobuf.FieldMask defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.FieldMask> map =
          instance.getFieldMaskFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
     */
    @java.lang.Override

    public com.google.protobuf.FieldMask getFieldMaskFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.FieldMask> map =
          instance.getFieldMaskFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
     */
    public Builder putFieldMaskField(
        int key,
        com.google.protobuf.FieldMask value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableFieldMaskFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FieldMask&gt; field_mask_field = 5;</code>
     */
    public Builder putAllFieldMaskField(
        java.util.Map<java.lang.Integer, com.google.protobuf.FieldMask> values) {
      copyOnWrite();
      instance.getMutableFieldMaskFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getSourceContextFieldCount() {
      return instance.getSourceContextFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
     */
    @java.lang.Override

    public boolean containsSourceContextField(
        int key) {
      
      return instance.getSourceContextFieldMap().containsKey(key);
    }

    public Builder clearSourceContextField() {
      copyOnWrite();
      instance.getMutableSourceContextFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
     */

    public Builder removeSourceContextField(
        int key) {
      
      copyOnWrite();
      instance.getMutableSourceContextFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getSourceContextFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.SourceContext> getSourceContextField() {
      return getSourceContextFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.SourceContext> getSourceContextFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getSourceContextFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
     */
    @java.lang.Override

    public com.google.protobuf.SourceContext getSourceContextFieldOrDefault(
        int key,
        com.google.protobuf.SourceContext defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.SourceContext> map =
          instance.getSourceContextFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
     */
    @java.lang.Override

    public com.google.protobuf.SourceContext getSourceContextFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.SourceContext> map =
          instance.getSourceContextFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
     */
    public Builder putSourceContextField(
        int key,
        com.google.protobuf.SourceContext value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableSourceContextFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.SourceContext&gt; source_context_field = 6;</code>
     */
    public Builder putAllSourceContextField(
        java.util.Map<java.lang.Integer, com.google.protobuf.SourceContext> values) {
      copyOnWrite();
      instance.getMutableSourceContextFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getStructFieldCount() {
      return instance.getStructFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
     */
    @java.lang.Override

    public boolean containsStructField(
        int key) {
      
      return instance.getStructFieldMap().containsKey(key);
    }

    public Builder clearStructField() {
      copyOnWrite();
      instance.getMutableStructFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
     */

    public Builder removeStructField(
        int key) {
      
      copyOnWrite();
      instance.getMutableStructFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getStructFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.Struct> getStructField() {
      return getStructFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.Struct> getStructFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getStructFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Struct getStructFieldOrDefault(
        int key,
        com.google.protobuf.Struct defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Struct> map =
          instance.getStructFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Struct getStructFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Struct> map =
          instance.getStructFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
     */
    public Builder putStructField(
        int key,
        com.google.protobuf.Struct value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableStructFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Struct&gt; struct_field = 7;</code>
     */
    public Builder putAllStructField(
        java.util.Map<java.lang.Integer, com.google.protobuf.Struct> values) {
      copyOnWrite();
      instance.getMutableStructFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getTimestampFieldCount() {
      return instance.getTimestampFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
     */
    @java.lang.Override

    public boolean containsTimestampField(
        int key) {
      
      return instance.getTimestampFieldMap().containsKey(key);
    }

    public Builder clearTimestampField() {
      copyOnWrite();
      instance.getMutableTimestampFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
     */

    public Builder removeTimestampField(
        int key) {
      
      copyOnWrite();
      instance.getMutableTimestampFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getTimestampFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.Timestamp> getTimestampField() {
      return getTimestampFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.Timestamp> getTimestampFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getTimestampFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Timestamp getTimestampFieldOrDefault(
        int key,
        com.google.protobuf.Timestamp defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Timestamp> map =
          instance.getTimestampFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Timestamp getTimestampFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Timestamp> map =
          instance.getTimestampFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
     */
    public Builder putTimestampField(
        int key,
        com.google.protobuf.Timestamp value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableTimestampFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Timestamp&gt; timestamp_field = 8;</code>
     */
    public Builder putAllTimestampField(
        java.util.Map<java.lang.Integer, com.google.protobuf.Timestamp> values) {
      copyOnWrite();
      instance.getMutableTimestampFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getTypeFieldCount() {
      return instance.getTypeFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
     */
    @java.lang.Override

    public boolean containsTypeField(
        int key) {
      
      return instance.getTypeFieldMap().containsKey(key);
    }

    public Builder clearTypeField() {
      copyOnWrite();
      instance.getMutableTypeFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
     */

    public Builder removeTypeField(
        int key) {
      
      copyOnWrite();
      instance.getMutableTypeFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getTypeFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.Type> getTypeField() {
      return getTypeFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.Type> getTypeFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getTypeFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Type getTypeFieldOrDefault(
        int key,
        com.google.protobuf.Type defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Type> map =
          instance.getTypeFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Type getTypeFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Type> map =
          instance.getTypeFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
     */
    public Builder putTypeField(
        int key,
        com.google.protobuf.Type value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableTypeFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Type&gt; type_field = 9;</code>
     */
    public Builder putAllTypeField(
        java.util.Map<java.lang.Integer, com.google.protobuf.Type> values) {
      copyOnWrite();
      instance.getMutableTypeFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getDoubleFieldCount() {
      return instance.getDoubleFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
     */
    @java.lang.Override

    public boolean containsDoubleField(
        int key) {
      
      return instance.getDoubleFieldMap().containsKey(key);
    }

    public Builder clearDoubleField() {
      copyOnWrite();
      instance.getMutableDoubleFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
     */

    public Builder removeDoubleField(
        int key) {
      
      copyOnWrite();
      instance.getMutableDoubleFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getDoubleFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.DoubleValue> getDoubleField() {
      return getDoubleFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.DoubleValue> getDoubleFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getDoubleFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
     */
    @java.lang.Override

    public com.google.protobuf.DoubleValue getDoubleFieldOrDefault(
        int key,
        com.google.protobuf.DoubleValue defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.DoubleValue> map =
          instance.getDoubleFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
     */
    @java.lang.Override

    public com.google.protobuf.DoubleValue getDoubleFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.DoubleValue> map =
          instance.getDoubleFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
     */
    public Builder putDoubleField(
        int key,
        com.google.protobuf.DoubleValue value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableDoubleFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.DoubleValue&gt; double_field = 10;</code>
     */
    public Builder putAllDoubleField(
        java.util.Map<java.lang.Integer, com.google.protobuf.DoubleValue> values) {
      copyOnWrite();
      instance.getMutableDoubleFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getFloatFieldCount() {
      return instance.getFloatFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
     */
    @java.lang.Override

    public boolean containsFloatField(
        int key) {
      
      return instance.getFloatFieldMap().containsKey(key);
    }

    public Builder clearFloatField() {
      copyOnWrite();
      instance.getMutableFloatFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
     */

    public Builder removeFloatField(
        int key) {
      
      copyOnWrite();
      instance.getMutableFloatFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getFloatFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.FloatValue> getFloatField() {
      return getFloatFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.FloatValue> getFloatFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getFloatFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
     */
    @java.lang.Override

    public com.google.protobuf.FloatValue getFloatFieldOrDefault(
        int key,
        com.google.protobuf.FloatValue defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.FloatValue> map =
          instance.getFloatFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
     */
    @java.lang.Override

    public com.google.protobuf.FloatValue getFloatFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.FloatValue> map =
          instance.getFloatFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
     */
    public Builder putFloatField(
        int key,
        com.google.protobuf.FloatValue value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableFloatFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.FloatValue&gt; float_field = 11;</code>
     */
    public Builder putAllFloatField(
        java.util.Map<java.lang.Integer, com.google.protobuf.FloatValue> values) {
      copyOnWrite();
      instance.getMutableFloatFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getInt64FieldCount() {
      return instance.getInt64FieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
     */
    @java.lang.Override

    public boolean containsInt64Field(
        int key) {
      
      return instance.getInt64FieldMap().containsKey(key);
    }

    public Builder clearInt64Field() {
      copyOnWrite();
      instance.getMutableInt64FieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
     */

    public Builder removeInt64Field(
        int key) {
      
      copyOnWrite();
      instance.getMutableInt64FieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getInt64FieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.Int64Value> getInt64Field() {
      return getInt64FieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.Int64Value> getInt64FieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getInt64FieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Int64Value getInt64FieldOrDefault(
        int key,
        com.google.protobuf.Int64Value defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Int64Value> map =
          instance.getInt64FieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Int64Value getInt64FieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Int64Value> map =
          instance.getInt64FieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
     */
    public Builder putInt64Field(
        int key,
        com.google.protobuf.Int64Value value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableInt64FieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int64Value&gt; int64_field = 12;</code>
     */
    public Builder putAllInt64Field(
        java.util.Map<java.lang.Integer, com.google.protobuf.Int64Value> values) {
      copyOnWrite();
      instance.getMutableInt64FieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getUint64FieldCount() {
      return instance.getUint64FieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
     */
    @java.lang.Override

    public boolean containsUint64Field(
        int key) {
      
      return instance.getUint64FieldMap().containsKey(key);
    }

    public Builder clearUint64Field() {
      copyOnWrite();
      instance.getMutableUint64FieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
     */

    public Builder removeUint64Field(
        int key) {
      
      copyOnWrite();
      instance.getMutableUint64FieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getUint64FieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.UInt64Value> getUint64Field() {
      return getUint64FieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.UInt64Value> getUint64FieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getUint64FieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
     */
    @java.lang.Override

    public com.google.protobuf.UInt64Value getUint64FieldOrDefault(
        int key,
        com.google.protobuf.UInt64Value defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.UInt64Value> map =
          instance.getUint64FieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
     */
    @java.lang.Override

    public com.google.protobuf.UInt64Value getUint64FieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.UInt64Value> map =
          instance.getUint64FieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
     */
    public Builder putUint64Field(
        int key,
        com.google.protobuf.UInt64Value value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableUint64FieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt64Value&gt; uint64_field = 13;</code>
     */
    public Builder putAllUint64Field(
        java.util.Map<java.lang.Integer, com.google.protobuf.UInt64Value> values) {
      copyOnWrite();
      instance.getMutableUint64FieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getInt32FieldCount() {
      return instance.getInt32FieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
     */
    @java.lang.Override

    public boolean containsInt32Field(
        int key) {
      
      return instance.getInt32FieldMap().containsKey(key);
    }

    public Builder clearInt32Field() {
      copyOnWrite();
      instance.getMutableInt32FieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
     */

    public Builder removeInt32Field(
        int key) {
      
      copyOnWrite();
      instance.getMutableInt32FieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getInt32FieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.Int32Value> getInt32Field() {
      return getInt32FieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.Int32Value> getInt32FieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getInt32FieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Int32Value getInt32FieldOrDefault(
        int key,
        com.google.protobuf.Int32Value defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Int32Value> map =
          instance.getInt32FieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
     */
    @java.lang.Override

    public com.google.protobuf.Int32Value getInt32FieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.Int32Value> map =
          instance.getInt32FieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
     */
    public Builder putInt32Field(
        int key,
        com.google.protobuf.Int32Value value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableInt32FieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.Int32Value&gt; int32_field = 14;</code>
     */
    public Builder putAllInt32Field(
        java.util.Map<java.lang.Integer, com.google.protobuf.Int32Value> values) {
      copyOnWrite();
      instance.getMutableInt32FieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getUint32FieldCount() {
      return instance.getUint32FieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
     */
    @java.lang.Override

    public boolean containsUint32Field(
        int key) {
      
      return instance.getUint32FieldMap().containsKey(key);
    }

    public Builder clearUint32Field() {
      copyOnWrite();
      instance.getMutableUint32FieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
     */

    public Builder removeUint32Field(
        int key) {
      
      copyOnWrite();
      instance.getMutableUint32FieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getUint32FieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.UInt32Value> getUint32Field() {
      return getUint32FieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.UInt32Value> getUint32FieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getUint32FieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
     */
    @java.lang.Override

    public com.google.protobuf.UInt32Value getUint32FieldOrDefault(
        int key,
        com.google.protobuf.UInt32Value defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.UInt32Value> map =
          instance.getUint32FieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
     */
    @java.lang.Override

    public com.google.protobuf.UInt32Value getUint32FieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.UInt32Value> map =
          instance.getUint32FieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
     */
    public Builder putUint32Field(
        int key,
        com.google.protobuf.UInt32Value value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableUint32FieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.UInt32Value&gt; uint32_field = 15;</code>
     */
    public Builder putAllUint32Field(
        java.util.Map<java.lang.Integer, com.google.protobuf.UInt32Value> values) {
      copyOnWrite();
      instance.getMutableUint32FieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getBoolFieldCount() {
      return instance.getBoolFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
     */
    @java.lang.Override

    public boolean containsBoolField(
        int key) {
      
      return instance.getBoolFieldMap().containsKey(key);
    }

    public Builder clearBoolField() {
      copyOnWrite();
      instance.getMutableBoolFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
     */

    public Builder removeBoolField(
        int key) {
      
      copyOnWrite();
      instance.getMutableBoolFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getBoolFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.BoolValue> getBoolField() {
      return getBoolFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.BoolValue> getBoolFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getBoolFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
     */
    @java.lang.Override

    public com.google.protobuf.BoolValue getBoolFieldOrDefault(
        int key,
        com.google.protobuf.BoolValue defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.BoolValue> map =
          instance.getBoolFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
     */
    @java.lang.Override

    public com.google.protobuf.BoolValue getBoolFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.BoolValue> map =
          instance.getBoolFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
     */
    public Builder putBoolField(
        int key,
        com.google.protobuf.BoolValue value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableBoolFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BoolValue&gt; bool_field = 16;</code>
     */
    public Builder putAllBoolField(
        java.util.Map<java.lang.Integer, com.google.protobuf.BoolValue> values) {
      copyOnWrite();
      instance.getMutableBoolFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getStringFieldCount() {
      return instance.getStringFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
     */
    @java.lang.Override

    public boolean containsStringField(
        int key) {
      
      return instance.getStringFieldMap().containsKey(key);
    }

    public Builder clearStringField() {
      copyOnWrite();
      instance.getMutableStringFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
     */

    public Builder removeStringField(
        int key) {
      
      copyOnWrite();
      instance.getMutableStringFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getStringFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.StringValue> getStringField() {
      return getStringFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.StringValue> getStringFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getStringFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
     */
    @java.lang.Override

    public com.google.protobuf.StringValue getStringFieldOrDefault(
        int key,
        com.google.protobuf.StringValue defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.StringValue> map =
          instance.getStringFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
     */
    @java.lang.Override

    public com.google.protobuf.StringValue getStringFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.StringValue> map =
          instance.getStringFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
     */
    public Builder putStringField(
        int key,
        com.google.protobuf.StringValue value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableStringFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.StringValue&gt; string_field = 17;</code>
     */
    public Builder putAllStringField(
        java.util.Map<java.lang.Integer, com.google.protobuf.StringValue> values) {
      copyOnWrite();
      instance.getMutableStringFieldMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getBytesFieldCount() {
      return instance.getBytesFieldMap().size();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
     */
    @java.lang.Override

    public boolean containsBytesField(
        int key) {
      
      return instance.getBytesFieldMap().containsKey(key);
    }

    public Builder clearBytesField() {
      copyOnWrite();
      instance.getMutableBytesFieldMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
     */

    public Builder removeBytesField(
        int key) {
      
      copyOnWrite();
      instance.getMutableBytesFieldMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getBytesFieldMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.BytesValue> getBytesField() {
      return getBytesFieldMap();
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.BytesValue> getBytesFieldMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getBytesFieldMap());
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
     */
    @java.lang.Override

    public com.google.protobuf.BytesValue getBytesFieldOrDefault(
        int key,
        com.google.protobuf.BytesValue defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.BytesValue> map =
          instance.getBytesFieldMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
     */
    @java.lang.Override

    public com.google.protobuf.BytesValue getBytesFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.BytesValue> map =
          instance.getBytesFieldMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
     */
    public Builder putBytesField(
        int key,
        com.google.protobuf.BytesValue value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableBytesFieldMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .google.protobuf.BytesValue&gt; bytes_field = 18;</code>
     */
    public Builder putAllBytesField(
        java.util.Map<java.lang.Integer, com.google.protobuf.BytesValue> values) {
      copyOnWrite();
      instance.getMutableBytesFieldMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:protobuf_unittest.MapWellKnownTypes)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.protobuf.test.MapWellKnownTypes();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "anyField_",
            AnyFieldDefaultEntryHolder.defaultEntry,
            "apiField_",
            ApiFieldDefaultEntryHolder.defaultEntry,
            "durationField_",
            DurationFieldDefaultEntryHolder.defaultEntry,
            "emptyField_",
            EmptyFieldDefaultEntryHolder.defaultEntry,
            "fieldMaskField_",
            FieldMaskFieldDefaultEntryHolder.defaultEntry,
            "sourceContextField_",
            SourceContextFieldDefaultEntryHolder.defaultEntry,
            "structField_",
            StructFieldDefaultEntryHolder.defaultEntry,
            "timestampField_",
            TimestampFieldDefaultEntryHolder.defaultEntry,
            "typeField_",
            TypeFieldDefaultEntryHolder.defaultEntry,
            "doubleField_",
            DoubleFieldDefaultEntryHolder.defaultEntry,
            "floatField_",
            FloatFieldDefaultEntryHolder.defaultEntry,
            "int64Field_",
            Int64FieldDefaultEntryHolder.defaultEntry,
            "uint64Field_",
            Uint64FieldDefaultEntryHolder.defaultEntry,
            "int32Field_",
            Int32FieldDefaultEntryHolder.defaultEntry,
            "uint32Field_",
            Uint32FieldDefaultEntryHolder.defaultEntry,
            "boolField_",
            BoolFieldDefaultEntryHolder.defaultEntry,
            "stringField_",
            StringFieldDefaultEntryHolder.defaultEntry,
            "bytesField_",
            BytesFieldDefaultEntryHolder.defaultEntry,
          };
          java.lang.String info =
              "\u0000\u0012\u0000\u0000\u0001\u0012\u0012\u0012\u0000\u0000\u00012\u00022\u0003" +
              "2\u00042\u00052\u00062\u00072\b2\t2\n2\u000b2\f2\r2\u000e2\u000f2\u00102\u00112\u0012" +
              "2";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.google.protobuf.test.MapWellKnownTypes> parser = PARSER;
        if (parser == null) {
          synchronized (com.google.protobuf.test.MapWellKnownTypes.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.google.protobuf.test.MapWellKnownTypes>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:protobuf_unittest.MapWellKnownTypes)
  private static final com.google.protobuf.test.MapWellKnownTypes DEFAULT_INSTANCE;
  static {
    MapWellKnownTypes defaultInstance = new MapWellKnownTypes();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      MapWellKnownTypes.class, defaultInstance);
  }

  public static com.google.protobuf.test.MapWellKnownTypes getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<MapWellKnownTypes> PARSER;

  public static com.google.protobuf.Parser<MapWellKnownTypes> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

