//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google/protobuf/unittest_lite.proto

package com.google.protobuf;

@kotlin.jvm.JvmSynthetic
inline fun testParsingMergeLite(block: com.google.protobuf.TestParsingMergeLiteKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite =
  com.google.protobuf.TestParsingMergeLiteKt.Dsl._create(com.google.protobuf.UnittestLite.TestParsingMergeLite.newBuilder()).apply { block() }._build()
object TestParsingMergeLiteKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.protobuf.UnittestLite.TestParsingMergeLite = _builder.build()

    /**
     * <code>required .protobuf_unittest.TestAllTypesLite required_all_types = 1;</code>
     */
    var requiredAllTypes: com.google.protobuf.UnittestLite.TestAllTypesLite
      @JvmName("getRequiredAllTypes")
      get() = _builder.getRequiredAllTypes()
      @JvmName("setRequiredAllTypes")
      set(value) {
        _builder.setRequiredAllTypes(value)
      }
    /**
     * <code>required .protobuf_unittest.TestAllTypesLite required_all_types = 1;</code>
     */
    fun clearRequiredAllTypes() {
      _builder.clearRequiredAllTypes()
    }
    /**
     * <code>required .protobuf_unittest.TestAllTypesLite required_all_types = 1;</code>
     * @return Whether the requiredAllTypes field is set.
     */
    fun hasRequiredAllTypes(): kotlin.Boolean {
      return _builder.hasRequiredAllTypes()
    }

    /**
     * <code>optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;</code>
     */
    var optionalAllTypes: com.google.protobuf.UnittestLite.TestAllTypesLite
      @JvmName("getOptionalAllTypes")
      get() = _builder.getOptionalAllTypes()
      @JvmName("setOptionalAllTypes")
      set(value) {
        _builder.setOptionalAllTypes(value)
      }
    /**
     * <code>optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;</code>
     */
    fun clearOptionalAllTypes() {
      _builder.clearOptionalAllTypes()
    }
    /**
     * <code>optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;</code>
     * @return Whether the optionalAllTypes field is set.
     */
    fun hasOptionalAllTypes(): kotlin.Boolean {
      return _builder.hasOptionalAllTypes()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class RepeatedAllTypesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;</code>
     */
     val repeatedAllTypes: com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, RepeatedAllTypesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRepeatedAllTypesList()
      )
    /**
     * <code>repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;</code>
     * @param value The repeatedAllTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRepeatedAllTypes")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, RepeatedAllTypesProxy>.add(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
      _builder.addRepeatedAllTypes(value)
    }/**
     * <code>repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;</code>
     * @param value The repeatedAllTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRepeatedAllTypes")
    inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, RepeatedAllTypesProxy>.plusAssign(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
      add(value)
    }/**
     * <code>repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;</code>
     * @param values The repeatedAllTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRepeatedAllTypes")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, RepeatedAllTypesProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
      _builder.addAllRepeatedAllTypes(values)
    }/**
     * <code>repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;</code>
     * @param values The repeatedAllTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRepeatedAllTypes")
    inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, RepeatedAllTypesProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
      addAll(values)
    }/**
     * <code>repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;</code>
     * @param index The index to set the value at.
     * @param value The repeatedAllTypes to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRepeatedAllTypes")
    operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, RepeatedAllTypesProxy>.set(index: kotlin.Int, value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
      _builder.setRepeatedAllTypes(index, value)
    }/**
     * <code>repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRepeatedAllTypes")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, RepeatedAllTypesProxy>.clear() {
      _builder.clearRepeatedAllTypes()
    }
    /**
     * <code>optional group OptionalGroup = 10 { ... }</code>
     */
    var optionalGroup: com.google.protobuf.UnittestLite.TestParsingMergeLite.OptionalGroup
      @JvmName("getOptionalGroup")
      get() = _builder.getOptionalGroup()
      @JvmName("setOptionalGroup")
      set(value) {
        _builder.setOptionalGroup(value)
      }
    /**
     * <code>optional group OptionalGroup = 10 { ... }</code>
     */
    fun clearOptionalGroup() {
      _builder.clearOptionalGroup()
    }
    /**
     * <code>optional group OptionalGroup = 10 { ... }</code>
     * @return Whether the optionalgroup field is set.
     */
    fun hasOptionalGroup(): kotlin.Boolean {
      return _builder.hasOptionalGroup()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class RepeatedGroupProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated group RepeatedGroup = 20 { ... }</code>
     */
     val repeatedGroup: com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup, RepeatedGroupProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRepeatedGroupList()
      )
    /**
     * <code>repeated group RepeatedGroup = 20 { ... }</code>
     * @param value The repeatedgroup to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRepeatedGroup")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup, RepeatedGroupProxy>.add(value: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup) {
      _builder.addRepeatedGroup(value)
    }/**
     * <code>repeated group RepeatedGroup = 20 { ... }</code>
     * @param value The repeatedgroup to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRepeatedGroup")
    inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup, RepeatedGroupProxy>.plusAssign(value: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup) {
      add(value)
    }/**
     * <code>repeated group RepeatedGroup = 20 { ... }</code>
     * @param values The repeatedgroup to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRepeatedGroup")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup, RepeatedGroupProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup>) {
      _builder.addAllRepeatedGroup(values)
    }/**
     * <code>repeated group RepeatedGroup = 20 { ... }</code>
     * @param values The repeatedgroup to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRepeatedGroup")
    inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup, RepeatedGroupProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup>) {
      addAll(values)
    }/**
     * <code>repeated group RepeatedGroup = 20 { ... }</code>
     * @param index The index to set the value at.
     * @param value The repeatedgroup to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRepeatedGroup")
    operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup, RepeatedGroupProxy>.set(index: kotlin.Int, value: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup) {
      _builder.setRepeatedGroup(index, value)
    }/**
     * <code>repeated group RepeatedGroup = 20 { ... }</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRepeatedGroup")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup, RepeatedGroupProxy>.clear() {
      _builder.clearRepeatedGroup()
    }@Suppress("UNCHECKED_CAST")
    @kotlin.jvm.JvmSynthetic
    operator fun <T> get(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestParsingMergeLite, T>): T {
      return if (extension.isRepeated) {
        get(extension as com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestParsingMergeLite, List<*>>) as T
      } else {
        _builder.getExtension(extension)
      }
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @kotlin.jvm.JvmName("-getRepeatedExtension")
    operator fun <E> get(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestParsingMergeLite, List<E>>
    ): com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestParsingMergeLite> {
      return com.google.protobuf.kotlin.ExtensionList(extension, _builder.getExtension(extension))
    }

    @kotlin.jvm.JvmSynthetic
    operator fun contains(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestParsingMergeLite, *>): Boolean {
      return _builder.hasExtension(extension)
    }

    @kotlin.jvm.JvmSynthetic
    fun clear(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestParsingMergeLite, *>) {
      _builder.clearExtension(extension)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun <T> setExtension(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestParsingMergeLite, T>, value: T) {
      _builder.setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    inline operator fun <T : Comparable<T>> set(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestParsingMergeLite, T>,
      value: T
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    inline operator fun set(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestParsingMergeLite, com.google.protobuf.ByteString>,
      value: com.google.protobuf.ByteString
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    inline operator fun <T : com.google.protobuf.MessageLite> set(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestParsingMergeLite, T>,
      value: T
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestParsingMergeLite>.add(value: E) {
      _builder.addExtension(this.extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    inline operator fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestParsingMergeLite>.plusAssign(value: E) {
      add(value)
    }

    @kotlin.jvm.JvmSynthetic
    fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestParsingMergeLite>.addAll(values: Iterable<E>) {
      for (value in values) {
        add(value)
      }
    }

    @kotlin.jvm.JvmSynthetic
    inline operator fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestParsingMergeLite>.plusAssign(values: Iterable<E>) {
      addAll(values)
    }

    @kotlin.jvm.JvmSynthetic
    operator fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestParsingMergeLite>.set(index: Int, value: E) {
      _builder.setExtension(this.extension, index, value)
    }

    @kotlin.jvm.JvmSynthetic
    inline fun com.google.protobuf.kotlin.ExtensionList<*, com.google.protobuf.UnittestLite.TestParsingMergeLite>.clear() {
      clear(extension)
    }

  }
  @kotlin.jvm.JvmSynthetic
  inline fun repeatedFieldsGenerator(block: com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator =
    com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Dsl._create(com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.newBuilder()).apply { block() }._build()
  object RepeatedFieldsGeneratorKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      @kotlin.jvm.JvmField private val _builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      class Field1Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field1 = 1;</code>
       */
       val field1: com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field1Proxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getField1List()
        )
      /**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field1 = 1;</code>
       * @param value The field1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addField1")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field1Proxy>.add(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        _builder.addField1(value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field1 = 1;</code>
       * @param value The field1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignField1")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field1Proxy>.plusAssign(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        add(value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field1 = 1;</code>
       * @param values The field1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllField1")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field1Proxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
        _builder.addAllField1(values)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field1 = 1;</code>
       * @param values The field1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllField1")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field1Proxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
        addAll(values)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field1 = 1;</code>
       * @param index The index to set the value at.
       * @param value The field1 to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setField1")
      operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field1Proxy>.set(index: kotlin.Int, value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        _builder.setField1(index, value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field1 = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearField1")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field1Proxy>.clear() {
        _builder.clearField1()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      class Field2Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field2 = 2;</code>
       */
       val field2: com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field2Proxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getField2List()
        )
      /**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field2 = 2;</code>
       * @param value The field2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addField2")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field2Proxy>.add(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        _builder.addField2(value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field2 = 2;</code>
       * @param value The field2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignField2")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field2Proxy>.plusAssign(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        add(value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field2 = 2;</code>
       * @param values The field2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllField2")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field2Proxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
        _builder.addAllField2(values)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field2 = 2;</code>
       * @param values The field2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllField2")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field2Proxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
        addAll(values)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field2 = 2;</code>
       * @param index The index to set the value at.
       * @param value The field2 to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setField2")
      operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field2Proxy>.set(index: kotlin.Int, value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        _builder.setField2(index, value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field2 = 2;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearField2")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field2Proxy>.clear() {
        _builder.clearField2()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      class Field3Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field3 = 3;</code>
       */
       val field3: com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field3Proxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getField3List()
        )
      /**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field3 = 3;</code>
       * @param value The field3 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addField3")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field3Proxy>.add(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        _builder.addField3(value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field3 = 3;</code>
       * @param value The field3 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignField3")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field3Proxy>.plusAssign(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        add(value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field3 = 3;</code>
       * @param values The field3 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllField3")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field3Proxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
        _builder.addAllField3(values)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field3 = 3;</code>
       * @param values The field3 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllField3")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field3Proxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
        addAll(values)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field3 = 3;</code>
       * @param index The index to set the value at.
       * @param value The field3 to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setField3")
      operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field3Proxy>.set(index: kotlin.Int, value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        _builder.setField3(index, value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite field3 = 3;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearField3")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Field3Proxy>.clear() {
        _builder.clearField3()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      class Group1Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated group Group1 = 10 { ... }</code>
       */
       val group1: com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1, Group1Proxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getGroup1List()
        )
      /**
       * <code>repeated group Group1 = 10 { ... }</code>
       * @param value The group1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addGroup1")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1, Group1Proxy>.add(value: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1) {
        _builder.addGroup1(value)
      }/**
       * <code>repeated group Group1 = 10 { ... }</code>
       * @param value The group1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignGroup1")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1, Group1Proxy>.plusAssign(value: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1) {
        add(value)
      }/**
       * <code>repeated group Group1 = 10 { ... }</code>
       * @param values The group1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllGroup1")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1, Group1Proxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1>) {
        _builder.addAllGroup1(values)
      }/**
       * <code>repeated group Group1 = 10 { ... }</code>
       * @param values The group1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllGroup1")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1, Group1Proxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1>) {
        addAll(values)
      }/**
       * <code>repeated group Group1 = 10 { ... }</code>
       * @param index The index to set the value at.
       * @param value The group1 to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setGroup1")
      operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1, Group1Proxy>.set(index: kotlin.Int, value: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1) {
        _builder.setGroup1(index, value)
      }/**
       * <code>repeated group Group1 = 10 { ... }</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearGroup1")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1, Group1Proxy>.clear() {
        _builder.clearGroup1()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      class Group2Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated group Group2 = 20 { ... }</code>
       */
       val group2: com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2, Group2Proxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getGroup2List()
        )
      /**
       * <code>repeated group Group2 = 20 { ... }</code>
       * @param value The group2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addGroup2")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2, Group2Proxy>.add(value: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2) {
        _builder.addGroup2(value)
      }/**
       * <code>repeated group Group2 = 20 { ... }</code>
       * @param value The group2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignGroup2")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2, Group2Proxy>.plusAssign(value: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2) {
        add(value)
      }/**
       * <code>repeated group Group2 = 20 { ... }</code>
       * @param values The group2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllGroup2")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2, Group2Proxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2>) {
        _builder.addAllGroup2(values)
      }/**
       * <code>repeated group Group2 = 20 { ... }</code>
       * @param values The group2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllGroup2")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2, Group2Proxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2>) {
        addAll(values)
      }/**
       * <code>repeated group Group2 = 20 { ... }</code>
       * @param index The index to set the value at.
       * @param value The group2 to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setGroup2")
      operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2, Group2Proxy>.set(index: kotlin.Int, value: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2) {
        _builder.setGroup2(index, value)
      }/**
       * <code>repeated group Group2 = 20 { ... }</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearGroup2")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2, Group2Proxy>.clear() {
        _builder.clearGroup2()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      class Ext1Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;</code>
       */
       val ext1: com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext1Proxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getExt1List()
        )
      /**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;</code>
       * @param value The ext1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addExt1")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext1Proxy>.add(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        _builder.addExt1(value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;</code>
       * @param value The ext1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignExt1")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext1Proxy>.plusAssign(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        add(value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;</code>
       * @param values The ext1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllExt1")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext1Proxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
        _builder.addAllExt1(values)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;</code>
       * @param values The ext1 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllExt1")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext1Proxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
        addAll(values)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;</code>
       * @param index The index to set the value at.
       * @param value The ext1 to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setExt1")
      operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext1Proxy>.set(index: kotlin.Int, value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        _builder.setExt1(index, value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearExt1")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext1Proxy>.clear() {
        _builder.clearExt1()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      class Ext2Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;</code>
       */
       val ext2: com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext2Proxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getExt2List()
        )
      /**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;</code>
       * @param value The ext2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addExt2")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext2Proxy>.add(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        _builder.addExt2(value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;</code>
       * @param value The ext2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignExt2")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext2Proxy>.plusAssign(value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        add(value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;</code>
       * @param values The ext2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllExt2")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext2Proxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
        _builder.addAllExt2(values)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;</code>
       * @param values The ext2 to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllExt2")
      inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext2Proxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.UnittestLite.TestAllTypesLite>) {
        addAll(values)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;</code>
       * @param index The index to set the value at.
       * @param value The ext2 to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setExt2")
      operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext2Proxy>.set(index: kotlin.Int, value: com.google.protobuf.UnittestLite.TestAllTypesLite) {
        _builder.setExt2(index, value)
      }/**
       * <code>repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearExt2")
      fun com.google.protobuf.kotlin.DslList<com.google.protobuf.UnittestLite.TestAllTypesLite, Ext2Proxy>.clear() {
        _builder.clearExt2()
      }}
    @kotlin.jvm.JvmSynthetic
    inline fun group1(block: com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Group1Kt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1 =
      com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Group1Kt.Dsl._create(com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1.newBuilder()).apply { block() }._build()
    object Group1Kt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      class Dsl private constructor(
        @kotlin.jvm.JvmField private val _builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1.Builder
      ) {
        companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1 = _builder.build()

        /**
         * <code>optional .protobuf_unittest.TestAllTypesLite field1 = 11;</code>
         */
        var field1: com.google.protobuf.UnittestLite.TestAllTypesLite
          @JvmName("getField1")
          get() = _builder.getField1()
          @JvmName("setField1")
          set(value) {
            _builder.setField1(value)
          }
        /**
         * <code>optional .protobuf_unittest.TestAllTypesLite field1 = 11;</code>
         */
        fun clearField1() {
          _builder.clearField1()
        }
        /**
         * <code>optional .protobuf_unittest.TestAllTypesLite field1 = 11;</code>
         * @return Whether the field1 field is set.
         */
        fun hasField1(): kotlin.Boolean {
          return _builder.hasField1()
        }
      }
    }
    @kotlin.jvm.JvmSynthetic
    inline fun group2(block: com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Group2Kt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2 =
      com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Group2Kt.Dsl._create(com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2.newBuilder()).apply { block() }._build()
    object Group2Kt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      class Dsl private constructor(
        @kotlin.jvm.JvmField private val _builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2.Builder
      ) {
        companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2 = _builder.build()

        /**
         * <code>optional .protobuf_unittest.TestAllTypesLite field1 = 21;</code>
         */
        var field1: com.google.protobuf.UnittestLite.TestAllTypesLite
          @JvmName("getField1")
          get() = _builder.getField1()
          @JvmName("setField1")
          set(value) {
            _builder.setField1(value)
          }
        /**
         * <code>optional .protobuf_unittest.TestAllTypesLite field1 = 21;</code>
         */
        fun clearField1() {
          _builder.clearField1()
        }
        /**
         * <code>optional .protobuf_unittest.TestAllTypesLite field1 = 21;</code>
         * @return Whether the field1 field is set.
         */
        fun hasField1(): kotlin.Boolean {
          return _builder.hasField1()
        }
      }
    }
  }
  @kotlin.jvm.JvmSynthetic
  inline fun optionalGroup(block: com.google.protobuf.TestParsingMergeLiteKt.OptionalGroupKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite.OptionalGroup =
    com.google.protobuf.TestParsingMergeLiteKt.OptionalGroupKt.Dsl._create(com.google.protobuf.UnittestLite.TestParsingMergeLite.OptionalGroup.newBuilder()).apply { block() }._build()
  object OptionalGroupKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      @kotlin.jvm.JvmField private val _builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.OptionalGroup.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.OptionalGroup.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.google.protobuf.UnittestLite.TestParsingMergeLite.OptionalGroup = _builder.build()

      /**
       * <code>optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;</code>
       */
      var optionalGroupAllTypes: com.google.protobuf.UnittestLite.TestAllTypesLite
        @JvmName("getOptionalGroupAllTypes")
        get() = _builder.getOptionalGroupAllTypes()
        @JvmName("setOptionalGroupAllTypes")
        set(value) {
          _builder.setOptionalGroupAllTypes(value)
        }
      /**
       * <code>optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;</code>
       */
      fun clearOptionalGroupAllTypes() {
        _builder.clearOptionalGroupAllTypes()
      }
      /**
       * <code>optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;</code>
       * @return Whether the optionalGroupAllTypes field is set.
       */
      fun hasOptionalGroupAllTypes(): kotlin.Boolean {
        return _builder.hasOptionalGroupAllTypes()
      }
    }
  }
  @kotlin.jvm.JvmSynthetic
  inline fun repeatedGroup(block: com.google.protobuf.TestParsingMergeLiteKt.RepeatedGroupKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup =
    com.google.protobuf.TestParsingMergeLiteKt.RepeatedGroupKt.Dsl._create(com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup.newBuilder()).apply { block() }._build()
  object RepeatedGroupKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      @kotlin.jvm.JvmField private val _builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup = _builder.build()

      /**
       * <code>optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;</code>
       */
      var repeatedGroupAllTypes: com.google.protobuf.UnittestLite.TestAllTypesLite
        @JvmName("getRepeatedGroupAllTypes")
        get() = _builder.getRepeatedGroupAllTypes()
        @JvmName("setRepeatedGroupAllTypes")
        set(value) {
          _builder.setRepeatedGroupAllTypes(value)
        }
      /**
       * <code>optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;</code>
       */
      fun clearRepeatedGroupAllTypes() {
        _builder.clearRepeatedGroupAllTypes()
      }
      /**
       * <code>optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;</code>
       * @return Whether the repeatedGroupAllTypes field is set.
       */
      fun hasRepeatedGroupAllTypes(): kotlin.Boolean {
        return _builder.hasRepeatedGroupAllTypes()
      }
    }
  }
}
inline fun com.google.protobuf.UnittestLite.TestParsingMergeLite.copy(block: com.google.protobuf.TestParsingMergeLiteKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite =
  com.google.protobuf.TestParsingMergeLiteKt.Dsl._create(this.toBuilder()).apply { block() }._build()
inline fun com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.copy(block: com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator =
  com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Dsl._create(this.toBuilder()).apply { block() }._build()
inline fun com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1.copy(block: com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Group1Kt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group1 =
  com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Group1Kt.Dsl._create(this.toBuilder()).apply { block() }._build()
inline fun com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2.copy(block: com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Group2Kt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedFieldsGenerator.Group2 =
  com.google.protobuf.TestParsingMergeLiteKt.RepeatedFieldsGeneratorKt.Group2Kt.Dsl._create(this.toBuilder()).apply { block() }._build()
inline fun com.google.protobuf.UnittestLite.TestParsingMergeLite.OptionalGroup.copy(block: com.google.protobuf.TestParsingMergeLiteKt.OptionalGroupKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite.OptionalGroup =
  com.google.protobuf.TestParsingMergeLiteKt.OptionalGroupKt.Dsl._create(this.toBuilder()).apply { block() }._build()
inline fun com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup.copy(block: com.google.protobuf.TestParsingMergeLiteKt.RepeatedGroupKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestParsingMergeLite.RepeatedGroup =
  com.google.protobuf.TestParsingMergeLiteKt.RepeatedGroupKt.Dsl._create(this.toBuilder()).apply { block() }._build()
