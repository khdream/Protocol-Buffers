//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google/protobuf/unittest_lite.proto

package com.google.protobuf;

@kotlin.jvm.JvmSynthetic
inline fun testAllExtensionsLite(block: com.google.protobuf.TestAllExtensionsLiteKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestAllExtensionsLite =
  com.google.protobuf.TestAllExtensionsLiteKt.Dsl._create(com.google.protobuf.UnittestLite.TestAllExtensionsLite.newBuilder()).apply { block() }._build()
object TestAllExtensionsLiteKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: com.google.protobuf.UnittestLite.TestAllExtensionsLite.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.protobuf.UnittestLite.TestAllExtensionsLite.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.protobuf.UnittestLite.TestAllExtensionsLite = _builder.build()
    @Suppress("UNCHECKED_CAST")
    @kotlin.jvm.JvmSynthetic
    operator fun <T> get(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestAllExtensionsLite, T>): T {
      return if (extension.isRepeated) {
        get(extension as com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestAllExtensionsLite, List<*>>) as T
      } else {
        _builder.getExtension(extension)
      }
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @kotlin.jvm.JvmName("-getRepeatedExtension")
    operator fun <E> get(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestAllExtensionsLite, List<E>>
    ): com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestAllExtensionsLite> {
      return com.google.protobuf.kotlin.ExtensionList(extension, _builder.getExtension(extension))
    }

    @kotlin.jvm.JvmSynthetic
    operator fun contains(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestAllExtensionsLite, *>): Boolean {
      return _builder.hasExtension(extension)
    }

    @kotlin.jvm.JvmSynthetic
    fun clear(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestAllExtensionsLite, *>) {
      _builder.clearExtension(extension)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun <T> setExtension(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestAllExtensionsLite, T>, value: T) {
      _builder.setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    inline operator fun <T : Comparable<T>> set(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestAllExtensionsLite, T>,
      value: T
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    inline operator fun set(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestAllExtensionsLite, com.google.protobuf.ByteString>,
      value: com.google.protobuf.ByteString
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    inline operator fun <T : com.google.protobuf.MessageLite> set(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.UnittestLite.TestAllExtensionsLite, T>,
      value: T
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestAllExtensionsLite>.add(value: E) {
      _builder.addExtension(this.extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    inline operator fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestAllExtensionsLite>.plusAssign(value: E) {
      add(value)
    }

    @kotlin.jvm.JvmSynthetic
    fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestAllExtensionsLite>.addAll(values: Iterable<E>) {
      for (value in values) {
        add(value)
      }
    }

    @kotlin.jvm.JvmSynthetic
    inline operator fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestAllExtensionsLite>.plusAssign(values: Iterable<E>) {
      addAll(values)
    }

    @kotlin.jvm.JvmSynthetic
    operator fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.UnittestLite.TestAllExtensionsLite>.set(index: Int, value: E) {
      _builder.setExtension(this.extension, index, value)
    }

    @kotlin.jvm.JvmSynthetic
    inline fun com.google.protobuf.kotlin.ExtensionList<*, com.google.protobuf.UnittestLite.TestAllExtensionsLite>.clear() {
      clear(extension)
    }

  }
}
inline fun com.google.protobuf.UnittestLite.TestAllExtensionsLite.copy(block: com.google.protobuf.TestAllExtensionsLiteKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestAllExtensionsLite =
  com.google.protobuf.TestAllExtensionsLiteKt.Dsl._create(this.toBuilder()).apply { block() }._build()
