//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google/protobuf/unittest_lite.proto

package com.google.protobuf;

@kotlin.jvm.JvmSynthetic
inline fun testOneofParsingLite(block: com.google.protobuf.TestOneofParsingLiteKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestOneofParsingLite =
  com.google.protobuf.TestOneofParsingLiteKt.Dsl._create(com.google.protobuf.UnittestLite.TestOneofParsingLite.newBuilder()).apply { block() }._build()
object TestOneofParsingLiteKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: com.google.protobuf.UnittestLite.TestOneofParsingLite.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.protobuf.UnittestLite.TestOneofParsingLite.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.protobuf.UnittestLite.TestOneofParsingLite = _builder.build()

    /**
     * <code>int32 oneof_int32 = 1;</code>
     */
    var oneofInt32: kotlin.Int
      @JvmName("getOneofInt32")
      get() = _builder.getOneofInt32()
      @JvmName("setOneofInt32")
      set(value) {
        _builder.setOneofInt32(value)
      }
    /**
     * <code>int32 oneof_int32 = 1;</code>
     */
    fun clearOneofInt32() {
      _builder.clearOneofInt32()
    }
    /**
     * <code>int32 oneof_int32 = 1;</code>
     * @return Whether the oneofInt32 field is set.
     */
    fun hasOneofInt32(): kotlin.Boolean {
      return _builder.hasOneofInt32()
    }

    /**
     * <code>.protobuf_unittest.TestAllTypesLite oneof_submessage = 2;</code>
     */
    var oneofSubmessage: com.google.protobuf.UnittestLite.TestAllTypesLite
      @JvmName("getOneofSubmessage")
      get() = _builder.getOneofSubmessage()
      @JvmName("setOneofSubmessage")
      set(value) {
        _builder.setOneofSubmessage(value)
      }
    /**
     * <code>.protobuf_unittest.TestAllTypesLite oneof_submessage = 2;</code>
     */
    fun clearOneofSubmessage() {
      _builder.clearOneofSubmessage()
    }
    /**
     * <code>.protobuf_unittest.TestAllTypesLite oneof_submessage = 2;</code>
     * @return Whether the oneofSubmessage field is set.
     */
    fun hasOneofSubmessage(): kotlin.Boolean {
      return _builder.hasOneofSubmessage()
    }

    /**
     * <code>string oneof_string = 3;</code>
     */
    var oneofString: kotlin.String
      @JvmName("getOneofString")
      get() = _builder.getOneofString()
      @JvmName("setOneofString")
      set(value) {
        _builder.setOneofString(value)
      }
    /**
     * <code>string oneof_string = 3;</code>
     */
    fun clearOneofString() {
      _builder.clearOneofString()
    }
    /**
     * <code>string oneof_string = 3;</code>
     * @return Whether the oneofString field is set.
     */
    fun hasOneofString(): kotlin.Boolean {
      return _builder.hasOneofString()
    }

    /**
     * <code>bytes oneof_bytes = 4 [default = "default bytes"];</code>
     */
    var oneofBytes: com.google.protobuf.ByteString
      @JvmName("getOneofBytes")
      get() = _builder.getOneofBytes()
      @JvmName("setOneofBytes")
      set(value) {
        _builder.setOneofBytes(value)
      }
    /**
     * <code>bytes oneof_bytes = 4 [default = "default bytes"];</code>
     */
    fun clearOneofBytes() {
      _builder.clearOneofBytes()
    }
    /**
     * <code>bytes oneof_bytes = 4 [default = "default bytes"];</code>
     * @return Whether the oneofBytes field is set.
     */
    fun hasOneofBytes(): kotlin.Boolean {
      return _builder.hasOneofBytes()
    }

    /**
     * <code>string oneof_string_cord = 5 [default = "default Cord", ctype = CORD];</code>
     */
    var oneofStringCord: kotlin.String
      @JvmName("getOneofStringCord")
      get() = _builder.getOneofStringCord()
      @JvmName("setOneofStringCord")
      set(value) {
        _builder.setOneofStringCord(value)
      }
    /**
     * <code>string oneof_string_cord = 5 [default = "default Cord", ctype = CORD];</code>
     */
    fun clearOneofStringCord() {
      _builder.clearOneofStringCord()
    }
    /**
     * <code>string oneof_string_cord = 5 [default = "default Cord", ctype = CORD];</code>
     * @return Whether the oneofStringCord field is set.
     */
    fun hasOneofStringCord(): kotlin.Boolean {
      return _builder.hasOneofStringCord()
    }

    /**
     * <code>bytes oneof_bytes_cord = 6 [ctype = CORD];</code>
     */
    var oneofBytesCord: com.google.protobuf.ByteString
      @JvmName("getOneofBytesCord")
      get() = _builder.getOneofBytesCord()
      @JvmName("setOneofBytesCord")
      set(value) {
        _builder.setOneofBytesCord(value)
      }
    /**
     * <code>bytes oneof_bytes_cord = 6 [ctype = CORD];</code>
     */
    fun clearOneofBytesCord() {
      _builder.clearOneofBytesCord()
    }
    /**
     * <code>bytes oneof_bytes_cord = 6 [ctype = CORD];</code>
     * @return Whether the oneofBytesCord field is set.
     */
    fun hasOneofBytesCord(): kotlin.Boolean {
      return _builder.hasOneofBytesCord()
    }

    /**
     * <code>string oneof_string_string_piece = 7 [ctype = STRING_PIECE];</code>
     */
    var oneofStringStringPiece: kotlin.String
      @JvmName("getOneofStringStringPiece")
      get() = _builder.getOneofStringStringPiece()
      @JvmName("setOneofStringStringPiece")
      set(value) {
        _builder.setOneofStringStringPiece(value)
      }
    /**
     * <code>string oneof_string_string_piece = 7 [ctype = STRING_PIECE];</code>
     */
    fun clearOneofStringStringPiece() {
      _builder.clearOneofStringStringPiece()
    }
    /**
     * <code>string oneof_string_string_piece = 7 [ctype = STRING_PIECE];</code>
     * @return Whether the oneofStringStringPiece field is set.
     */
    fun hasOneofStringStringPiece(): kotlin.Boolean {
      return _builder.hasOneofStringStringPiece()
    }

    /**
     * <code>bytes oneof_bytes_string_piece = 8 [default = "default StringPiece", ctype = STRING_PIECE];</code>
     */
    var oneofBytesStringPiece: com.google.protobuf.ByteString
      @JvmName("getOneofBytesStringPiece")
      get() = _builder.getOneofBytesStringPiece()
      @JvmName("setOneofBytesStringPiece")
      set(value) {
        _builder.setOneofBytesStringPiece(value)
      }
    /**
     * <code>bytes oneof_bytes_string_piece = 8 [default = "default StringPiece", ctype = STRING_PIECE];</code>
     */
    fun clearOneofBytesStringPiece() {
      _builder.clearOneofBytesStringPiece()
    }
    /**
     * <code>bytes oneof_bytes_string_piece = 8 [default = "default StringPiece", ctype = STRING_PIECE];</code>
     * @return Whether the oneofBytesStringPiece field is set.
     */
    fun hasOneofBytesStringPiece(): kotlin.Boolean {
      return _builder.hasOneofBytesStringPiece()
    }

    /**
     * <code>.protobuf_unittest.V2EnumLite oneof_enum = 9;</code>
     */
    var oneofEnum: com.google.protobuf.UnittestLite.V2EnumLite
      @JvmName("getOneofEnum")
      get() = _builder.getOneofEnum()
      @JvmName("setOneofEnum")
      set(value) {
        _builder.setOneofEnum(value)
      }
    /**
     * <code>.protobuf_unittest.V2EnumLite oneof_enum = 9;</code>
     */
    fun clearOneofEnum() {
      _builder.clearOneofEnum()
    }
    /**
     * <code>.protobuf_unittest.V2EnumLite oneof_enum = 9;</code>
     * @return Whether the oneofEnum field is set.
     */
    fun hasOneofEnum(): kotlin.Boolean {
      return _builder.hasOneofEnum()
    }
    val oneofFieldCase: com.google.protobuf.UnittestLite.TestOneofParsingLite.OneofFieldCase
      @JvmName("getOneofFieldCase")
      get() = _builder.getOneofFieldCase()

    fun clearOneofField() {
      _builder.clearOneofField()
    }
  }
}
inline fun com.google.protobuf.UnittestLite.TestOneofParsingLite.copy(block: com.google.protobuf.TestOneofParsingLiteKt.Dsl.() -> Unit): com.google.protobuf.UnittestLite.TestOneofParsingLite =
  com.google.protobuf.TestOneofParsingLiteKt.Dsl._create(this.toBuilder()).apply { block() }._build()
