// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/google/protobuf/evil_names_proto3.proto

package evil_names_proto3;

public final class EvilNamesProto3OuterClass {
  private EvilNamesProto3OuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface EvilNamesProto3OrBuilder extends
      // @@protoc_insertion_point(interface_extends:evil_names_proto3.EvilNamesProto3)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bool initialized = 1;</code>
     * @return The initialized.
     */
    boolean getInitialized();

    /**
     * <code>bool has_foo = 2;</code>
     * @return The hasFoo.
     */
    boolean getHasFoo();

    /**
     * <code>string Bar = 3;</code>
     * @return The bar.
     */
    java.lang.String getBar();
    /**
     * <code>string Bar = 3;</code>
     * @return The bytes for bar.
     */
    com.google.protobuf.ByteString
        getBarBytes();

    /**
     * <code>bool is_initialized = 4;</code>
     * @return The isInitialized.
     */
    boolean getIsInitialized();

    /**
     * <code>string fooBar = 5;</code>
     * @return Whether the fooBar field is set.
     */
    boolean hasFooBar();
    /**
     * <code>string fooBar = 5;</code>
     * @return The fooBar.
     */
    java.lang.String getFooBar();
    /**
     * <code>string fooBar = 5;</code>
     * @return The bytes for fooBar.
     */
    com.google.protobuf.ByteString
        getFooBarBytes();

    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @return A list containing the aLLCAPS.
     */
    java.util.List<java.lang.String>
        getALLCAPSList();
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @return The count of aLLCAPS.
     */
    int getALLCAPSCount();
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @param index The index of the element to return.
     * @return The aLLCAPS at the given index.
     */
    java.lang.String getALLCAPS(int index);
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @param index The index of the element to return.
     * @return The aLLCAPS at the given index.
     */
    com.google.protobuf.ByteString
        getALLCAPSBytes(int index);

    /**
     * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
     */
    int getALLCAPSMAPCount();
    /**
     * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
     */
    boolean containsALLCAPSMAP(
        int key);
    /**
     * Use {@link #getALLCAPSMAPMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Boolean>
    getALLCAPSMAP();
    /**
     * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Boolean>
    getALLCAPSMAPMap();
    /**
     * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
     */

    boolean getALLCAPSMAPOrDefault(
        int key,
        boolean defaultValue);
    /**
     * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
     */

    boolean getALLCAPSMAPOrThrow(
        int key);

    /**
     * <code>bool has_underbar_preceding_numeric_1foo = 9;</code>
     * @return The hasUnderbarPrecedingNumeric1foo.
     */
    boolean getHasUnderbarPrecedingNumeric1Foo();

    /**
     * <code>bool has_underbar_preceding_numeric_42bar = 10;</code>
     * @return The hasUnderbarPrecedingNumeric42bar.
     */
    boolean getHasUnderbarPrecedingNumeric42Bar();

    /**
     * <code>bool has_underbar_preceding_numeric_123foo42bar_baz = 11;</code>
     * @return The hasUnderbarPrecedingNumeric123foo42barBaz.
     */
    boolean getHasUnderbarPrecedingNumeric123Foo42BarBaz();

    /**
     * <code>repeated string extension = 12;</code>
     * @return A list containing the extension.
     */
    java.util.List<java.lang.String>
        getExtensionList();
    /**
     * <code>repeated string extension = 12;</code>
     * @return The count of extension.
     */
    int getExtensionCount();
    /**
     * <code>repeated string extension = 12;</code>
     * @param index The index of the element to return.
     * @return The extension at the given index.
     */
    java.lang.String getExtension(int index);
    /**
     * <code>repeated string extension = 12;</code>
     * @param index The index of the element to return.
     * @return The extension at the given index.
     */
    com.google.protobuf.ByteString
        getExtensionBytes(int index);

    /**
     * <code>string class = 13;</code>
     * @return The class.
     */
    java.lang.String getClass_();
    /**
     * <code>string class = 13;</code>
     * @return The bytes for class.
     */
    com.google.protobuf.ByteString
        getClass_Bytes();

    /**
     * <code>double int = 14;</code>
     * @return The int.
     */
    double getInt();

    /**
     * <code>bool long = 15;</code>
     * @return The long.
     */
    boolean getLong();

    /**
     * <code>int64 boolean = 16;</code>
     * @return The boolean.
     */
    long getBoolean();

    /**
     * <code>string sealed = 17;</code>
     * @return The sealed.
     */
    java.lang.String getSealed();
    /**
     * <code>string sealed = 17;</code>
     * @return The bytes for sealed.
     */
    com.google.protobuf.ByteString
        getSealedBytes();

    /**
     * <code>float interface = 18;</code>
     * @return The interface.
     */
    float getInterface();

    /**
     * <code>int32 in = 19;</code>
     * @return The in.
     */
    int getIn();

    /**
     * <code>string object = 20;</code>
     * @return The object.
     */
    java.lang.String getObject();
    /**
     * <code>string object = 20;</code>
     * @return The bytes for object.
     */
    com.google.protobuf.ByteString
        getObjectBytes();

    /**
     * <code>string cached_size = 21;</code>
     * @return The cachedSize.
     */
    java.lang.String getCachedSize_();
    /**
     * <code>string cached_size = 21;</code>
     * @return The bytes for cachedSize.
     */
    com.google.protobuf.ByteString
        getCachedSize_Bytes();

    /**
     * <code>bool serialized_size = 22;</code>
     * @return The serializedSize.
     */
    boolean getSerializedSize_();

    /**
     * <code>string value = 23;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <code>string value = 23;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <code>int64 index = 24;</code>
     * @return The index.
     */
    long getIndex();

    /**
     * <code>repeated string values = 25;</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.String>
        getValuesList();
    /**
     * <code>repeated string values = 25;</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <code>repeated string values = 25;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    java.lang.String getValues(int index);
    /**
     * <code>repeated string values = 25;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    com.google.protobuf.ByteString
        getValuesBytes(int index);

    /**
     * <code>repeated string new_values = 26;</code>
     * @return A list containing the newValues.
     */
    java.util.List<java.lang.String>
        getNewValuesList();
    /**
     * <code>repeated string new_values = 26;</code>
     * @return The count of newValues.
     */
    int getNewValuesCount();
    /**
     * <code>repeated string new_values = 26;</code>
     * @param index The index of the element to return.
     * @return The newValues at the given index.
     */
    java.lang.String getNewValues(int index);
    /**
     * <code>repeated string new_values = 26;</code>
     * @param index The index of the element to return.
     * @return The newValues at the given index.
     */
    com.google.protobuf.ByteString
        getNewValuesBytes(int index);

    /**
     * <code>bool builder = 27;</code>
     * @return The builder.
     */
    boolean getBuilder();

    /**
     * <code>map&lt;int32, int32&gt; k = 28;</code>
     */
    int getKCount();
    /**
     * <code>map&lt;int32, int32&gt; k = 28;</code>
     */
    boolean containsK(
        int key);
    /**
     * Use {@link #getKMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getK();
    /**
     * <code>map&lt;int32, int32&gt; k = 28;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getKMap();
    /**
     * <code>map&lt;int32, int32&gt; k = 28;</code>
     */

    int getKOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; k = 28;</code>
     */

    int getKOrThrow(
        int key);

    /**
     * <code>map&lt;string, string&gt; v = 29;</code>
     */
    int getVCount();
    /**
     * <code>map&lt;string, string&gt; v = 29;</code>
     */
    boolean containsV(
        java.lang.String key);
    /**
     * Use {@link #getVMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getV();
    /**
     * <code>map&lt;string, string&gt; v = 29;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getVMap();
    /**
     * <code>map&lt;string, string&gt; v = 29;</code>
     */

    java.lang.String getVOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; v = 29;</code>
     */

    java.lang.String getVOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, int32&gt; key = 30;</code>
     */
    int getKeyCount();
    /**
     * <code>map&lt;string, int32&gt; key = 30;</code>
     */
    boolean containsKey(
        java.lang.String key);
    /**
     * Use {@link #getKeyMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getKey();
    /**
     * <code>map&lt;string, int32&gt; key = 30;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getKeyMap();
    /**
     * <code>map&lt;string, int32&gt; key = 30;</code>
     */

    int getKeyOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; key = 30;</code>
     */

    int getKeyOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;int32, string&gt; map = 31;</code>
     */
    int getMapCount();
    /**
     * <code>map&lt;int32, string&gt; map = 31;</code>
     */
    boolean containsMap(
        int key);
    /**
     * Use {@link #getMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.String>
    getMap();
    /**
     * <code>map&lt;int32, string&gt; map = 31;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.String>
    getMapMap();
    /**
     * <code>map&lt;int32, string&gt; map = 31;</code>
     */

    java.lang.String getMapOrDefault(
        int key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;int32, string&gt; map = 31;</code>
     */

    java.lang.String getMapOrThrow(
        int key);

    /**
     * <code>map&lt;string, int32&gt; pairs = 32;</code>
     */
    int getPairsCount();
    /**
     * <code>map&lt;string, int32&gt; pairs = 32;</code>
     */
    boolean containsPairs(
        java.lang.String key);
    /**
     * Use {@link #getPairsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getPairs();
    /**
     * <code>map&lt;string, int32&gt; pairs = 32;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getPairsMap();
    /**
     * <code>map&lt;string, int32&gt; pairs = 32;</code>
     */

    int getPairsOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; pairs = 32;</code>
     */

    int getPairsOrThrow(
        java.lang.String key);

    /**
     * <code>string _leading_underscore = 33;</code>
     * @return The leadingUnderscore.
     */
    java.lang.String getLeadingUnderscore();
    /**
     * <code>string _leading_underscore = 33;</code>
     * @return The bytes for leadingUnderscore.
     */
    com.google.protobuf.ByteString
        getLeadingUnderscoreBytes();

    /**
     * <code>int32 option = 34;</code>
     * @return Whether the option field is set.
     */
    boolean hasOption();
    /**
     * <code>int32 option = 34;</code>
     * @return The option.
     */
    int getOption();

    public evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3.CamelCaseCase getCamelCaseCase();

    public evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3.LeadingUnderscoreOneofCase getLeadingUnderscoreOneofCase();
  }
  /**
   * Protobuf type {@code evil_names_proto3.EvilNamesProto3}
   */
  public  static final class EvilNamesProto3 extends
      com.google.protobuf.GeneratedMessageLite<
          EvilNamesProto3, EvilNamesProto3.Builder> implements
      // @@protoc_insertion_point(message_implements:evil_names_proto3.EvilNamesProto3)
      EvilNamesProto3OrBuilder {
    private EvilNamesProto3() {
      bar_ = "";
      aLLCAPS_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      extension_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      class__ = "";
      sealed_ = "";
      object_ = "";
      cachedSize__ = "";
      value_ = "";
      values_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      newValues_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      LeadingUnderscore_ = "";
    }
    private int camelCaseCase_ = 0;
    private java.lang.Object camelCase_;
    public enum CamelCaseCase {
      FOOBAR(5),
      CAMELCASE_NOT_SET(0);
      private final int value;
      private CamelCaseCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CamelCaseCase valueOf(int value) {
        return forNumber(value);
      }

      public static CamelCaseCase forNumber(int value) {
        switch (value) {
          case 5: return FOOBAR;
          case 0: return CAMELCASE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public CamelCaseCase
    getCamelCaseCase() {
      return CamelCaseCase.forNumber(
          camelCaseCase_);
    }

    private void clearCamelCase() {
      camelCaseCase_ = 0;
      camelCase_ = null;
    }

    private int LeadingUnderscoreOneofCase_ = 0;
    private java.lang.Object LeadingUnderscoreOneof_;
    public enum LeadingUnderscoreOneofCase {
      OPTION(34),
      LEADINGUNDERSCOREONEOF_NOT_SET(0);
      private final int value;
      private LeadingUnderscoreOneofCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LeadingUnderscoreOneofCase valueOf(int value) {
        return forNumber(value);
      }

      public static LeadingUnderscoreOneofCase forNumber(int value) {
        switch (value) {
          case 34: return OPTION;
          case 0: return LEADINGUNDERSCOREONEOF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public LeadingUnderscoreOneofCase
    getLeadingUnderscoreOneofCase() {
      return LeadingUnderscoreOneofCase.forNumber(
          LeadingUnderscoreOneofCase_);
    }

    private void clearLeadingUnderscoreOneof() {
      LeadingUnderscoreOneofCase_ = 0;
      LeadingUnderscoreOneof_ = null;
    }

    public static final int INITIALIZED_FIELD_NUMBER = 1;
    private boolean initialized_;
    /**
     * <code>bool initialized = 1;</code>
     * @return The initialized.
     */
    @java.lang.Override
    public boolean getInitialized() {
      return initialized_;
    }
    /**
     * <code>bool initialized = 1;</code>
     * @param value The initialized to set.
     */
    private void setInitialized(boolean value) {
      
      initialized_ = value;
    }
    /**
     * <code>bool initialized = 1;</code>
     */
    private void clearInitialized() {
      
      initialized_ = false;
    }

    public static final int HAS_FOO_FIELD_NUMBER = 2;
    private boolean hasFoo_;
    /**
     * <code>bool has_foo = 2;</code>
     * @return The hasFoo.
     */
    @java.lang.Override
    public boolean getHasFoo() {
      return hasFoo_;
    }
    /**
     * <code>bool has_foo = 2;</code>
     * @param value The hasFoo to set.
     */
    private void setHasFoo(boolean value) {
      
      hasFoo_ = value;
    }
    /**
     * <code>bool has_foo = 2;</code>
     */
    private void clearHasFoo() {
      
      hasFoo_ = false;
    }

    public static final int BAR_FIELD_NUMBER = 3;
    private java.lang.String bar_;
    /**
     * <code>string Bar = 3;</code>
     * @return The bar.
     */
    @java.lang.Override
    public java.lang.String getBar() {
      return bar_;
    }
    /**
     * <code>string Bar = 3;</code>
     * @return The bytes for bar.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBarBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(bar_);
    }
    /**
     * <code>string Bar = 3;</code>
     * @param value The bar to set.
     */
    private void setBar(
        java.lang.String value) {
      value.getClass();
  
      bar_ = value;
    }
    /**
     * <code>string Bar = 3;</code>
     */
    private void clearBar() {
      
      bar_ = getDefaultInstance().getBar();
    }
    /**
     * <code>string Bar = 3;</code>
     * @param value The bytes for bar to set.
     */
    private void setBarBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      bar_ = value.toStringUtf8();
      
    }

    public static final int IS_INITIALIZED_FIELD_NUMBER = 4;
    private boolean isInitialized_;
    /**
     * <code>bool is_initialized = 4;</code>
     * @return The isInitialized.
     */
    @java.lang.Override
    public boolean getIsInitialized() {
      return isInitialized_;
    }
    /**
     * <code>bool is_initialized = 4;</code>
     * @param value The isInitialized to set.
     */
    private void setIsInitialized(boolean value) {
      
      isInitialized_ = value;
    }
    /**
     * <code>bool is_initialized = 4;</code>
     */
    private void clearIsInitialized() {
      
      isInitialized_ = false;
    }

    public static final int FOOBAR_FIELD_NUMBER = 5;
    /**
     * <code>string fooBar = 5;</code>
     * @return Whether the fooBar field is set.
     */
    @java.lang.Override
    public boolean hasFooBar() {
      return camelCaseCase_ == 5;
    }
    /**
     * <code>string fooBar = 5;</code>
     * @return The fooBar.
     */
    @java.lang.Override
    public java.lang.String getFooBar() {
      java.lang.String ref = "";
      if (camelCaseCase_ == 5) {
        ref = (java.lang.String) camelCase_;
      }
      return ref;
    }
    /**
     * <code>string fooBar = 5;</code>
     * @return The bytes for fooBar.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFooBarBytes() {
      java.lang.String ref = "";
      if (camelCaseCase_ == 5) {
        ref = (java.lang.String) camelCase_;
      }
      return com.google.protobuf.ByteString.copyFromUtf8(ref);
    }
    /**
     * <code>string fooBar = 5;</code>
     * @param value The fooBar to set.
     */
    private void setFooBar(
        java.lang.String value) {
      value.getClass();
  camelCaseCase_ = 5;
      camelCase_ = value;
    }
    /**
     * <code>string fooBar = 5;</code>
     */
    private void clearFooBar() {
      if (camelCaseCase_ == 5) {
        camelCaseCase_ = 0;
        camelCase_ = null;
      }
    }
    /**
     * <code>string fooBar = 5;</code>
     * @param value The bytes for fooBar to set.
     */
    private void setFooBarBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      camelCase_ = value.toStringUtf8();
      camelCaseCase_ = 5;
    }

    public static final int ALL_CAPS_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> aLLCAPS_;
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @return A list containing the aLLCAPS.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getALLCAPSList() {
      return aLLCAPS_;
    }
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @return The count of aLLCAPS.
     */
    @java.lang.Override
    public int getALLCAPSCount() {
      return aLLCAPS_.size();
    }
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @param index The index of the element to return.
     * @return The aLLCAPS at the given index.
     */
    @java.lang.Override
    public java.lang.String getALLCAPS(int index) {
      return aLLCAPS_.get(index);
    }
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the aLLCAPS at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getALLCAPSBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          aLLCAPS_.get(index));
    }
    private void ensureALLCAPSIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          aLLCAPS_;  if (!tmp.isModifiable()) {
        aLLCAPS_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @param index The index to set the value at.
     * @param value The aLLCAPS to set.
     */
    private void setALLCAPS(
        int index, java.lang.String value) {
      value.getClass();
  ensureALLCAPSIsMutable();
      aLLCAPS_.set(index, value);
    }
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @param value The aLLCAPS to add.
     */
    private void addALLCAPS(
        java.lang.String value) {
      value.getClass();
  ensureALLCAPSIsMutable();
      aLLCAPS_.add(value);
    }
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @param values The aLLCAPS to add.
     */
    private void addAllALLCAPS(
        java.lang.Iterable<java.lang.String> values) {
      ensureALLCAPSIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, aLLCAPS_);
    }
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     */
    private void clearALLCAPS() {
      aLLCAPS_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string ALL_CAPS = 7;</code>
     * @param value The bytes of the aLLCAPS to add.
     */
    private void addALLCAPSBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      ensureALLCAPSIsMutable();
      aLLCAPS_.add(value.toStringUtf8());
    }

    public static final int ALL_CAPS_MAP_FIELD_NUMBER = 8;
    private static final class ALLCAPSMAPDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.Integer, java.lang.Boolean> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.Integer, java.lang.Boolean>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.Integer, java.lang.Boolean> aLLCAPSMAP_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.Boolean>
    internalGetALLCAPSMAP() {
      return aLLCAPSMAP_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.Boolean>
    internalGetMutableALLCAPSMAP() {
      if (!aLLCAPSMAP_.isMutable()) {
        aLLCAPSMAP_ = aLLCAPSMAP_.mutableCopy();
      }
      return aLLCAPSMAP_;
    }
    @java.lang.Override

    public int getALLCAPSMAPCount() {
      return internalGetALLCAPSMAP().size();
    }
    /**
     * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
     */
    @java.lang.Override

    public boolean containsALLCAPSMAP(
        int key) {
      
      return internalGetALLCAPSMAP().containsKey(key);
    }
    /**
     * Use {@link #getALLCAPSMAPMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Boolean> getALLCAPSMAP() {
      return getALLCAPSMAPMap();
    }
    /**
     * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Boolean> getALLCAPSMAPMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetALLCAPSMAP());
    }
    /**
     * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
     */
    @java.lang.Override

    public boolean getALLCAPSMAPOrDefault(
        int key,
        boolean defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Boolean> map =
          internalGetALLCAPSMAP();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
     */
    @java.lang.Override

    public boolean getALLCAPSMAPOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Boolean> map =
          internalGetALLCAPSMAP();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
     */
    private java.util.Map<java.lang.Integer, java.lang.Boolean>
    getMutableALLCAPSMAPMap() {
      return internalGetMutableALLCAPSMAP();
    }

    public static final int HAS_UNDERBAR_PRECEDING_NUMERIC_1FOO_FIELD_NUMBER = 9;
    private boolean hasUnderbarPrecedingNumeric1Foo_;
    /**
     * <code>bool has_underbar_preceding_numeric_1foo = 9;</code>
     * @return The hasUnderbarPrecedingNumeric1foo.
     */
    @java.lang.Override
    public boolean getHasUnderbarPrecedingNumeric1Foo() {
      return hasUnderbarPrecedingNumeric1Foo_;
    }
    /**
     * <code>bool has_underbar_preceding_numeric_1foo = 9;</code>
     * @param value The hasUnderbarPrecedingNumeric1foo to set.
     */
    private void setHasUnderbarPrecedingNumeric1Foo(boolean value) {
      
      hasUnderbarPrecedingNumeric1Foo_ = value;
    }
    /**
     * <code>bool has_underbar_preceding_numeric_1foo = 9;</code>
     */
    private void clearHasUnderbarPrecedingNumeric1Foo() {
      
      hasUnderbarPrecedingNumeric1Foo_ = false;
    }

    public static final int HAS_UNDERBAR_PRECEDING_NUMERIC_42BAR_FIELD_NUMBER = 10;
    private boolean hasUnderbarPrecedingNumeric42Bar_;
    /**
     * <code>bool has_underbar_preceding_numeric_42bar = 10;</code>
     * @return The hasUnderbarPrecedingNumeric42bar.
     */
    @java.lang.Override
    public boolean getHasUnderbarPrecedingNumeric42Bar() {
      return hasUnderbarPrecedingNumeric42Bar_;
    }
    /**
     * <code>bool has_underbar_preceding_numeric_42bar = 10;</code>
     * @param value The hasUnderbarPrecedingNumeric42bar to set.
     */
    private void setHasUnderbarPrecedingNumeric42Bar(boolean value) {
      
      hasUnderbarPrecedingNumeric42Bar_ = value;
    }
    /**
     * <code>bool has_underbar_preceding_numeric_42bar = 10;</code>
     */
    private void clearHasUnderbarPrecedingNumeric42Bar() {
      
      hasUnderbarPrecedingNumeric42Bar_ = false;
    }

    public static final int HAS_UNDERBAR_PRECEDING_NUMERIC_123FOO42BAR_BAZ_FIELD_NUMBER = 11;
    private boolean hasUnderbarPrecedingNumeric123Foo42BarBaz_;
    /**
     * <code>bool has_underbar_preceding_numeric_123foo42bar_baz = 11;</code>
     * @return The hasUnderbarPrecedingNumeric123foo42barBaz.
     */
    @java.lang.Override
    public boolean getHasUnderbarPrecedingNumeric123Foo42BarBaz() {
      return hasUnderbarPrecedingNumeric123Foo42BarBaz_;
    }
    /**
     * <code>bool has_underbar_preceding_numeric_123foo42bar_baz = 11;</code>
     * @param value The hasUnderbarPrecedingNumeric123foo42barBaz to set.
     */
    private void setHasUnderbarPrecedingNumeric123Foo42BarBaz(boolean value) {
      
      hasUnderbarPrecedingNumeric123Foo42BarBaz_ = value;
    }
    /**
     * <code>bool has_underbar_preceding_numeric_123foo42bar_baz = 11;</code>
     */
    private void clearHasUnderbarPrecedingNumeric123Foo42BarBaz() {
      
      hasUnderbarPrecedingNumeric123Foo42BarBaz_ = false;
    }

    public static final int EXTENSION_FIELD_NUMBER = 12;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> extension_;
    /**
     * <code>repeated string extension = 12;</code>
     * @return A list containing the extension.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getExtensionList() {
      return extension_;
    }
    /**
     * <code>repeated string extension = 12;</code>
     * @return The count of extension.
     */
    @java.lang.Override
    public int getExtensionCount() {
      return extension_.size();
    }
    /**
     * <code>repeated string extension = 12;</code>
     * @param index The index of the element to return.
     * @return The extension at the given index.
     */
    @java.lang.Override
    public java.lang.String getExtension(int index) {
      return extension_.get(index);
    }
    /**
     * <code>repeated string extension = 12;</code>
     * @param index The index of the value to return.
     * @return The bytes of the extension at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExtensionBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          extension_.get(index));
    }
    private void ensureExtensionIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          extension_;  if (!tmp.isModifiable()) {
        extension_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated string extension = 12;</code>
     * @param index The index to set the value at.
     * @param value The extension to set.
     */
    private void setExtension(
        int index, java.lang.String value) {
      value.getClass();
  ensureExtensionIsMutable();
      extension_.set(index, value);
    }
    /**
     * <code>repeated string extension = 12;</code>
     * @param value The extension to add.
     */
    private void addExtension(
        java.lang.String value) {
      value.getClass();
  ensureExtensionIsMutable();
      extension_.add(value);
    }
    /**
     * <code>repeated string extension = 12;</code>
     * @param values The extension to add.
     */
    private void addAllExtension(
        java.lang.Iterable<java.lang.String> values) {
      ensureExtensionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, extension_);
    }
    /**
     * <code>repeated string extension = 12;</code>
     */
    private void clearExtension() {
      extension_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string extension = 12;</code>
     * @param value The bytes of the extension to add.
     */
    private void addExtensionBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      ensureExtensionIsMutable();
      extension_.add(value.toStringUtf8());
    }

    public static final int CLASS_FIELD_NUMBER = 13;
    private java.lang.String class__;
    /**
     * <code>string class = 13;</code>
     * @return The class.
     */
    @java.lang.Override
    public java.lang.String getClass_() {
      return class__;
    }
    /**
     * <code>string class = 13;</code>
     * @return The bytes for class.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClass_Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(class__);
    }
    /**
     * <code>string class = 13;</code>
     * @param value The class to set.
     */
    private void setClass_(
        java.lang.String value) {
      value.getClass();
  
      class__ = value;
    }
    /**
     * <code>string class = 13;</code>
     */
    private void clearClass_() {
      
      class__ = getDefaultInstance().getClass_();
    }
    /**
     * <code>string class = 13;</code>
     * @param value The bytes for class to set.
     */
    private void setClass_Bytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      class__ = value.toStringUtf8();
      
    }

    public static final int INT_FIELD_NUMBER = 14;
    private double int_;
    /**
     * <code>double int = 14;</code>
     * @return The int.
     */
    @java.lang.Override
    public double getInt() {
      return int_;
    }
    /**
     * <code>double int = 14;</code>
     * @param value The int to set.
     */
    private void setInt(double value) {
      
      int_ = value;
    }
    /**
     * <code>double int = 14;</code>
     */
    private void clearInt() {
      
      int_ = 0D;
    }

    public static final int LONG_FIELD_NUMBER = 15;
    private boolean long_;
    /**
     * <code>bool long = 15;</code>
     * @return The long.
     */
    @java.lang.Override
    public boolean getLong() {
      return long_;
    }
    /**
     * <code>bool long = 15;</code>
     * @param value The long to set.
     */
    private void setLong(boolean value) {
      
      long_ = value;
    }
    /**
     * <code>bool long = 15;</code>
     */
    private void clearLong() {
      
      long_ = false;
    }

    public static final int BOOLEAN_FIELD_NUMBER = 16;
    private long boolean_;
    /**
     * <code>int64 boolean = 16;</code>
     * @return The boolean.
     */
    @java.lang.Override
    public long getBoolean() {
      return boolean_;
    }
    /**
     * <code>int64 boolean = 16;</code>
     * @param value The boolean to set.
     */
    private void setBoolean(long value) {
      
      boolean_ = value;
    }
    /**
     * <code>int64 boolean = 16;</code>
     */
    private void clearBoolean() {
      
      boolean_ = 0L;
    }

    public static final int SEALED_FIELD_NUMBER = 17;
    private java.lang.String sealed_;
    /**
     * <code>string sealed = 17;</code>
     * @return The sealed.
     */
    @java.lang.Override
    public java.lang.String getSealed() {
      return sealed_;
    }
    /**
     * <code>string sealed = 17;</code>
     * @return The bytes for sealed.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSealedBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(sealed_);
    }
    /**
     * <code>string sealed = 17;</code>
     * @param value The sealed to set.
     */
    private void setSealed(
        java.lang.String value) {
      value.getClass();
  
      sealed_ = value;
    }
    /**
     * <code>string sealed = 17;</code>
     */
    private void clearSealed() {
      
      sealed_ = getDefaultInstance().getSealed();
    }
    /**
     * <code>string sealed = 17;</code>
     * @param value The bytes for sealed to set.
     */
    private void setSealedBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      sealed_ = value.toStringUtf8();
      
    }

    public static final int INTERFACE_FIELD_NUMBER = 18;
    private float interface_;
    /**
     * <code>float interface = 18;</code>
     * @return The interface.
     */
    @java.lang.Override
    public float getInterface() {
      return interface_;
    }
    /**
     * <code>float interface = 18;</code>
     * @param value The interface to set.
     */
    private void setInterface(float value) {
      
      interface_ = value;
    }
    /**
     * <code>float interface = 18;</code>
     */
    private void clearInterface() {
      
      interface_ = 0F;
    }

    public static final int IN_FIELD_NUMBER = 19;
    private int in_;
    /**
     * <code>int32 in = 19;</code>
     * @return The in.
     */
    @java.lang.Override
    public int getIn() {
      return in_;
    }
    /**
     * <code>int32 in = 19;</code>
     * @param value The in to set.
     */
    private void setIn(int value) {
      
      in_ = value;
    }
    /**
     * <code>int32 in = 19;</code>
     */
    private void clearIn() {
      
      in_ = 0;
    }

    public static final int OBJECT_FIELD_NUMBER = 20;
    private java.lang.String object_;
    /**
     * <code>string object = 20;</code>
     * @return The object.
     */
    @java.lang.Override
    public java.lang.String getObject() {
      return object_;
    }
    /**
     * <code>string object = 20;</code>
     * @return The bytes for object.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getObjectBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(object_);
    }
    /**
     * <code>string object = 20;</code>
     * @param value The object to set.
     */
    private void setObject(
        java.lang.String value) {
      value.getClass();
  
      object_ = value;
    }
    /**
     * <code>string object = 20;</code>
     */
    private void clearObject() {
      
      object_ = getDefaultInstance().getObject();
    }
    /**
     * <code>string object = 20;</code>
     * @param value The bytes for object to set.
     */
    private void setObjectBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      object_ = value.toStringUtf8();
      
    }

    public static final int CACHED_SIZE_FIELD_NUMBER = 21;
    private java.lang.String cachedSize__;
    /**
     * <code>string cached_size = 21;</code>
     * @return The cachedSize.
     */
    @java.lang.Override
    public java.lang.String getCachedSize_() {
      return cachedSize__;
    }
    /**
     * <code>string cached_size = 21;</code>
     * @return The bytes for cachedSize.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCachedSize_Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(cachedSize__);
    }
    /**
     * <code>string cached_size = 21;</code>
     * @param value The cachedSize to set.
     */
    private void setCachedSize_(
        java.lang.String value) {
      value.getClass();
  
      cachedSize__ = value;
    }
    /**
     * <code>string cached_size = 21;</code>
     */
    private void clearCachedSize_() {
      
      cachedSize__ = getDefaultInstance().getCachedSize_();
    }
    /**
     * <code>string cached_size = 21;</code>
     * @param value The bytes for cachedSize to set.
     */
    private void setCachedSize_Bytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      cachedSize__ = value.toStringUtf8();
      
    }

    public static final int SERIALIZED_SIZE_FIELD_NUMBER = 22;
    private boolean serializedSize__;
    /**
     * <code>bool serialized_size = 22;</code>
     * @return The serializedSize.
     */
    @java.lang.Override
    public boolean getSerializedSize_() {
      return serializedSize__;
    }
    /**
     * <code>bool serialized_size = 22;</code>
     * @param value The serializedSize to set.
     */
    private void setSerializedSize_(boolean value) {
      
      serializedSize__ = value;
    }
    /**
     * <code>bool serialized_size = 22;</code>
     */
    private void clearSerializedSize_() {
      
      serializedSize__ = false;
    }

    public static final int VALUE_FIELD_NUMBER = 23;
    private java.lang.String value_;
    /**
     * <code>string value = 23;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      return value_;
    }
    /**
     * <code>string value = 23;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(value_);
    }
    /**
     * <code>string value = 23;</code>
     * @param value The value to set.
     */
    private void setValue(
        java.lang.String value) {
      value.getClass();
  
      value_ = value;
    }
    /**
     * <code>string value = 23;</code>
     */
    private void clearValue() {
      
      value_ = getDefaultInstance().getValue();
    }
    /**
     * <code>string value = 23;</code>
     * @param value The bytes for value to set.
     */
    private void setValueBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      value_ = value.toStringUtf8();
      
    }

    public static final int INDEX_FIELD_NUMBER = 24;
    private long index_;
    /**
     * <code>int64 index = 24;</code>
     * @return The index.
     */
    @java.lang.Override
    public long getIndex() {
      return index_;
    }
    /**
     * <code>int64 index = 24;</code>
     * @param value The index to set.
     */
    private void setIndex(long value) {
      
      index_ = value;
    }
    /**
     * <code>int64 index = 24;</code>
     */
    private void clearIndex() {
      
      index_ = 0L;
    }

    public static final int VALUES_FIELD_NUMBER = 25;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> values_;
    /**
     * <code>repeated string values = 25;</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated string values = 25;</code>
     * @return The count of values.
     */
    @java.lang.Override
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated string values = 25;</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    @java.lang.Override
    public java.lang.String getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated string values = 25;</code>
     * @param index The index of the value to return.
     * @return The bytes of the values at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValuesBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          values_.get(index));
    }
    private void ensureValuesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          values_;  if (!tmp.isModifiable()) {
        values_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated string values = 25;</code>
     * @param index The index to set the value at.
     * @param value The values to set.
     */
    private void setValues(
        int index, java.lang.String value) {
      value.getClass();
  ensureValuesIsMutable();
      values_.set(index, value);
    }
    /**
     * <code>repeated string values = 25;</code>
     * @param value The values to add.
     */
    private void addValues(
        java.lang.String value) {
      value.getClass();
  ensureValuesIsMutable();
      values_.add(value);
    }
    /**
     * <code>repeated string values = 25;</code>
     * @param values The values to add.
     */
    private void addAllValues(
        java.lang.Iterable<java.lang.String> values) {
      ensureValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, values_);
    }
    /**
     * <code>repeated string values = 25;</code>
     */
    private void clearValues() {
      values_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string values = 25;</code>
     * @param value The bytes of the values to add.
     */
    private void addValuesBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      ensureValuesIsMutable();
      values_.add(value.toStringUtf8());
    }

    public static final int NEW_VALUES_FIELD_NUMBER = 26;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> newValues_;
    /**
     * <code>repeated string new_values = 26;</code>
     * @return A list containing the newValues.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getNewValuesList() {
      return newValues_;
    }
    /**
     * <code>repeated string new_values = 26;</code>
     * @return The count of newValues.
     */
    @java.lang.Override
    public int getNewValuesCount() {
      return newValues_.size();
    }
    /**
     * <code>repeated string new_values = 26;</code>
     * @param index The index of the element to return.
     * @return The newValues at the given index.
     */
    @java.lang.Override
    public java.lang.String getNewValues(int index) {
      return newValues_.get(index);
    }
    /**
     * <code>repeated string new_values = 26;</code>
     * @param index The index of the value to return.
     * @return The bytes of the newValues at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNewValuesBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          newValues_.get(index));
    }
    private void ensureNewValuesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          newValues_;  if (!tmp.isModifiable()) {
        newValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated string new_values = 26;</code>
     * @param index The index to set the value at.
     * @param value The newValues to set.
     */
    private void setNewValues(
        int index, java.lang.String value) {
      value.getClass();
  ensureNewValuesIsMutable();
      newValues_.set(index, value);
    }
    /**
     * <code>repeated string new_values = 26;</code>
     * @param value The newValues to add.
     */
    private void addNewValues(
        java.lang.String value) {
      value.getClass();
  ensureNewValuesIsMutable();
      newValues_.add(value);
    }
    /**
     * <code>repeated string new_values = 26;</code>
     * @param values The newValues to add.
     */
    private void addAllNewValues(
        java.lang.Iterable<java.lang.String> values) {
      ensureNewValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, newValues_);
    }
    /**
     * <code>repeated string new_values = 26;</code>
     */
    private void clearNewValues() {
      newValues_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string new_values = 26;</code>
     * @param value The bytes of the newValues to add.
     */
    private void addNewValuesBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      ensureNewValuesIsMutable();
      newValues_.add(value.toStringUtf8());
    }

    public static final int BUILDER_FIELD_NUMBER = 27;
    private boolean builder_;
    /**
     * <code>bool builder = 27;</code>
     * @return The builder.
     */
    @java.lang.Override
    public boolean getBuilder() {
      return builder_;
    }
    /**
     * <code>bool builder = 27;</code>
     * @param value The builder to set.
     */
    private void setBuilder(boolean value) {
      
      builder_ = value;
    }
    /**
     * <code>bool builder = 27;</code>
     */
    private void clearBuilder() {
      
      builder_ = false;
    }

    public static final int K_FIELD_NUMBER = 28;
    private static final class KDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.Integer, java.lang.Integer> k_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.Integer>
    internalGetK() {
      return k_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.Integer>
    internalGetMutableK() {
      if (!k_.isMutable()) {
        k_ = k_.mutableCopy();
      }
      return k_;
    }
    @java.lang.Override

    public int getKCount() {
      return internalGetK().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; k = 28;</code>
     */
    @java.lang.Override

    public boolean containsK(
        int key) {
      
      return internalGetK().containsKey(key);
    }
    /**
     * Use {@link #getKMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getK() {
      return getKMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; k = 28;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getKMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetK());
    }
    /**
     * <code>map&lt;int32, int32&gt; k = 28;</code>
     */
    @java.lang.Override

    public int getKOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetK();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; k = 28;</code>
     */
    @java.lang.Override

    public int getKOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetK();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, int32&gt; k = 28;</code>
     */
    private java.util.Map<java.lang.Integer, java.lang.Integer>
    getMutableKMap() {
      return internalGetMutableK();
    }

    public static final int V_FIELD_NUMBER = 29;
    private static final class VDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, java.lang.String> v_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
    internalGetV() {
      return v_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
    internalGetMutableV() {
      if (!v_.isMutable()) {
        v_ = v_.mutableCopy();
      }
      return v_;
    }
    @java.lang.Override

    public int getVCount() {
      return internalGetV().size();
    }
    /**
     * <code>map&lt;string, string&gt; v = 29;</code>
     */
    @java.lang.Override

    public boolean containsV(
        java.lang.String key) {
      key.getClass();
      return internalGetV().containsKey(key);
    }
    /**
     * Use {@link #getVMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getV() {
      return getVMap();
    }
    /**
     * <code>map&lt;string, string&gt; v = 29;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getVMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetV());
    }
    /**
     * <code>map&lt;string, string&gt; v = 29;</code>
     */
    @java.lang.Override

    public java.lang.String getVOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetV();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; v = 29;</code>
     */
    @java.lang.Override

    public java.lang.String getVOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetV();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, string&gt; v = 29;</code>
     */
    private java.util.Map<java.lang.String, java.lang.String>
    getMutableVMap() {
      return internalGetMutableV();
    }

    public static final int KEY_FIELD_NUMBER = 30;
    private static final class KeyDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, java.lang.Integer> key_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
    internalGetKey() {
      return key_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
    internalGetMutableKey() {
      if (!key_.isMutable()) {
        key_ = key_.mutableCopy();
      }
      return key_;
    }
    @java.lang.Override

    public int getKeyCount() {
      return internalGetKey().size();
    }
    /**
     * <code>map&lt;string, int32&gt; key = 30;</code>
     */
    @java.lang.Override

    public boolean containsKey(
        java.lang.String key) {
      key.getClass();
      return internalGetKey().containsKey(key);
    }
    /**
     * Use {@link #getKeyMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getKey() {
      return getKeyMap();
    }
    /**
     * <code>map&lt;string, int32&gt; key = 30;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer> getKeyMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetKey());
    }
    /**
     * <code>map&lt;string, int32&gt; key = 30;</code>
     */
    @java.lang.Override

    public int getKeyOrDefault(
        java.lang.String key,
        int defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetKey();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; key = 30;</code>
     */
    @java.lang.Override

    public int getKeyOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetKey();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, int32&gt; key = 30;</code>
     */
    private java.util.Map<java.lang.String, java.lang.Integer>
    getMutableKeyMap() {
      return internalGetMutableKey();
    }

    public static final int MAP_FIELD_NUMBER = 31;
    private static final class MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.Integer, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.Integer, java.lang.String>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.Integer, java.lang.String> map_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.String>
    internalGetMap() {
      return map_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.String>
    internalGetMutableMap() {
      if (!map_.isMutable()) {
        map_ = map_.mutableCopy();
      }
      return map_;
    }
    @java.lang.Override

    public int getMapCount() {
      return internalGetMap().size();
    }
    /**
     * <code>map&lt;int32, string&gt; map = 31;</code>
     */
    @java.lang.Override

    public boolean containsMap(
        int key) {
      
      return internalGetMap().containsKey(key);
    }
    /**
     * Use {@link #getMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.String> getMap() {
      return getMapMap();
    }
    /**
     * <code>map&lt;int32, string&gt; map = 31;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.String> getMapMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetMap());
    }
    /**
     * <code>map&lt;int32, string&gt; map = 31;</code>
     */
    @java.lang.Override

    public java.lang.String getMapOrDefault(
        int key,
        java.lang.String defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, string&gt; map = 31;</code>
     */
    @java.lang.Override

    public java.lang.String getMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, string&gt; map = 31;</code>
     */
    private java.util.Map<java.lang.Integer, java.lang.String>
    getMutableMapMap() {
      return internalGetMutableMap();
    }

    public static final int PAIRS_FIELD_NUMBER = 32;
    private static final class PairsDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, java.lang.Integer> pairs_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
    internalGetPairs() {
      return pairs_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
    internalGetMutablePairs() {
      if (!pairs_.isMutable()) {
        pairs_ = pairs_.mutableCopy();
      }
      return pairs_;
    }
    @java.lang.Override

    public int getPairsCount() {
      return internalGetPairs().size();
    }
    /**
     * <code>map&lt;string, int32&gt; pairs = 32;</code>
     */
    @java.lang.Override

    public boolean containsPairs(
        java.lang.String key) {
      key.getClass();
      return internalGetPairs().containsKey(key);
    }
    /**
     * Use {@link #getPairsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getPairs() {
      return getPairsMap();
    }
    /**
     * <code>map&lt;string, int32&gt; pairs = 32;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer> getPairsMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetPairs());
    }
    /**
     * <code>map&lt;string, int32&gt; pairs = 32;</code>
     */
    @java.lang.Override

    public int getPairsOrDefault(
        java.lang.String key,
        int defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPairs();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; pairs = 32;</code>
     */
    @java.lang.Override

    public int getPairsOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPairs();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, int32&gt; pairs = 32;</code>
     */
    private java.util.Map<java.lang.String, java.lang.Integer>
    getMutablePairsMap() {
      return internalGetMutablePairs();
    }

    public static final int _LEADING_UNDERSCORE_FIELD_NUMBER = 33;
    private java.lang.String LeadingUnderscore_;
    /**
     * <code>string _leading_underscore = 33;</code>
     * @return The leadingUnderscore.
     */
    @java.lang.Override
    public java.lang.String getLeadingUnderscore() {
      return LeadingUnderscore_;
    }
    /**
     * <code>string _leading_underscore = 33;</code>
     * @return The bytes for leadingUnderscore.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLeadingUnderscoreBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(LeadingUnderscore_);
    }
    /**
     * <code>string _leading_underscore = 33;</code>
     * @param value The leadingUnderscore to set.
     */
    private void setLeadingUnderscore(
        java.lang.String value) {
      value.getClass();
  
      LeadingUnderscore_ = value;
    }
    /**
     * <code>string _leading_underscore = 33;</code>
     */
    private void clearLeadingUnderscore() {
      
      LeadingUnderscore_ = getDefaultInstance().getLeadingUnderscore();
    }
    /**
     * <code>string _leading_underscore = 33;</code>
     * @param value The bytes for leadingUnderscore to set.
     */
    private void setLeadingUnderscoreBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      LeadingUnderscore_ = value.toStringUtf8();
      
    }

    public static final int OPTION_FIELD_NUMBER = 34;
    /**
     * <code>int32 option = 34;</code>
     * @return Whether the option field is set.
     */
    @java.lang.Override
    public boolean hasOption() {
      return LeadingUnderscoreOneofCase_ == 34;
    }
    /**
     * <code>int32 option = 34;</code>
     * @return The option.
     */
    @java.lang.Override
    public int getOption() {
      if (LeadingUnderscoreOneofCase_ == 34) {
        return (java.lang.Integer) LeadingUnderscoreOneof_;
      }
      return 0;
    }
    /**
     * <code>int32 option = 34;</code>
     * @param value The option to set.
     */
    private void setOption(int value) {
      LeadingUnderscoreOneofCase_ = 34;
      LeadingUnderscoreOneof_ = value;
    }
    /**
     * <code>int32 option = 34;</code>
     */
    private void clearOption() {
      if (LeadingUnderscoreOneofCase_ == 34) {
        LeadingUnderscoreOneofCase_ = 0;
        LeadingUnderscoreOneof_ = null;
      }
    }

    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code evil_names_proto3.EvilNamesProto3}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3, Builder> implements
        // @@protoc_insertion_point(builder_implements:evil_names_proto3.EvilNamesProto3)
        evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3OrBuilder {
      // Construct using evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public CamelCaseCase
          getCamelCaseCase() {
        return instance.getCamelCaseCase();
      }

      public Builder clearCamelCase() {
        copyOnWrite();
        instance.clearCamelCase();
        return this;
      }

      @java.lang.Override
      public LeadingUnderscoreOneofCase
          getLeadingUnderscoreOneofCase() {
        return instance.getLeadingUnderscoreOneofCase();
      }

      public Builder clearLeadingUnderscoreOneof() {
        copyOnWrite();
        instance.clearLeadingUnderscoreOneof();
        return this;
      }


      /**
       * <code>bool initialized = 1;</code>
       * @return The initialized.
       */
      @java.lang.Override
      public boolean getInitialized() {
        return instance.getInitialized();
      }
      /**
       * <code>bool initialized = 1;</code>
       * @param value The initialized to set.
       * @return This builder for chaining.
       */
      public Builder setInitialized(boolean value) {
        copyOnWrite();
        instance.setInitialized(value);
        return this;
      }
      /**
       * <code>bool initialized = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitialized() {
        copyOnWrite();
        instance.clearInitialized();
        return this;
      }

      /**
       * <code>bool has_foo = 2;</code>
       * @return The hasFoo.
       */
      @java.lang.Override
      public boolean getHasFoo() {
        return instance.getHasFoo();
      }
      /**
       * <code>bool has_foo = 2;</code>
       * @param value The hasFoo to set.
       * @return This builder for chaining.
       */
      public Builder setHasFoo(boolean value) {
        copyOnWrite();
        instance.setHasFoo(value);
        return this;
      }
      /**
       * <code>bool has_foo = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasFoo() {
        copyOnWrite();
        instance.clearHasFoo();
        return this;
      }

      /**
       * <code>string Bar = 3;</code>
       * @return The bar.
       */
      @java.lang.Override
      public java.lang.String getBar() {
        return instance.getBar();
      }
      /**
       * <code>string Bar = 3;</code>
       * @return The bytes for bar.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getBarBytes() {
        return instance.getBarBytes();
      }
      /**
       * <code>string Bar = 3;</code>
       * @param value The bar to set.
       * @return This builder for chaining.
       */
      public Builder setBar(
          java.lang.String value) {
        copyOnWrite();
        instance.setBar(value);
        return this;
      }
      /**
       * <code>string Bar = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBar() {
        copyOnWrite();
        instance.clearBar();
        return this;
      }
      /**
       * <code>string Bar = 3;</code>
       * @param value The bytes for bar to set.
       * @return This builder for chaining.
       */
      public Builder setBarBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setBarBytes(value);
        return this;
      }

      /**
       * <code>bool is_initialized = 4;</code>
       * @return The isInitialized.
       */
      @java.lang.Override
      public boolean getIsInitialized() {
        return instance.getIsInitialized();
      }
      /**
       * <code>bool is_initialized = 4;</code>
       * @param value The isInitialized to set.
       * @return This builder for chaining.
       */
      public Builder setIsInitialized(boolean value) {
        copyOnWrite();
        instance.setIsInitialized(value);
        return this;
      }
      /**
       * <code>bool is_initialized = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsInitialized() {
        copyOnWrite();
        instance.clearIsInitialized();
        return this;
      }

      /**
       * <code>string fooBar = 5;</code>
       * @return Whether the fooBar field is set.
       */
      @java.lang.Override
      public boolean hasFooBar() {
        return instance.hasFooBar();
      }
      /**
       * <code>string fooBar = 5;</code>
       * @return The fooBar.
       */
      @java.lang.Override
      public java.lang.String getFooBar() {
        return instance.getFooBar();
      }
      /**
       * <code>string fooBar = 5;</code>
       * @return The bytes for fooBar.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFooBarBytes() {
        return instance.getFooBarBytes();
      }
      /**
       * <code>string fooBar = 5;</code>
       * @param value The fooBar to set.
       * @return This builder for chaining.
       */
      public Builder setFooBar(
          java.lang.String value) {
        copyOnWrite();
        instance.setFooBar(value);
        return this;
      }
      /**
       * <code>string fooBar = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFooBar() {
        copyOnWrite();
        instance.clearFooBar();
        return this;
      }
      /**
       * <code>string fooBar = 5;</code>
       * @param value The bytes for fooBar to set.
       * @return This builder for chaining.
       */
      public Builder setFooBarBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFooBarBytes(value);
        return this;
      }

      /**
       * <code>repeated string ALL_CAPS = 7;</code>
       * @return A list containing the aLLCAPS.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getALLCAPSList() {
        return java.util.Collections.unmodifiableList(
            instance.getALLCAPSList());
      }
      /**
       * <code>repeated string ALL_CAPS = 7;</code>
       * @return The count of aLLCAPS.
       */
      @java.lang.Override
      public int getALLCAPSCount() {
        return instance.getALLCAPSCount();
      }
      /**
       * <code>repeated string ALL_CAPS = 7;</code>
       * @param index The index of the element to return.
       * @return The aLLCAPS at the given index.
       */
      @java.lang.Override
      public java.lang.String getALLCAPS(int index) {
        return instance.getALLCAPS(index);
      }
      /**
       * <code>repeated string ALL_CAPS = 7;</code>
       * @param index The index of the value to return.
       * @return The bytes of the aLLCAPS at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getALLCAPSBytes(int index) {
        return instance.getALLCAPSBytes(index);
      }
      /**
       * <code>repeated string ALL_CAPS = 7;</code>
       * @param index The index to set the value at.
       * @param value The aLLCAPS to set.
       * @return This builder for chaining.
       */
      public Builder setALLCAPS(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setALLCAPS(index, value);
        return this;
      }
      /**
       * <code>repeated string ALL_CAPS = 7;</code>
       * @param value The aLLCAPS to add.
       * @return This builder for chaining.
       */
      public Builder addALLCAPS(
          java.lang.String value) {
        copyOnWrite();
        instance.addALLCAPS(value);
        return this;
      }
      /**
       * <code>repeated string ALL_CAPS = 7;</code>
       * @param values The aLLCAPS to add.
       * @return This builder for chaining.
       */
      public Builder addAllALLCAPS(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllALLCAPS(values);
        return this;
      }
      /**
       * <code>repeated string ALL_CAPS = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearALLCAPS() {
        copyOnWrite();
        instance.clearALLCAPS();
        return this;
      }
      /**
       * <code>repeated string ALL_CAPS = 7;</code>
       * @param value The bytes of the aLLCAPS to add.
       * @return This builder for chaining.
       */
      public Builder addALLCAPSBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addALLCAPSBytes(value);
        return this;
      }

      @java.lang.Override

      public int getALLCAPSMAPCount() {
        return instance.getALLCAPSMAPMap().size();
      }
      /**
       * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
       */
      @java.lang.Override

      public boolean containsALLCAPSMAP(
          int key) {
        
        return instance.getALLCAPSMAPMap().containsKey(key);
      }

      public Builder clearALLCAPSMAP() {
        copyOnWrite();
        instance.getMutableALLCAPSMAPMap().clear();
        return this;
      }
      /**
       * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
       */

      public Builder removeALLCAPSMAP(
          int key) {
        
        copyOnWrite();
        instance.getMutableALLCAPSMAPMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getALLCAPSMAPMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Boolean> getALLCAPSMAP() {
        return getALLCAPSMAPMap();
      }
      /**
       * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Boolean> getALLCAPSMAPMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getALLCAPSMAPMap());
      }
      /**
       * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
       */
      @java.lang.Override

      public boolean getALLCAPSMAPOrDefault(
          int key,
          boolean defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Boolean> map =
            instance.getALLCAPSMAPMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
       */
      @java.lang.Override

      public boolean getALLCAPSMAPOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Boolean> map =
            instance.getALLCAPSMAPMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
       */
      public Builder putALLCAPSMAP(
          int key,
          boolean value) {
        
        
        copyOnWrite();
        instance.getMutableALLCAPSMAPMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, bool&gt; ALL_CAPS_MAP = 8;</code>
       */
      public Builder putAllALLCAPSMAP(
          java.util.Map<java.lang.Integer, java.lang.Boolean> values) {
        copyOnWrite();
        instance.getMutableALLCAPSMAPMap().putAll(values);
        return this;
      }

      /**
       * <code>bool has_underbar_preceding_numeric_1foo = 9;</code>
       * @return The hasUnderbarPrecedingNumeric1foo.
       */
      @java.lang.Override
      public boolean getHasUnderbarPrecedingNumeric1Foo() {
        return instance.getHasUnderbarPrecedingNumeric1Foo();
      }
      /**
       * <code>bool has_underbar_preceding_numeric_1foo = 9;</code>
       * @param value The hasUnderbarPrecedingNumeric1foo to set.
       * @return This builder for chaining.
       */
      public Builder setHasUnderbarPrecedingNumeric1Foo(boolean value) {
        copyOnWrite();
        instance.setHasUnderbarPrecedingNumeric1Foo(value);
        return this;
      }
      /**
       * <code>bool has_underbar_preceding_numeric_1foo = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasUnderbarPrecedingNumeric1Foo() {
        copyOnWrite();
        instance.clearHasUnderbarPrecedingNumeric1Foo();
        return this;
      }

      /**
       * <code>bool has_underbar_preceding_numeric_42bar = 10;</code>
       * @return The hasUnderbarPrecedingNumeric42bar.
       */
      @java.lang.Override
      public boolean getHasUnderbarPrecedingNumeric42Bar() {
        return instance.getHasUnderbarPrecedingNumeric42Bar();
      }
      /**
       * <code>bool has_underbar_preceding_numeric_42bar = 10;</code>
       * @param value The hasUnderbarPrecedingNumeric42bar to set.
       * @return This builder for chaining.
       */
      public Builder setHasUnderbarPrecedingNumeric42Bar(boolean value) {
        copyOnWrite();
        instance.setHasUnderbarPrecedingNumeric42Bar(value);
        return this;
      }
      /**
       * <code>bool has_underbar_preceding_numeric_42bar = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasUnderbarPrecedingNumeric42Bar() {
        copyOnWrite();
        instance.clearHasUnderbarPrecedingNumeric42Bar();
        return this;
      }

      /**
       * <code>bool has_underbar_preceding_numeric_123foo42bar_baz = 11;</code>
       * @return The hasUnderbarPrecedingNumeric123foo42barBaz.
       */
      @java.lang.Override
      public boolean getHasUnderbarPrecedingNumeric123Foo42BarBaz() {
        return instance.getHasUnderbarPrecedingNumeric123Foo42BarBaz();
      }
      /**
       * <code>bool has_underbar_preceding_numeric_123foo42bar_baz = 11;</code>
       * @param value The hasUnderbarPrecedingNumeric123foo42barBaz to set.
       * @return This builder for chaining.
       */
      public Builder setHasUnderbarPrecedingNumeric123Foo42BarBaz(boolean value) {
        copyOnWrite();
        instance.setHasUnderbarPrecedingNumeric123Foo42BarBaz(value);
        return this;
      }
      /**
       * <code>bool has_underbar_preceding_numeric_123foo42bar_baz = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasUnderbarPrecedingNumeric123Foo42BarBaz() {
        copyOnWrite();
        instance.clearHasUnderbarPrecedingNumeric123Foo42BarBaz();
        return this;
      }

      /**
       * <code>repeated string extension = 12;</code>
       * @return A list containing the extension.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getExtensionList() {
        return java.util.Collections.unmodifiableList(
            instance.getExtensionList());
      }
      /**
       * <code>repeated string extension = 12;</code>
       * @return The count of extension.
       */
      @java.lang.Override
      public int getExtensionCount() {
        return instance.getExtensionCount();
      }
      /**
       * <code>repeated string extension = 12;</code>
       * @param index The index of the element to return.
       * @return The extension at the given index.
       */
      @java.lang.Override
      public java.lang.String getExtension(int index) {
        return instance.getExtension(index);
      }
      /**
       * <code>repeated string extension = 12;</code>
       * @param index The index of the value to return.
       * @return The bytes of the extension at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getExtensionBytes(int index) {
        return instance.getExtensionBytes(index);
      }
      /**
       * <code>repeated string extension = 12;</code>
       * @param index The index to set the value at.
       * @param value The extension to set.
       * @return This builder for chaining.
       */
      public Builder setExtension(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setExtension(index, value);
        return this;
      }
      /**
       * <code>repeated string extension = 12;</code>
       * @param value The extension to add.
       * @return This builder for chaining.
       */
      public Builder addExtension(
          java.lang.String value) {
        copyOnWrite();
        instance.addExtension(value);
        return this;
      }
      /**
       * <code>repeated string extension = 12;</code>
       * @param values The extension to add.
       * @return This builder for chaining.
       */
      public Builder addAllExtension(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllExtension(values);
        return this;
      }
      /**
       * <code>repeated string extension = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearExtension() {
        copyOnWrite();
        instance.clearExtension();
        return this;
      }
      /**
       * <code>repeated string extension = 12;</code>
       * @param value The bytes of the extension to add.
       * @return This builder for chaining.
       */
      public Builder addExtensionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addExtensionBytes(value);
        return this;
      }

      /**
       * <code>string class = 13;</code>
       * @return The class.
       */
      @java.lang.Override
      public java.lang.String getClass_() {
        return instance.getClass_();
      }
      /**
       * <code>string class = 13;</code>
       * @return The bytes for class.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getClass_Bytes() {
        return instance.getClass_Bytes();
      }
      /**
       * <code>string class = 13;</code>
       * @param value The class to set.
       * @return This builder for chaining.
       */
      public Builder setClass_(
          java.lang.String value) {
        copyOnWrite();
        instance.setClass_(value);
        return this;
      }
      /**
       * <code>string class = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearClass_() {
        copyOnWrite();
        instance.clearClass_();
        return this;
      }
      /**
       * <code>string class = 13;</code>
       * @param value The bytes for class to set.
       * @return This builder for chaining.
       */
      public Builder setClass_Bytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setClass_Bytes(value);
        return this;
      }

      /**
       * <code>double int = 14;</code>
       * @return The int.
       */
      @java.lang.Override
      public double getInt() {
        return instance.getInt();
      }
      /**
       * <code>double int = 14;</code>
       * @param value The int to set.
       * @return This builder for chaining.
       */
      public Builder setInt(double value) {
        copyOnWrite();
        instance.setInt(value);
        return this;
      }
      /**
       * <code>double int = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt() {
        copyOnWrite();
        instance.clearInt();
        return this;
      }

      /**
       * <code>bool long = 15;</code>
       * @return The long.
       */
      @java.lang.Override
      public boolean getLong() {
        return instance.getLong();
      }
      /**
       * <code>bool long = 15;</code>
       * @param value The long to set.
       * @return This builder for chaining.
       */
      public Builder setLong(boolean value) {
        copyOnWrite();
        instance.setLong(value);
        return this;
      }
      /**
       * <code>bool long = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearLong() {
        copyOnWrite();
        instance.clearLong();
        return this;
      }

      /**
       * <code>int64 boolean = 16;</code>
       * @return The boolean.
       */
      @java.lang.Override
      public long getBoolean() {
        return instance.getBoolean();
      }
      /**
       * <code>int64 boolean = 16;</code>
       * @param value The boolean to set.
       * @return This builder for chaining.
       */
      public Builder setBoolean(long value) {
        copyOnWrite();
        instance.setBoolean(value);
        return this;
      }
      /**
       * <code>int64 boolean = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolean() {
        copyOnWrite();
        instance.clearBoolean();
        return this;
      }

      /**
       * <code>string sealed = 17;</code>
       * @return The sealed.
       */
      @java.lang.Override
      public java.lang.String getSealed() {
        return instance.getSealed();
      }
      /**
       * <code>string sealed = 17;</code>
       * @return The bytes for sealed.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSealedBytes() {
        return instance.getSealedBytes();
      }
      /**
       * <code>string sealed = 17;</code>
       * @param value The sealed to set.
       * @return This builder for chaining.
       */
      public Builder setSealed(
          java.lang.String value) {
        copyOnWrite();
        instance.setSealed(value);
        return this;
      }
      /**
       * <code>string sealed = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearSealed() {
        copyOnWrite();
        instance.clearSealed();
        return this;
      }
      /**
       * <code>string sealed = 17;</code>
       * @param value The bytes for sealed to set.
       * @return This builder for chaining.
       */
      public Builder setSealedBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSealedBytes(value);
        return this;
      }

      /**
       * <code>float interface = 18;</code>
       * @return The interface.
       */
      @java.lang.Override
      public float getInterface() {
        return instance.getInterface();
      }
      /**
       * <code>float interface = 18;</code>
       * @param value The interface to set.
       * @return This builder for chaining.
       */
      public Builder setInterface(float value) {
        copyOnWrite();
        instance.setInterface(value);
        return this;
      }
      /**
       * <code>float interface = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterface() {
        copyOnWrite();
        instance.clearInterface();
        return this;
      }

      /**
       * <code>int32 in = 19;</code>
       * @return The in.
       */
      @java.lang.Override
      public int getIn() {
        return instance.getIn();
      }
      /**
       * <code>int32 in = 19;</code>
       * @param value The in to set.
       * @return This builder for chaining.
       */
      public Builder setIn(int value) {
        copyOnWrite();
        instance.setIn(value);
        return this;
      }
      /**
       * <code>int32 in = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearIn() {
        copyOnWrite();
        instance.clearIn();
        return this;
      }

      /**
       * <code>string object = 20;</code>
       * @return The object.
       */
      @java.lang.Override
      public java.lang.String getObject() {
        return instance.getObject();
      }
      /**
       * <code>string object = 20;</code>
       * @return The bytes for object.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getObjectBytes() {
        return instance.getObjectBytes();
      }
      /**
       * <code>string object = 20;</code>
       * @param value The object to set.
       * @return This builder for chaining.
       */
      public Builder setObject(
          java.lang.String value) {
        copyOnWrite();
        instance.setObject(value);
        return this;
      }
      /**
       * <code>string object = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearObject() {
        copyOnWrite();
        instance.clearObject();
        return this;
      }
      /**
       * <code>string object = 20;</code>
       * @param value The bytes for object to set.
       * @return This builder for chaining.
       */
      public Builder setObjectBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setObjectBytes(value);
        return this;
      }

      /**
       * <code>string cached_size = 21;</code>
       * @return The cachedSize.
       */
      @java.lang.Override
      public java.lang.String getCachedSize_() {
        return instance.getCachedSize_();
      }
      /**
       * <code>string cached_size = 21;</code>
       * @return The bytes for cachedSize.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getCachedSize_Bytes() {
        return instance.getCachedSize_Bytes();
      }
      /**
       * <code>string cached_size = 21;</code>
       * @param value The cachedSize to set.
       * @return This builder for chaining.
       */
      public Builder setCachedSize_(
          java.lang.String value) {
        copyOnWrite();
        instance.setCachedSize_(value);
        return this;
      }
      /**
       * <code>string cached_size = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearCachedSize_() {
        copyOnWrite();
        instance.clearCachedSize_();
        return this;
      }
      /**
       * <code>string cached_size = 21;</code>
       * @param value The bytes for cachedSize to set.
       * @return This builder for chaining.
       */
      public Builder setCachedSize_Bytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCachedSize_Bytes(value);
        return this;
      }

      /**
       * <code>bool serialized_size = 22;</code>
       * @return The serializedSize.
       */
      @java.lang.Override
      public boolean getSerializedSize_() {
        return instance.getSerializedSize_();
      }
      /**
       * <code>bool serialized_size = 22;</code>
       * @param value The serializedSize to set.
       * @return This builder for chaining.
       */
      public Builder setSerializedSize_(boolean value) {
        copyOnWrite();
        instance.setSerializedSize_(value);
        return this;
      }
      /**
       * <code>bool serialized_size = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearSerializedSize_() {
        copyOnWrite();
        instance.clearSerializedSize_();
        return this;
      }

      /**
       * <code>string value = 23;</code>
       * @return The value.
       */
      @java.lang.Override
      public java.lang.String getValue() {
        return instance.getValue();
      }
      /**
       * <code>string value = 23;</code>
       * @return The bytes for value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValueBytes() {
        return instance.getValueBytes();
      }
      /**
       * <code>string value = 23;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <code>string value = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }
      /**
       * <code>string value = 23;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValueBytes(value);
        return this;
      }

      /**
       * <code>int64 index = 24;</code>
       * @return The index.
       */
      @java.lang.Override
      public long getIndex() {
        return instance.getIndex();
      }
      /**
       * <code>int64 index = 24;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(long value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <code>int64 index = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      /**
       * <code>repeated string values = 25;</code>
       * @return A list containing the values.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getValuesList());
      }
      /**
       * <code>repeated string values = 25;</code>
       * @return The count of values.
       */
      @java.lang.Override
      public int getValuesCount() {
        return instance.getValuesCount();
      }
      /**
       * <code>repeated string values = 25;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      @java.lang.Override
      public java.lang.String getValues(int index) {
        return instance.getValues(index);
      }
      /**
       * <code>repeated string values = 25;</code>
       * @param index The index of the value to return.
       * @return The bytes of the values at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValuesBytes(int index) {
        return instance.getValuesBytes(index);
      }
      /**
       * <code>repeated string values = 25;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setValues(index, value);
        return this;
      }
      /**
       * <code>repeated string values = 25;</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(
          java.lang.String value) {
        copyOnWrite();
        instance.addValues(value);
        return this;
      }
      /**
       * <code>repeated string values = 25;</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllValues(values);
        return this;
      }
      /**
       * <code>repeated string values = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        copyOnWrite();
        instance.clearValues();
        return this;
      }
      /**
       * <code>repeated string values = 25;</code>
       * @param value The bytes of the values to add.
       * @return This builder for chaining.
       */
      public Builder addValuesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addValuesBytes(value);
        return this;
      }

      /**
       * <code>repeated string new_values = 26;</code>
       * @return A list containing the newValues.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getNewValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getNewValuesList());
      }
      /**
       * <code>repeated string new_values = 26;</code>
       * @return The count of newValues.
       */
      @java.lang.Override
      public int getNewValuesCount() {
        return instance.getNewValuesCount();
      }
      /**
       * <code>repeated string new_values = 26;</code>
       * @param index The index of the element to return.
       * @return The newValues at the given index.
       */
      @java.lang.Override
      public java.lang.String getNewValues(int index) {
        return instance.getNewValues(index);
      }
      /**
       * <code>repeated string new_values = 26;</code>
       * @param index The index of the value to return.
       * @return The bytes of the newValues at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNewValuesBytes(int index) {
        return instance.getNewValuesBytes(index);
      }
      /**
       * <code>repeated string new_values = 26;</code>
       * @param index The index to set the value at.
       * @param value The newValues to set.
       * @return This builder for chaining.
       */
      public Builder setNewValues(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setNewValues(index, value);
        return this;
      }
      /**
       * <code>repeated string new_values = 26;</code>
       * @param value The newValues to add.
       * @return This builder for chaining.
       */
      public Builder addNewValues(
          java.lang.String value) {
        copyOnWrite();
        instance.addNewValues(value);
        return this;
      }
      /**
       * <code>repeated string new_values = 26;</code>
       * @param values The newValues to add.
       * @return This builder for chaining.
       */
      public Builder addAllNewValues(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllNewValues(values);
        return this;
      }
      /**
       * <code>repeated string new_values = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewValues() {
        copyOnWrite();
        instance.clearNewValues();
        return this;
      }
      /**
       * <code>repeated string new_values = 26;</code>
       * @param value The bytes of the newValues to add.
       * @return This builder for chaining.
       */
      public Builder addNewValuesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addNewValuesBytes(value);
        return this;
      }

      /**
       * <code>bool builder = 27;</code>
       * @return The builder.
       */
      @java.lang.Override
      public boolean getBuilder() {
        return instance.getBuilder();
      }
      /**
       * <code>bool builder = 27;</code>
       * @param value The builder to set.
       * @return This builder for chaining.
       */
      public Builder setBuilder(boolean value) {
        copyOnWrite();
        instance.setBuilder(value);
        return this;
      }
      /**
       * <code>bool builder = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearBuilder() {
        copyOnWrite();
        instance.clearBuilder();
        return this;
      }

      @java.lang.Override

      public int getKCount() {
        return instance.getKMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; k = 28;</code>
       */
      @java.lang.Override

      public boolean containsK(
          int key) {
        
        return instance.getKMap().containsKey(key);
      }

      public Builder clearK() {
        copyOnWrite();
        instance.getMutableKMap().clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; k = 28;</code>
       */

      public Builder removeK(
          int key) {
        
        copyOnWrite();
        instance.getMutableKMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getKMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getK() {
        return getKMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; k = 28;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getKMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getKMap());
      }
      /**
       * <code>map&lt;int32, int32&gt; k = 28;</code>
       */
      @java.lang.Override

      public int getKOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            instance.getKMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; k = 28;</code>
       */
      @java.lang.Override

      public int getKOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            instance.getKMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;int32, int32&gt; k = 28;</code>
       */
      public Builder putK(
          int key,
          int value) {
        
        
        copyOnWrite();
        instance.getMutableKMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; k = 28;</code>
       */
      public Builder putAllK(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        copyOnWrite();
        instance.getMutableKMap().putAll(values);
        return this;
      }

      @java.lang.Override

      public int getVCount() {
        return instance.getVMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; v = 29;</code>
       */
      @java.lang.Override

      public boolean containsV(
          java.lang.String key) {
        key.getClass();
        return instance.getVMap().containsKey(key);
      }

      public Builder clearV() {
        copyOnWrite();
        instance.getMutableVMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; v = 29;</code>
       */

      public Builder removeV(
          java.lang.String key) {
        key.getClass();
        copyOnWrite();
        instance.getMutableVMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getVMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getV() {
        return getVMap();
      }
      /**
       * <code>map&lt;string, string&gt; v = 29;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getVMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getVMap());
      }
      /**
       * <code>map&lt;string, string&gt; v = 29;</code>
       */
      @java.lang.Override

      public java.lang.String getVOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        key.getClass();
        java.util.Map<java.lang.String, java.lang.String> map =
            instance.getVMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; v = 29;</code>
       */
      @java.lang.Override

      public java.lang.String getVOrThrow(
          java.lang.String key) {
        key.getClass();
        java.util.Map<java.lang.String, java.lang.String> map =
            instance.getVMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, string&gt; v = 29;</code>
       */
      public Builder putV(
          java.lang.String key,
          java.lang.String value) {
        key.getClass();
        value.getClass();
        copyOnWrite();
        instance.getMutableVMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; v = 29;</code>
       */
      public Builder putAllV(
          java.util.Map<java.lang.String, java.lang.String> values) {
        copyOnWrite();
        instance.getMutableVMap().putAll(values);
        return this;
      }

      @java.lang.Override

      public int getKeyCount() {
        return instance.getKeyMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; key = 30;</code>
       */
      @java.lang.Override

      public boolean containsKey(
          java.lang.String key) {
        key.getClass();
        return instance.getKeyMap().containsKey(key);
      }

      public Builder clearKey() {
        copyOnWrite();
        instance.getMutableKeyMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; key = 30;</code>
       */

      public Builder removeKey(
          java.lang.String key) {
        key.getClass();
        copyOnWrite();
        instance.getMutableKeyMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getKeyMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getKey() {
        return getKeyMap();
      }
      /**
       * <code>map&lt;string, int32&gt; key = 30;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Integer> getKeyMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getKeyMap());
      }
      /**
       * <code>map&lt;string, int32&gt; key = 30;</code>
       */
      @java.lang.Override

      public int getKeyOrDefault(
          java.lang.String key,
          int defaultValue) {
        key.getClass();
        java.util.Map<java.lang.String, java.lang.Integer> map =
            instance.getKeyMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; key = 30;</code>
       */
      @java.lang.Override

      public int getKeyOrThrow(
          java.lang.String key) {
        key.getClass();
        java.util.Map<java.lang.String, java.lang.Integer> map =
            instance.getKeyMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, int32&gt; key = 30;</code>
       */
      public Builder putKey(
          java.lang.String key,
          int value) {
        key.getClass();
        
        copyOnWrite();
        instance.getMutableKeyMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; key = 30;</code>
       */
      public Builder putAllKey(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        copyOnWrite();
        instance.getMutableKeyMap().putAll(values);
        return this;
      }

      @java.lang.Override

      public int getMapCount() {
        return instance.getMapMap().size();
      }
      /**
       * <code>map&lt;int32, string&gt; map = 31;</code>
       */
      @java.lang.Override

      public boolean containsMap(
          int key) {
        
        return instance.getMapMap().containsKey(key);
      }

      public Builder clearMap() {
        copyOnWrite();
        instance.getMutableMapMap().clear();
        return this;
      }
      /**
       * <code>map&lt;int32, string&gt; map = 31;</code>
       */

      public Builder removeMap(
          int key) {
        
        copyOnWrite();
        instance.getMutableMapMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String> getMap() {
        return getMapMap();
      }
      /**
       * <code>map&lt;int32, string&gt; map = 31;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.String> getMapMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getMapMap());
      }
      /**
       * <code>map&lt;int32, string&gt; map = 31;</code>
       */
      @java.lang.Override

      public java.lang.String getMapOrDefault(
          int key,
          java.lang.String defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            instance.getMapMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, string&gt; map = 31;</code>
       */
      @java.lang.Override

      public java.lang.String getMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            instance.getMapMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;int32, string&gt; map = 31;</code>
       */
      public Builder putMap(
          int key,
          java.lang.String value) {
        
        value.getClass();
        copyOnWrite();
        instance.getMutableMapMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, string&gt; map = 31;</code>
       */
      public Builder putAllMap(
          java.util.Map<java.lang.Integer, java.lang.String> values) {
        copyOnWrite();
        instance.getMutableMapMap().putAll(values);
        return this;
      }

      @java.lang.Override

      public int getPairsCount() {
        return instance.getPairsMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; pairs = 32;</code>
       */
      @java.lang.Override

      public boolean containsPairs(
          java.lang.String key) {
        key.getClass();
        return instance.getPairsMap().containsKey(key);
      }

      public Builder clearPairs() {
        copyOnWrite();
        instance.getMutablePairsMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; pairs = 32;</code>
       */

      public Builder removePairs(
          java.lang.String key) {
        key.getClass();
        copyOnWrite();
        instance.getMutablePairsMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getPairsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getPairs() {
        return getPairsMap();
      }
      /**
       * <code>map&lt;string, int32&gt; pairs = 32;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Integer> getPairsMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getPairsMap());
      }
      /**
       * <code>map&lt;string, int32&gt; pairs = 32;</code>
       */
      @java.lang.Override

      public int getPairsOrDefault(
          java.lang.String key,
          int defaultValue) {
        key.getClass();
        java.util.Map<java.lang.String, java.lang.Integer> map =
            instance.getPairsMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; pairs = 32;</code>
       */
      @java.lang.Override

      public int getPairsOrThrow(
          java.lang.String key) {
        key.getClass();
        java.util.Map<java.lang.String, java.lang.Integer> map =
            instance.getPairsMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, int32&gt; pairs = 32;</code>
       */
      public Builder putPairs(
          java.lang.String key,
          int value) {
        key.getClass();
        
        copyOnWrite();
        instance.getMutablePairsMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; pairs = 32;</code>
       */
      public Builder putAllPairs(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        copyOnWrite();
        instance.getMutablePairsMap().putAll(values);
        return this;
      }

      /**
       * <code>string _leading_underscore = 33;</code>
       * @return The leadingUnderscore.
       */
      @java.lang.Override
      public java.lang.String getLeadingUnderscore() {
        return instance.getLeadingUnderscore();
      }
      /**
       * <code>string _leading_underscore = 33;</code>
       * @return The bytes for leadingUnderscore.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLeadingUnderscoreBytes() {
        return instance.getLeadingUnderscoreBytes();
      }
      /**
       * <code>string _leading_underscore = 33;</code>
       * @param value The leadingUnderscore to set.
       * @return This builder for chaining.
       */
      public Builder setLeadingUnderscore(
          java.lang.String value) {
        copyOnWrite();
        instance.setLeadingUnderscore(value);
        return this;
      }
      /**
       * <code>string _leading_underscore = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeadingUnderscore() {
        copyOnWrite();
        instance.clearLeadingUnderscore();
        return this;
      }
      /**
       * <code>string _leading_underscore = 33;</code>
       * @param value The bytes for leadingUnderscore to set.
       * @return This builder for chaining.
       */
      public Builder setLeadingUnderscoreBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLeadingUnderscoreBytes(value);
        return this;
      }

      /**
       * <code>int32 option = 34;</code>
       * @return Whether the option field is set.
       */
      @java.lang.Override
      public boolean hasOption() {
        return instance.hasOption();
      }
      /**
       * <code>int32 option = 34;</code>
       * @return The option.
       */
      @java.lang.Override
      public int getOption() {
        return instance.getOption();
      }
      /**
       * <code>int32 option = 34;</code>
       * @param value The option to set.
       * @return This builder for chaining.
       */
      public Builder setOption(int value) {
        copyOnWrite();
        instance.setOption(value);
        return this;
      }
      /**
       * <code>int32 option = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearOption() {
        copyOnWrite();
        instance.clearOption();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:evil_names_proto3.EvilNamesProto3)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "camelCase_",
              "camelCaseCase_",
              "LeadingUnderscoreOneof_",
              "LeadingUnderscoreOneofCase_",
              "initialized_",
              "hasFoo_",
              "bar_",
              "isInitialized_",
              "aLLCAPS_",
              "aLLCAPSMAP_",
              ALLCAPSMAPDefaultEntryHolder.defaultEntry,
              "hasUnderbarPrecedingNumeric1Foo_",
              "hasUnderbarPrecedingNumeric42Bar_",
              "hasUnderbarPrecedingNumeric123Foo42BarBaz_",
              "extension_",
              "class__",
              "int_",
              "long_",
              "boolean_",
              "sealed_",
              "interface_",
              "in_",
              "object_",
              "cachedSize__",
              "serializedSize__",
              "value_",
              "index_",
              "values_",
              "newValues_",
              "builder_",
              "k_",
              KDefaultEntryHolder.defaultEntry,
              "v_",
              VDefaultEntryHolder.defaultEntry,
              "key_",
              KeyDefaultEntryHolder.defaultEntry,
              "map_",
              MapDefaultEntryHolder.defaultEntry,
              "pairs_",
              PairsDefaultEntryHolder.defaultEntry,
              "LeadingUnderscore_",
            };
            java.lang.String info =
                "\u0000!\u0002\u0000\u0001\"!\u0006\u0004\u0000\u0001\u0007\u0002\u0007\u0003\u0208" +
                "\u0004\u0007\u0005\u023b\u0000\u0007\u021a\b2\t\u0007\n\u0007\u000b\u0007\f\u021a" +
                "\r\u0208\u000e\u0000\u000f\u0007\u0010\u0002\u0011\u0208\u0012\u0001\u0013\u0004" +
                "\u0014\u0208\u0015\u0208\u0016\u0007\u0017\u0208\u0018\u0002\u0019\u021a\u001a\u021a" +
                "\u001b\u0007\u001c2\u001d2\u001e2\u001f2 2!\u0208\"7\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3> parser = PARSER;
          if (parser == null) {
            synchronized (evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:evil_names_proto3.EvilNamesProto3)
    private static final evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 DEFAULT_INSTANCE;
    static {
      EvilNamesProto3 defaultInstance = new EvilNamesProto3();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        EvilNamesProto3.class, defaultInstance);
    }

    public static evil_names_proto3.EvilNamesProto3OuterClass.EvilNamesProto3 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EvilNamesProto3> PARSER;

    public static com.google.protobuf.Parser<EvilNamesProto3> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HardKeywordsAllTypesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:evil_names_proto3.HardKeywordsAllTypes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>int32 as = 1;</code>
     * @return Whether the as field is set.
     */
    boolean hasAs();
    /**
     * <code>int32 as = 1;</code>
     * @return The as.
     */
    int getAs();

    /**
     * <code>string in = 2;</code>
     * @return Whether the in field is set.
     */
    boolean hasIn();
    /**
     * <code>string in = 2;</code>
     * @return The in.
     */
    java.lang.String getIn();
    /**
     * <code>string in = 2;</code>
     * @return The bytes for in.
     */
    com.google.protobuf.ByteString
        getInBytes();

    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     * @return Whether the break field is set.
     */
    boolean hasBreak();
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     * @return The enum numeric value on the wire for break.
     */
    int getBreakValue();
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     * @return The break.
     */
    evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum getBreak();

    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    int getContinueCount();
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    boolean containsContinue(
        int key);
    /**
     * Use {@link #getContinueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getContinue();
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getContinueMap();
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */

    int getContinueOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */

    int getContinueOrThrow(
        int key);

    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
     * @return Whether the do field is set.
     */
    boolean hasDo();
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
     * @return The do.
     */
    evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage getDo();

    /**
     * <code>repeated int32 else = 6;</code>
     * @return A list containing the else.
     */
    java.util.List<java.lang.Integer> getElseList();
    /**
     * <code>repeated int32 else = 6;</code>
     * @return The count of else.
     */
    int getElseCount();
    /**
     * <code>repeated int32 else = 6;</code>
     * @param index The index of the element to return.
     * @return The else at the given index.
     */
    int getElse(int index);

    /**
     * <code>repeated string for = 7;</code>
     * @return A list containing the for.
     */
    java.util.List<java.lang.String>
        getForList();
    /**
     * <code>repeated string for = 7;</code>
     * @return The count of for.
     */
    int getForCount();
    /**
     * <code>repeated string for = 7;</code>
     * @param index The index of the element to return.
     * @return The for at the given index.
     */
    java.lang.String getFor(int index);
    /**
     * <code>repeated string for = 7;</code>
     * @param index The index of the element to return.
     * @return The for at the given index.
     */
    com.google.protobuf.ByteString
        getForBytes(int index);

    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @return A list containing the fun.
     */
    java.util.List<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum> getFunList();
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @return The count of fun.
     */
    int getFunCount();
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param index The index of the element to return.
     * @return The fun at the given index.
     */
    evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum getFun(int index);
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @return A list containing the enum numeric values on the wire for fun.
     */
    java.util.List<java.lang.Integer>
    getFunValueList();
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of fun at the given index.
     */
    int getFunValue(int index);

    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    java.util.List<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage> 
        getIfList();
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage getIf(int index);
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    int getIfCount();
  }
  /**
   * Protobuf type {@code evil_names_proto3.HardKeywordsAllTypes}
   */
  public  static final class HardKeywordsAllTypes extends
      com.google.protobuf.GeneratedMessageLite<
          HardKeywordsAllTypes, HardKeywordsAllTypes.Builder> implements
      // @@protoc_insertion_point(message_implements:evil_names_proto3.HardKeywordsAllTypes)
      HardKeywordsAllTypesOrBuilder {
    private HardKeywordsAllTypes() {
      in_ = "";
      else_ = emptyIntList();
      for_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      fun_ = emptyIntList();
      if_ = emptyProtobufList();
    }
    /**
     * Protobuf enum {@code evil_names_proto3.HardKeywordsAllTypes.NestedEnum}
     */
    public enum NestedEnum
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ZERO = 0;</code>
       */
      ZERO(0),
      /**
       * <code>FOO = 1;</code>
       */
      FOO(1),
      /**
       * <code>BAR = 2;</code>
       */
      BAR(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ZERO = 0;</code>
       */
      public static final int ZERO_VALUE = 0;
      /**
       * <code>FOO = 1;</code>
       */
      public static final int FOO_VALUE = 1;
      /**
       * <code>BAR = 2;</code>
       */
      public static final int BAR_VALUE = 2;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NestedEnum valueOf(int value) {
        return forNumber(value);
      }

      public static NestedEnum forNumber(int value) {
        switch (value) {
          case 0: return ZERO;
          case 1: return FOO;
          case 2: return BAR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NestedEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NestedEnum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NestedEnum>() {
              @java.lang.Override
              public NestedEnum findValueByNumber(int number) {
                return NestedEnum.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return NestedEnumVerifier.INSTANCE;
      }

      private static final class NestedEnumVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new NestedEnumVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return NestedEnum.forNumber(number) != null;
              }
            };

      private final int value;

      private NestedEnum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:evil_names_proto3.HardKeywordsAllTypes.NestedEnum)
    }

    public interface NestedMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:evil_names_proto3.HardKeywordsAllTypes.NestedMessage)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>int32 while = 1;</code>
       * @return Whether the while field is set.
       */
      boolean hasWhile();
      /**
       * <code>int32 while = 1;</code>
       * @return The while.
       */
      int getWhile();
    }
    /**
     * Protobuf type {@code evil_names_proto3.HardKeywordsAllTypes.NestedMessage}
     */
    public  static final class NestedMessage extends
        com.google.protobuf.GeneratedMessageLite<
            NestedMessage, NestedMessage.Builder> implements
        // @@protoc_insertion_point(message_implements:evil_names_proto3.HardKeywordsAllTypes.NestedMessage)
        NestedMessageOrBuilder {
      private NestedMessage() {
      }
      private int bitField0_;
      public static final int WHILE_FIELD_NUMBER = 1;
      private int while_;
      /**
       * <code>int32 while = 1;</code>
       * @return Whether the while field is set.
       */
      @java.lang.Override
      public boolean hasWhile() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>int32 while = 1;</code>
       * @return The while.
       */
      @java.lang.Override
      public int getWhile() {
        return while_;
      }
      /**
       * <code>int32 while = 1;</code>
       * @param value The while to set.
       */
      private void setWhile(int value) {
        bitField0_ |= 0x00000001;
        while_ = value;
      }
      /**
       * <code>int32 while = 1;</code>
       */
      private void clearWhile() {
        bitField0_ = (bitField0_ & ~0x00000001);
        while_ = 0;
      }

      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code evil_names_proto3.HardKeywordsAllTypes.NestedMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage, Builder> implements
          // @@protoc_insertion_point(builder_implements:evil_names_proto3.HardKeywordsAllTypes.NestedMessage)
          evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessageOrBuilder {
        // Construct using evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>int32 while = 1;</code>
         * @return Whether the while field is set.
         */
        @java.lang.Override
        public boolean hasWhile() {
          return instance.hasWhile();
        }
        /**
         * <code>int32 while = 1;</code>
         * @return The while.
         */
        @java.lang.Override
        public int getWhile() {
          return instance.getWhile();
        }
        /**
         * <code>int32 while = 1;</code>
         * @param value The while to set.
         * @return This builder for chaining.
         */
        public Builder setWhile(int value) {
          copyOnWrite();
          instance.setWhile(value);
          return this;
        }
        /**
         * <code>int32 while = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearWhile() {
          copyOnWrite();
          instance.clearWhile();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:evil_names_proto3.HardKeywordsAllTypes.NestedMessage)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "while_",
              };
              java.lang.String info =
                  "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1004\u0000";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage> parser = PARSER;
            if (parser == null) {
              synchronized (evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:evil_names_proto3.HardKeywordsAllTypes.NestedMessage)
      private static final evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage DEFAULT_INSTANCE;
      static {
        NestedMessage defaultInstance = new NestedMessage();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          NestedMessage.class, defaultInstance);
      }

      public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<NestedMessage> PARSER;

      public static com.google.protobuf.Parser<NestedMessage> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int AS_FIELD_NUMBER = 1;
    private int as_;
    /**
     * <code>int32 as = 1;</code>
     * @return Whether the as field is set.
     */
    @java.lang.Override
    public boolean hasAs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>int32 as = 1;</code>
     * @return The as.
     */
    @java.lang.Override
    public int getAs() {
      return as_;
    }
    /**
     * <code>int32 as = 1;</code>
     * @param value The as to set.
     */
    private void setAs(int value) {
      bitField0_ |= 0x00000001;
      as_ = value;
    }
    /**
     * <code>int32 as = 1;</code>
     */
    private void clearAs() {
      bitField0_ = (bitField0_ & ~0x00000001);
      as_ = 0;
    }

    public static final int IN_FIELD_NUMBER = 2;
    private java.lang.String in_;
    /**
     * <code>string in = 2;</code>
     * @return Whether the in field is set.
     */
    @java.lang.Override
    public boolean hasIn() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>string in = 2;</code>
     * @return The in.
     */
    @java.lang.Override
    public java.lang.String getIn() {
      return in_;
    }
    /**
     * <code>string in = 2;</code>
     * @return The bytes for in.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(in_);
    }
    /**
     * <code>string in = 2;</code>
     * @param value The in to set.
     */
    private void setIn(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000002;
      in_ = value;
    }
    /**
     * <code>string in = 2;</code>
     */
    private void clearIn() {
      bitField0_ = (bitField0_ & ~0x00000002);
      in_ = getDefaultInstance().getIn();
    }
    /**
     * <code>string in = 2;</code>
     * @param value The bytes for in to set.
     */
    private void setInBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      in_ = value.toStringUtf8();
      bitField0_ |= 0x00000002;
    }

    public static final int BREAK_FIELD_NUMBER = 3;
    private int break_;
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     * @return Whether the break field is set.
     */
    @java.lang.Override
    public boolean hasBreak() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     * @return The enum numeric value on the wire for break.
     */
    @java.lang.Override
    public int getBreakValue() {
      return break_;
    }
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     * @return The break.
     */
    @java.lang.Override
    public evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum getBreak() {
      evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum result = evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum.forNumber(break_);
      return result == null ? evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum.UNRECOGNIZED : result;
    }
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     * @param value The enum numeric value on the wire for break to set.
     */
    private void setBreakValue(int value) {
      bitField0_ |= 0x00000004;  break_ = value;
    }
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     * @param value The break to set.
     */
    private void setBreak(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum value) {
      break_ = value.getNumber();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     */
    private void clearBreak() {
      bitField0_ = (bitField0_ & ~0x00000004);
      break_ = 0;
    }

    public static final int CONTINUE_FIELD_NUMBER = 4;
    private static final class ContinueDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.Integer, java.lang.Integer> continue_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.Integer>
    internalGetContinue() {
      return continue_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.Integer>
    internalGetMutableContinue() {
      if (!continue_.isMutable()) {
        continue_ = continue_.mutableCopy();
      }
      return continue_;
    }
    @java.lang.Override

    public int getContinueCount() {
      return internalGetContinue().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    @java.lang.Override

    public boolean containsContinue(
        int key) {
      
      return internalGetContinue().containsKey(key);
    }
    /**
     * Use {@link #getContinueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getContinue() {
      return getContinueMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getContinueMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetContinue());
    }
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    @java.lang.Override

    public int getContinueOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetContinue();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    @java.lang.Override

    public int getContinueOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetContinue();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    private java.util.Map<java.lang.Integer, java.lang.Integer>
    getMutableContinueMap() {
      return internalGetMutableContinue();
    }

    public static final int DO_FIELD_NUMBER = 5;
    private evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage do_;
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
     */
    @java.lang.Override
    public boolean hasDo() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
     */
    @java.lang.Override
    public evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage getDo() {
      return do_ == null ? evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage.getDefaultInstance() : do_;
    }
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
     */
    private void setDo(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage value) {
      value.getClass();
  do_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeDo(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage value) {
      value.getClass();
  if (do_ != null &&
          do_ != evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage.getDefaultInstance()) {
        do_ =
          evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage.newBuilder(do_).mergeFrom(value).buildPartial();
      } else {
        do_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
     */
    private void clearDo() {  do_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int ELSE_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.IntList else_;
    /**
     * <code>repeated int32 else = 6;</code>
     * @return A list containing the else.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getElseList() {
      return else_;
    }
    /**
     * <code>repeated int32 else = 6;</code>
     * @return The count of else.
     */
    @java.lang.Override
    public int getElseCount() {
      return else_.size();
    }
    /**
     * <code>repeated int32 else = 6;</code>
     * @param index The index of the element to return.
     * @return The else at the given index.
     */
    @java.lang.Override
    public int getElse(int index) {
      return else_.getInt(index);
    }
    private int elseMemoizedSerializedSize = -1;
    private void ensureElseIsMutable() {
      com.google.protobuf.Internal.IntList tmp = else_;
      if (!tmp.isModifiable()) {
        else_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated int32 else = 6;</code>
     * @param index The index to set the value at.
     * @param value The else to set.
     */
    private void setElse(
        int index, int value) {
      ensureElseIsMutable();
      else_.setInt(index, value);
    }
    /**
     * <code>repeated int32 else = 6;</code>
     * @param value The else to add.
     */
    private void addElse(int value) {
      ensureElseIsMutable();
      else_.addInt(value);
    }
    /**
     * <code>repeated int32 else = 6;</code>
     * @param values The else to add.
     */
    private void addAllElse(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureElseIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, else_);
    }
    /**
     * <code>repeated int32 else = 6;</code>
     */
    private void clearElse() {
      else_ = emptyIntList();
    }

    public static final int FOR_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> for_;
    /**
     * <code>repeated string for = 7;</code>
     * @return A list containing the for.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getForList() {
      return for_;
    }
    /**
     * <code>repeated string for = 7;</code>
     * @return The count of for.
     */
    @java.lang.Override
    public int getForCount() {
      return for_.size();
    }
    /**
     * <code>repeated string for = 7;</code>
     * @param index The index of the element to return.
     * @return The for at the given index.
     */
    @java.lang.Override
    public java.lang.String getFor(int index) {
      return for_.get(index);
    }
    /**
     * <code>repeated string for = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the for at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getForBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          for_.get(index));
    }
    private void ensureForIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          for_;  if (!tmp.isModifiable()) {
        for_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated string for = 7;</code>
     * @param index The index to set the value at.
     * @param value The for to set.
     */
    private void setFor(
        int index, java.lang.String value) {
      value.getClass();
  ensureForIsMutable();
      for_.set(index, value);
    }
    /**
     * <code>repeated string for = 7;</code>
     * @param value The for to add.
     */
    private void addFor(
        java.lang.String value) {
      value.getClass();
  ensureForIsMutable();
      for_.add(value);
    }
    /**
     * <code>repeated string for = 7;</code>
     * @param values The for to add.
     */
    private void addAllFor(
        java.lang.Iterable<java.lang.String> values) {
      ensureForIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, for_);
    }
    /**
     * <code>repeated string for = 7;</code>
     */
    private void clearFor() {
      for_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string for = 7;</code>
     * @param value The bytes of the for to add.
     */
    private void addForBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      ensureForIsMutable();
      for_.add(value.toStringUtf8());
    }

    public static final int FUN_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.IntList fun_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum> fun_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum>() {
              @java.lang.Override
              public evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum convert(java.lang.Integer from) {
                evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum result = evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum.forNumber(from);
                return result == null ? evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @return A list containing the fun.
     */
    @java.lang.Override
    public java.util.List<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum> getFunList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum>(fun_, fun_converter_);
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @return The count of fun.
     */
    @java.lang.Override
    public int getFunCount() {
      return fun_.size();
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param index The index of the element to return.
     * @return The fun at the given index.
     */
    @java.lang.Override
    public evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum getFun(int index) {
      return fun_converter_.convert(fun_.getInt(index));
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @return A list containing the enum numeric values on the wire for fun.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getFunValueList() {
      return fun_;
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of fun at the given index.
     */
    @java.lang.Override
    public int getFunValue(int index) {
      return fun_.getInt(index);
    }
    private int funMemoizedSerializedSize;
    private void ensureFunIsMutable() {
      com.google.protobuf.Internal.IntList tmp = fun_;
      if (!tmp.isModifiable()) {
        fun_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param index The index to set the value at.
     * @param value The fun to set.
     */
    private void setFun(
        int index, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum value) {
      value.getClass();
  ensureFunIsMutable();
      fun_.setInt(index, value.getNumber());
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param value The fun to add.
     */
    private void addFun(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum value) {
      value.getClass();
  ensureFunIsMutable();
      fun_.addInt(value.getNumber());
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param values The fun to add.
     */
    private void addAllFun(
        java.lang.Iterable<? extends evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum> values) {
      ensureFunIsMutable();
      for (evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum value : values) {
        fun_.addInt(value.getNumber());
      }
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     */
    private void clearFun() {
      fun_ = emptyIntList();
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param value The enum numeric value on the wire for fun to set.
     */
    private void setFunValue(
        int index, int value) {
      ensureFunIsMutable();
      fun_.setInt(index, value);
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param value The enum numeric value on the wire for fun to add.
     */
    private void addFunValue(int value) {
      ensureFunIsMutable();
      fun_.addInt(value);
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param values The enum numeric values on the wire for fun to add.
     */
    private void addAllFunValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureFunIsMutable();
      for (int value : values) {
        fun_.addInt(value);
      }
    }

    public static final int IF_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.ProtobufList<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage> if_;
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    @java.lang.Override
    public java.util.List<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage> getIfList() {
      return if_;
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    public java.util.List<? extends evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessageOrBuilder> 
        getIfOrBuilderList() {
      return if_;
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    @java.lang.Override
    public int getIfCount() {
      return if_.size();
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    @java.lang.Override
    public evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage getIf(int index) {
      return if_.get(index);
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    public evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessageOrBuilder getIfOrBuilder(
        int index) {
      return if_.get(index);
    }
    private void ensureIfIsMutable() {
      com.google.protobuf.Internal.ProtobufList<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage> tmp = if_;
      if (!tmp.isModifiable()) {
        if_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    private void setIf(
        int index, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage value) {
      value.getClass();
  ensureIfIsMutable();
      if_.set(index, value);
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    private void addIf(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage value) {
      value.getClass();
  ensureIfIsMutable();
      if_.add(value);
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    private void addIf(
        int index, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage value) {
      value.getClass();
  ensureIfIsMutable();
      if_.add(index, value);
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    private void addAllIf(
        java.lang.Iterable<? extends evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage> values) {
      ensureIfIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, if_);
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    private void clearIf() {
      if_ = emptyProtobufList();
    }
    /**
     * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    private void removeIf(int index) {
      ensureIfIsMutable();
      if_.remove(index);
    }

    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code evil_names_proto3.HardKeywordsAllTypes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes, Builder> implements
        // @@protoc_insertion_point(builder_implements:evil_names_proto3.HardKeywordsAllTypes)
        evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypesOrBuilder {
      // Construct using evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>int32 as = 1;</code>
       * @return Whether the as field is set.
       */
      @java.lang.Override
      public boolean hasAs() {
        return instance.hasAs();
      }
      /**
       * <code>int32 as = 1;</code>
       * @return The as.
       */
      @java.lang.Override
      public int getAs() {
        return instance.getAs();
      }
      /**
       * <code>int32 as = 1;</code>
       * @param value The as to set.
       * @return This builder for chaining.
       */
      public Builder setAs(int value) {
        copyOnWrite();
        instance.setAs(value);
        return this;
      }
      /**
       * <code>int32 as = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAs() {
        copyOnWrite();
        instance.clearAs();
        return this;
      }

      /**
       * <code>string in = 2;</code>
       * @return Whether the in field is set.
       */
      @java.lang.Override
      public boolean hasIn() {
        return instance.hasIn();
      }
      /**
       * <code>string in = 2;</code>
       * @return The in.
       */
      @java.lang.Override
      public java.lang.String getIn() {
        return instance.getIn();
      }
      /**
       * <code>string in = 2;</code>
       * @return The bytes for in.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getInBytes() {
        return instance.getInBytes();
      }
      /**
       * <code>string in = 2;</code>
       * @param value The in to set.
       * @return This builder for chaining.
       */
      public Builder setIn(
          java.lang.String value) {
        copyOnWrite();
        instance.setIn(value);
        return this;
      }
      /**
       * <code>string in = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIn() {
        copyOnWrite();
        instance.clearIn();
        return this;
      }
      /**
       * <code>string in = 2;</code>
       * @param value The bytes for in to set.
       * @return This builder for chaining.
       */
      public Builder setInBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setInBytes(value);
        return this;
      }

      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
       * @return Whether the break field is set.
       */
      @java.lang.Override
      public boolean hasBreak() {
        return instance.hasBreak();
      }
      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
       * @return The enum numeric value on the wire for break.
       */
      @java.lang.Override
      public int getBreakValue() {
        return instance.getBreakValue();
      }
      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
       * @param value The break to set.
       * @return This builder for chaining.
       */
      public Builder setBreakValue(int value) {
        copyOnWrite();
        instance.setBreakValue(value);
        return this;
      }
      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
       * @return The break.
       */
      @java.lang.Override
      public evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum getBreak() {
        return instance.getBreak();
      }
      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
       * @param value The enum numeric value on the wire for break to set.
       * @return This builder for chaining.
       */
      public Builder setBreak(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum value) {
        copyOnWrite();
        instance.setBreak(value);
        return this;
      }
      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedEnum break = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBreak() {
        copyOnWrite();
        instance.clearBreak();
        return this;
      }

      @java.lang.Override

      public int getContinueCount() {
        return instance.getContinueMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; continue = 4;</code>
       */
      @java.lang.Override

      public boolean containsContinue(
          int key) {
        
        return instance.getContinueMap().containsKey(key);
      }

      public Builder clearContinue() {
        copyOnWrite();
        instance.getMutableContinueMap().clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; continue = 4;</code>
       */

      public Builder removeContinue(
          int key) {
        
        copyOnWrite();
        instance.getMutableContinueMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getContinueMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getContinue() {
        return getContinueMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; continue = 4;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getContinueMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getContinueMap());
      }
      /**
       * <code>map&lt;int32, int32&gt; continue = 4;</code>
       */
      @java.lang.Override

      public int getContinueOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            instance.getContinueMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; continue = 4;</code>
       */
      @java.lang.Override

      public int getContinueOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            instance.getContinueMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;int32, int32&gt; continue = 4;</code>
       */
      public Builder putContinue(
          int key,
          int value) {
        
        
        copyOnWrite();
        instance.getMutableContinueMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; continue = 4;</code>
       */
      public Builder putAllContinue(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        copyOnWrite();
        instance.getMutableContinueMap().putAll(values);
        return this;
      }

      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
       */
      @java.lang.Override
      public boolean hasDo() {
        return instance.hasDo();
      }
      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
       */
      @java.lang.Override
      public evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage getDo() {
        return instance.getDo();
      }
      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
       */
      public Builder setDo(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage value) {
        copyOnWrite();
        instance.setDo(value);
        return this;
        }
      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
       */
      public Builder setDo(
          evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setDo(builderForValue.build());
        return this;
      }
      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
       */
      public Builder mergeDo(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage value) {
        copyOnWrite();
        instance.mergeDo(value);
        return this;
      }
      /**
       * <code>.evil_names_proto3.HardKeywordsAllTypes.NestedMessage do = 5;</code>
       */
      public Builder clearDo() {  copyOnWrite();
        instance.clearDo();
        return this;
      }

      /**
       * <code>repeated int32 else = 6;</code>
       * @return A list containing the else.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getElseList() {
        return java.util.Collections.unmodifiableList(
            instance.getElseList());
      }
      /**
       * <code>repeated int32 else = 6;</code>
       * @return The count of else.
       */
      @java.lang.Override
      public int getElseCount() {
        return instance.getElseCount();
      }
      /**
       * <code>repeated int32 else = 6;</code>
       * @param index The index of the element to return.
       * @return The else at the given index.
       */
      @java.lang.Override
      public int getElse(int index) {
        return instance.getElse(index);
      }
      /**
       * <code>repeated int32 else = 6;</code>
       * @param value The else to set.
       * @return This builder for chaining.
       */
      public Builder setElse(
          int index, int value) {
        copyOnWrite();
        instance.setElse(index, value);
        return this;
      }
      /**
       * <code>repeated int32 else = 6;</code>
       * @param value The else to add.
       * @return This builder for chaining.
       */
      public Builder addElse(int value) {
        copyOnWrite();
        instance.addElse(value);
        return this;
      }
      /**
       * <code>repeated int32 else = 6;</code>
       * @param values The else to add.
       * @return This builder for chaining.
       */
      public Builder addAllElse(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllElse(values);
        return this;
      }
      /**
       * <code>repeated int32 else = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearElse() {
        copyOnWrite();
        instance.clearElse();
        return this;
      }

      /**
       * <code>repeated string for = 7;</code>
       * @return A list containing the for.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getForList() {
        return java.util.Collections.unmodifiableList(
            instance.getForList());
      }
      /**
       * <code>repeated string for = 7;</code>
       * @return The count of for.
       */
      @java.lang.Override
      public int getForCount() {
        return instance.getForCount();
      }
      /**
       * <code>repeated string for = 7;</code>
       * @param index The index of the element to return.
       * @return The for at the given index.
       */
      @java.lang.Override
      public java.lang.String getFor(int index) {
        return instance.getFor(index);
      }
      /**
       * <code>repeated string for = 7;</code>
       * @param index The index of the value to return.
       * @return The bytes of the for at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getForBytes(int index) {
        return instance.getForBytes(index);
      }
      /**
       * <code>repeated string for = 7;</code>
       * @param index The index to set the value at.
       * @param value The for to set.
       * @return This builder for chaining.
       */
      public Builder setFor(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setFor(index, value);
        return this;
      }
      /**
       * <code>repeated string for = 7;</code>
       * @param value The for to add.
       * @return This builder for chaining.
       */
      public Builder addFor(
          java.lang.String value) {
        copyOnWrite();
        instance.addFor(value);
        return this;
      }
      /**
       * <code>repeated string for = 7;</code>
       * @param values The for to add.
       * @return This builder for chaining.
       */
      public Builder addAllFor(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllFor(values);
        return this;
      }
      /**
       * <code>repeated string for = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFor() {
        copyOnWrite();
        instance.clearFor();
        return this;
      }
      /**
       * <code>repeated string for = 7;</code>
       * @param value The bytes of the for to add.
       * @return This builder for chaining.
       */
      public Builder addForBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addForBytes(value);
        return this;
      }

      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @return A list containing the fun.
       */
      @java.lang.Override
      public java.util.List<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum> getFunList() {
        return instance.getFunList();
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @return The count of fun.
       */
      @java.lang.Override
      public int getFunCount() {
        return instance.getFunCount();
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @param index The index of the element to return.
       * @return The fun at the given index.
       */
      @java.lang.Override
      public evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum getFun(int index) {
        return instance.getFun(index);
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @param index The index to set the value at.
       * @param value The fun to set.
       * @return This builder for chaining.
       */
      public Builder setFun(
          int index, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum value) {
        copyOnWrite();
        instance.setFun(index, value);
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @param value The fun to add.
       * @return This builder for chaining.
       */
      public Builder addFun(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum value) {
        copyOnWrite();
        instance.addFun(value);
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @param values The fun to add.
       * @return This builder for chaining.
       */
      public Builder addAllFun(
          java.lang.Iterable<? extends evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedEnum> values) {
        copyOnWrite();
        instance.addAllFun(values);  return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearFun() {
        copyOnWrite();
        instance.clearFun();
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @return A list containing the enum numeric values on the wire for fun.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
      getFunValueList() {
        return java.util.Collections.unmodifiableList(
            instance.getFunValueList());
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of fun at the given index.
       */
      @java.lang.Override
      public int getFunValue(int index) {
        return instance.getFunValue(index);
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for fun to set.
       * @return This builder for chaining.
       */
      public Builder setFunValue(
          int index, int value) {
        copyOnWrite();
        instance.setFunValue(index, value);
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @param value The enum numeric value on the wire for fun to add.
       * @return This builder for chaining.
       */
      public Builder addFunValue(int value) {
        instance.addFunValue(value);
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
       * @param values The enum numeric values on the wire for fun to add.
       * @return This builder for chaining.
       */
      public Builder addAllFunValue(
          java.lang.Iterable<java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllFunValue(values);
        return this;
      }

      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      @java.lang.Override
      public java.util.List<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage> getIfList() {
        return java.util.Collections.unmodifiableList(
            instance.getIfList());
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      @java.lang.Override
      public int getIfCount() {
        return instance.getIfCount();
      }/**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      @java.lang.Override
      public evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage getIf(int index) {
        return instance.getIf(index);
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      public Builder setIf(
          int index, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage value) {
        copyOnWrite();
        instance.setIf(index, value);
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      public Builder setIf(
          int index, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setIf(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      public Builder addIf(evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage value) {
        copyOnWrite();
        instance.addIf(value);
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      public Builder addIf(
          int index, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage value) {
        copyOnWrite();
        instance.addIf(index, value);
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      public Builder addIf(
          evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.addIf(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      public Builder addIf(
          int index, evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage.Builder builderForValue) {
        copyOnWrite();
        instance.addIf(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      public Builder addAllIf(
          java.lang.Iterable<? extends evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage> values) {
        copyOnWrite();
        instance.addAllIf(values);
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      public Builder clearIf() {
        copyOnWrite();
        instance.clearIf();
        return this;
      }
      /**
       * <code>repeated .evil_names_proto3.HardKeywordsAllTypes.NestedMessage if = 9;</code>
       */
      public Builder removeIf(int index) {
        copyOnWrite();
        instance.removeIf(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:evil_names_proto3.HardKeywordsAllTypes)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "as_",
              "in_",
              "break_",
              "continue_",
              ContinueDefaultEntryHolder.defaultEntry,
              "do_",
              "else_",
              "for_",
              "fun_",
              "if_",
              evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.NestedMessage.class,
            };
            java.lang.String info =
                "\u0000\t\u0000\u0001\u0001\t\t\u0001\u0004\u0000\u0001\u1004\u0000\u0002\u1208\u0001" +
                "\u0003\u100c\u0002\u00042\u0005\u1009\u0003\u0006\'\u0007\u021a\b,\t\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes> parser = PARSER;
          if (parser == null) {
            synchronized (evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:evil_names_proto3.HardKeywordsAllTypes)
    private static final evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes DEFAULT_INSTANCE;
    static {
      HardKeywordsAllTypes defaultInstance = new HardKeywordsAllTypes();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        HardKeywordsAllTypes.class, defaultInstance);
    }

    public static evil_names_proto3.EvilNamesProto3OuterClass.HardKeywordsAllTypes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HardKeywordsAllTypes> PARSER;

    public static com.google.protobuf.Parser<HardKeywordsAllTypes> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ClassOrBuilder extends
      // @@protoc_insertion_point(interface_extends:evil_names_proto3.Class)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code evil_names_proto3.Class}
   */
  public  static final class Class extends
      com.google.protobuf.GeneratedMessageLite<
          Class, Class.Builder> implements
      // @@protoc_insertion_point(message_implements:evil_names_proto3.Class)
      ClassOrBuilder {
    private Class() {
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static evil_names_proto3.EvilNamesProto3OuterClass.Class parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(evil_names_proto3.EvilNamesProto3OuterClass.Class prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code evil_names_proto3.Class}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          evil_names_proto3.EvilNamesProto3OuterClass.Class, Builder> implements
        // @@protoc_insertion_point(builder_implements:evil_names_proto3.Class)
        evil_names_proto3.EvilNamesProto3OuterClass.ClassOrBuilder {
      // Construct using evil_names_proto3.EvilNamesProto3OuterClass.Class.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:evil_names_proto3.Class)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new evil_names_proto3.EvilNamesProto3OuterClass.Class();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<evil_names_proto3.EvilNamesProto3OuterClass.Class> parser = PARSER;
          if (parser == null) {
            synchronized (evil_names_proto3.EvilNamesProto3OuterClass.Class.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<evil_names_proto3.EvilNamesProto3OuterClass.Class>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:evil_names_proto3.Class)
    private static final evil_names_proto3.EvilNamesProto3OuterClass.Class DEFAULT_INSTANCE;
    static {
      Class defaultInstance = new Class();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Class.class, defaultInstance);
    }

    public static evil_names_proto3.EvilNamesProto3OuterClass.Class getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Class> PARSER;

    public static com.google.protobuf.Parser<Class> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
