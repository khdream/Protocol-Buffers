//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google/protobuf/map_lite_unittest.proto

package protobuf_unittest;

@kotlin.jvm.JvmSynthetic
inline fun testRequiredLite(block: protobuf_unittest.TestRequiredLiteKt.Dsl.() -> Unit): protobuf_unittest.MapLiteUnittest.TestRequiredLite =
  protobuf_unittest.TestRequiredLiteKt.Dsl._create(protobuf_unittest.MapLiteUnittest.TestRequiredLite.newBuilder()).apply { block() }._build()
object TestRequiredLiteKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: protobuf_unittest.MapLiteUnittest.TestRequiredLite.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: protobuf_unittest.MapLiteUnittest.TestRequiredLite.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): protobuf_unittest.MapLiteUnittest.TestRequiredLite = _builder.build()

    /**
     * <code>required int32 a = 1;</code>
     */
    var a: kotlin.Int
      @JvmName("getA")
      get() = _builder.getA()
      @JvmName("setA")
      set(value) {
        _builder.setA(value)
      }
    /**
     * <code>required int32 a = 1;</code>
     */
    fun clearA() {
      _builder.clearA()
    }
    /**
     * <code>required int32 a = 1;</code>
     * @return Whether the a field is set.
     */
    fun hasA(): kotlin.Boolean {
      return _builder.hasA()
    }

    /**
     * <code>required int32 b = 2;</code>
     */
    var b: kotlin.Int
      @JvmName("getB")
      get() = _builder.getB()
      @JvmName("setB")
      set(value) {
        _builder.setB(value)
      }
    /**
     * <code>required int32 b = 2;</code>
     */
    fun clearB() {
      _builder.clearB()
    }
    /**
     * <code>required int32 b = 2;</code>
     * @return Whether the b field is set.
     */
    fun hasB(): kotlin.Boolean {
      return _builder.hasB()
    }

    /**
     * <code>required int32 c = 3;</code>
     */
    var c: kotlin.Int
      @JvmName("getC")
      get() = _builder.getC()
      @JvmName("setC")
      set(value) {
        _builder.setC(value)
      }
    /**
     * <code>required int32 c = 3;</code>
     */
    fun clearC() {
      _builder.clearC()
    }
    /**
     * <code>required int32 c = 3;</code>
     * @return Whether the c field is set.
     */
    fun hasC(): kotlin.Boolean {
      return _builder.hasC()
    }
  }
}
inline fun protobuf_unittest.MapLiteUnittest.TestRequiredLite.copy(block: protobuf_unittest.TestRequiredLiteKt.Dsl.() -> Unit): protobuf_unittest.MapLiteUnittest.TestRequiredLite =
  protobuf_unittest.TestRequiredLiteKt.Dsl._create(this.toBuilder()).apply { block() }._build()
