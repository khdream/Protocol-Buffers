//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: com/google/protobuf/evil_names_proto2.proto

package evil_names_proto2;

@kotlin.jvm.JvmSynthetic
inline fun hardKeywordsAllTypes(block: evil_names_proto2.HardKeywordsAllTypesKt.Dsl.() -> Unit): evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes =
  evil_names_proto2.HardKeywordsAllTypesKt.Dsl._create(evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.newBuilder()).apply { block() }._build()
object HardKeywordsAllTypesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes = _builder.build()

    /**
     * <code>optional int32 as = 1;</code>
     */
    var as_: kotlin.Int
      @JvmName("getAs_")
      get() = _builder.getAs()
      @JvmName("setAs_")
      set(value) {
        _builder.setAs(value)
      }
    /**
     * <code>optional int32 as = 1;</code>
     */
    fun clearAs_() {
      _builder.clearAs()
    }
    /**
     * <code>optional int32 as = 1;</code>
     * @return Whether the as field is set.
     */
    fun hasAs_(): kotlin.Boolean {
      return _builder.hasAs()
    }

    /**
     * <code>optional string in = 2;</code>
     */
    var in_: kotlin.String
      @JvmName("getIn_")
      get() = _builder.getIn()
      @JvmName("setIn_")
      set(value) {
        _builder.setIn(value)
      }
    /**
     * <code>optional string in = 2;</code>
     */
    fun clearIn_() {
      _builder.clearIn()
    }
    /**
     * <code>optional string in = 2;</code>
     * @return Whether the in field is set.
     */
    fun hasIn_(): kotlin.Boolean {
      return _builder.hasIn()
    }

    /**
     * <code>optional .evil_names_proto2.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     */
    var break_: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum
      @JvmName("getBreak_")
      get() = _builder.getBreak()
      @JvmName("setBreak_")
      set(value) {
        _builder.setBreak(value)
      }
    /**
     * <code>optional .evil_names_proto2.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     */
    fun clearBreak_() {
      _builder.clearBreak()
    }
    /**
     * <code>optional .evil_names_proto2.HardKeywordsAllTypes.NestedEnum break = 3;</code>
     * @return Whether the break field is set.
     */
    fun hasBreak_(): kotlin.Boolean {
      return _builder.hasBreak()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class Continue_Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
     val continue_: com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, Continue_Proxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getContinue_Map")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getContinueMap()
      )
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    @JvmName("putContinue_")
    fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, Continue_Proxy>
      .put(key: kotlin.Int, value: kotlin.Int) {
         _builder.putContinue(key, value)
       }
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setContinue_")
    inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, Continue_Proxy>
      .set(key: kotlin.Int, value: kotlin.Int) {
         put(key, value)
       }
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeContinue_")
    fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, Continue_Proxy>
      .remove(key: kotlin.Int) {
         _builder.removeContinue(key)
       }
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllContinue_")
    fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, Continue_Proxy>
      .putAll(map: kotlin.collections.Map<kotlin.Int, kotlin.Int>) {
         _builder.putAllContinue(map)
       }
    /**
     * <code>map&lt;int32, int32&gt; continue = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearContinue_")
    fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, Continue_Proxy>
      .clear() {
         _builder.clearContinue()
       }

    /**
     * <code>optional .evil_names_proto2.HardKeywordsAllTypes.NestedMessage do = 5;</code>
     */
    var do_: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage
      @JvmName("getDo_")
      get() = _builder.getDo()
      @JvmName("setDo_")
      set(value) {
        _builder.setDo(value)
      }
    /**
     * <code>optional .evil_names_proto2.HardKeywordsAllTypes.NestedMessage do = 5;</code>
     */
    fun clearDo_() {
      _builder.clearDo()
    }
    /**
     * <code>optional .evil_names_proto2.HardKeywordsAllTypes.NestedMessage do = 5;</code>
     * @return Whether the do field is set.
     */
    fun hasDo_(): kotlin.Boolean {
      return _builder.hasDo()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class Else_Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated int32 else = 6;</code>
     */
     val else_: com.google.protobuf.kotlin.DslList<kotlin.Int, Else_Proxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getElseList()
      )
    /**
     * <code>repeated int32 else = 6;</code>
     * @param value The else to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addElse_")
    fun com.google.protobuf.kotlin.DslList<kotlin.Int, Else_Proxy>.add(value: kotlin.Int) {
      _builder.addElse(value)
    }/**
     * <code>repeated int32 else = 6;</code>
     * @param value The else to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignElse_")
    inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, Else_Proxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * <code>repeated int32 else = 6;</code>
     * @param values The else to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllElse_")
    fun com.google.protobuf.kotlin.DslList<kotlin.Int, Else_Proxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllElse(values)
    }/**
     * <code>repeated int32 else = 6;</code>
     * @param values The else to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllElse_")
    inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, Else_Proxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * <code>repeated int32 else = 6;</code>
     * @param index The index to set the value at.
     * @param value The else to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setElse_")
    operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, Else_Proxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setElse(index, value)
    }/**
     * <code>repeated int32 else = 6;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearElse_")
    fun com.google.protobuf.kotlin.DslList<kotlin.Int, Else_Proxy>.clear() {
      _builder.clearElse()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class For_Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string for = 7;</code>
     * @return A list containing the for.
     */
    val for_: com.google.protobuf.kotlin.DslList<kotlin.String, For_Proxy>
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getForList()
      )
    /**
     * <code>repeated string for = 7;</code>
     * @param value The for to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFor_")
    fun com.google.protobuf.kotlin.DslList<kotlin.String, For_Proxy>.add(value: kotlin.String) {
      _builder.addFor(value)
    }
    /**
     * <code>repeated string for = 7;</code>
     * @param value The for to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFor_")
    inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, For_Proxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string for = 7;</code>
     * @param values The for to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFor_")
    fun com.google.protobuf.kotlin.DslList<kotlin.String, For_Proxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllFor(values)
    }
    /**
     * <code>repeated string for = 7;</code>
     * @param values The for to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFor_")
    inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, For_Proxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string for = 7;</code>
     * @param index The index to set the value at.
     * @param value The for to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFor_")
    operator fun com.google.protobuf.kotlin.DslList<kotlin.String, For_Proxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setFor(index, value)
    }/**
     * <code>repeated string for = 7;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFor_")
    fun com.google.protobuf.kotlin.DslList<kotlin.String, For_Proxy>.clear() {
      _builder.clearFor()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class Fun_Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     */
     val fun_: com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum, Fun_Proxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFunList()
      )
    /**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param value The fun to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFun_")
    fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum, Fun_Proxy>.add(value: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum) {
      _builder.addFun(value)
    }/**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param value The fun to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFun_")
    inline operator fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum, Fun_Proxy>.plusAssign(value: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum) {
      add(value)
    }/**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param values The fun to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFun_")
    fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum, Fun_Proxy>.addAll(values: kotlin.collections.Iterable<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum>) {
      _builder.addAllFun(values)
    }/**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param values The fun to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFun_")
    inline operator fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum, Fun_Proxy>.plusAssign(values: kotlin.collections.Iterable<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum>) {
      addAll(values)
    }/**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     * @param index The index to set the value at.
     * @param value The fun to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFun_")
    operator fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum, Fun_Proxy>.set(index: kotlin.Int, value: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum) {
      _builder.setFun(index, value)
    }/**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedEnum fun = 8;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFun_")
    fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedEnum, Fun_Proxy>.clear() {
      _builder.clearFun()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class If_Proxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
     val if_: com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage, If_Proxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getIfList()
      )
    /**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     * @param value The if to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addIf_")
    fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage, If_Proxy>.add(value: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage) {
      _builder.addIf(value)
    }/**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     * @param value The if to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignIf_")
    inline operator fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage, If_Proxy>.plusAssign(value: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage) {
      add(value)
    }/**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     * @param values The if to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllIf_")
    fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage, If_Proxy>.addAll(values: kotlin.collections.Iterable<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage>) {
      _builder.addAllIf(values)
    }/**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     * @param values The if to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllIf_")
    inline operator fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage, If_Proxy>.plusAssign(values: kotlin.collections.Iterable<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage>) {
      addAll(values)
    }/**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     * @param index The index to set the value at.
     * @param value The if to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setIf_")
    operator fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage, If_Proxy>.set(index: kotlin.Int, value: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage) {
      _builder.setIf(index, value)
    }/**
     * <code>repeated .evil_names_proto2.HardKeywordsAllTypes.NestedMessage if = 9;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearIf_")
    fun com.google.protobuf.kotlin.DslList<evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage, If_Proxy>.clear() {
      _builder.clearIf()
    }}
  @kotlin.jvm.JvmSynthetic
  inline fun nestedMessage(block: evil_names_proto2.HardKeywordsAllTypesKt.NestedMessageKt.Dsl.() -> Unit): evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage =
    evil_names_proto2.HardKeywordsAllTypesKt.NestedMessageKt.Dsl._create(evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage.newBuilder()).apply { block() }._build()
  object NestedMessageKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      @kotlin.jvm.JvmField private val _builder: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage = _builder.build()

      /**
       * <code>optional int32 while = 1;</code>
       */
      var while_: kotlin.Int
        @JvmName("getWhile_")
        get() = _builder.getWhile()
        @JvmName("setWhile_")
        set(value) {
          _builder.setWhile(value)
        }
      /**
       * <code>optional int32 while = 1;</code>
       */
      fun clearWhile_() {
        _builder.clearWhile()
      }
      /**
       * <code>optional int32 while = 1;</code>
       * @return Whether the while field is set.
       */
      fun hasWhile_(): kotlin.Boolean {
        return _builder.hasWhile()
      }
    }
  }
}
inline fun evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.copy(block: evil_names_proto2.HardKeywordsAllTypesKt.Dsl.() -> Unit): evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes =
  evil_names_proto2.HardKeywordsAllTypesKt.Dsl._create(this.toBuilder()).apply { block() }._build()
inline fun evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage.copy(block: evil_names_proto2.HardKeywordsAllTypesKt.NestedMessageKt.Dsl.() -> Unit): evil_names_proto2.EvilNamesProto2OuterClass.HardKeywordsAllTypes.NestedMessage =
  evil_names_proto2.HardKeywordsAllTypesKt.NestedMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()
